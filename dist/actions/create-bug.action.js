"use strict";
var Ph = Object.create;
var Wn = Object.defineProperty;
var Ch = Object.getOwnPropertyDescriptor;
var jh = Object.getOwnPropertyNames;
var Ah = Object.getPrototypeOf,
  Oh = Object.prototype.hasOwnProperty;
var A = (e, t) => () => (e && (t = e((e = 0))), t);
var x = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports),
  Bo = (e, t) => {
    for (var i in t) Wn(e, i, { get: t[i], enumerable: !0 });
  },
  Hu = (e, t, i, a) => {
    if ((t && typeof t == "object") || typeof t == "function")
      for (let u of jh(t))
        !Oh.call(e, u) &&
          u !== i &&
          Wn(e, u, {
            get: () => t[u],
            enumerable: !(a = Ch(t, u)) || a.enumerable,
          });
    return e;
  };
var Uh = (e, t, i) => (
    (i = e != null ? Ph(Ah(e)) : {}),
    Hu(
      t || !e || !e.__esModule
        ? Wn(i, "default", { value: e, enumerable: !0 })
        : i,
      e
    )
  ),
  zu = (e) => Hu(Wn({}, "__esModule", { value: !0 }), e);
var Qu = (e, t, i) =>
  new Promise((a, u) => {
    var l = (n) => {
        try {
          s(i.next(n));
        } catch (o) {
          u(o);
        }
      },
      r = (n) => {
        try {
          s(i.throw(n));
        } catch (o) {
          u(o);
        }
      },
      s = (n) => (n.done ? a(n.value) : Promise.resolve(n.value).then(l, r));
    s((i = i.apply(e, t)).next());
  });
var _o = x(($n) => {
  "use strict";
  Object.defineProperty($n, "__esModule", { value: !0 });
  var Mo = require("url"),
    Ju = require("path"),
    xo = class {
      constructor(t) {
        (this.name = "Invalid resource version"), (this.message = t);
      }
    };
  $n.InvalidApiResourceVersionError = xo;
  var ui = class {
    constructor(t, i) {
      (this.baseUrl = t),
        (this.basePath = Mo.parse(t).pathname),
        (this.restClient = i),
        (this._locationsByAreaPromises = {}),
        (this._initializationPromise = Promise.resolve(!0));
    }
    autoNegotiateApiVersion(t, i) {
      let a, u, l;
      if (i) {
        let r = new RegExp("(\\d+(\\.\\d+)?)(-preview(\\.(\\d+))?)?"),
          s = !1,
          n,
          o = r.exec(i);
        o &&
          o[1] &&
          ((u = +o[1]),
          (l = o[1]),
          o[3] && ((s = !0), o[5] && (n = +o[5])),
          (u <= +t.releasedVersion ||
            (!n && u <= +t.maxVersion && s) ||
            (n && u <= +t.maxVersion && n <= +t.resourceVersion)) &&
            (a = i));
      }
      return (
        a ||
          (u < +t.maxVersion
            ? (a = l + "-preview")
            : t.maxVersion === t.releasedVersion
            ? (a = t.maxVersion)
            : (a = t.maxVersion + "-preview." + t.resourceVersion)),
        a
      );
    }
    getVersioningData(t, i, a, u, l) {
      let r;
      return this.beginGetLocation(i, a).then((s) => {
        if (!s)
          throw new Error(
            "Failed to find api location for area: " + i + " id: " + a
          );
        return (
          (t = this.autoNegotiateApiVersion(s, t)),
          (r = this.getRequestUrl(
            s.routeTemplate,
            s.area,
            s.resourceName,
            u,
            l
          )),
          { apiVersion: t, requestUrl: r }
        );
      });
    }
    _setInitializationPromise(t) {
      t && (this._initializationPromise = t);
    }
    beginGetLocation(t, i) {
      return this._initializationPromise
        .then(() => this.beginGetAreaLocations(t))
        .then((a) => a[(i || "").toLowerCase()]);
    }
    beginGetAreaLocations(t) {
      let i = this._locationsByAreaPromises[t];
      if (!i) {
        let a = this.resolveUrl(ui.APIS_RELATIVE_PATH + "/" + t);
        i = this.restClient.options(a).then((u) => {
          let l = {},
            r = u.result.value,
            s;
          for (s = 0; s < r.length; s++) {
            let n = r[s];
            l[n.id.toLowerCase()] = n;
          }
          return (this._locationsByAreaPromises[t] = i), l;
        });
      }
      return i;
    }
    resolveUrl(t) {
      return Mo.resolve(this.baseUrl, Ju.join(this.basePath, t));
    }
    queryParamsToStringHelper(t, i) {
      if (t == null || t.length === 0) return "";
      let a = "";
      if (typeof t != "string") {
        for (let u in t)
          if (t.hasOwnProperty(u)) {
            let l = t[u],
              r = i + encodeURIComponent(u.toString()) + ".";
            a += this.queryParamsToStringHelper(l, r);
          }
      }
      if (a === "" && i.length > 0) {
        let u =
          typeof t == "object" && "toUTCString" in t
            ? t.toUTCString()
            : t.toString();
        a = i.slice(0, -1) + "=" + encodeURIComponent(u) + "&";
      }
      return a;
    }
    queryParamsToString(t) {
      return ("?" + this.queryParamsToStringHelper(t, "")).slice(0, -1);
    }
    getRequestUrl(t, i, a, u, l) {
      (u = u || {}), u.area || (u.area = i), u.resource || (u.resource = a);
      let r = this.replaceRouteValues(t, u);
      return (
        l && (r += this.queryParamsToString(l)),
        Mo.resolve(this.baseUrl, Ju.join(this.basePath, r))
      );
    }
    replaceRouteValues(t, i) {
      let a = "",
        u = "",
        l = "",
        r = !1,
        s,
        n = t.length,
        o;
      for (s = 0; s < n; s++)
        if (((o = t[s]), r))
          if (o == "}") {
            if (((r = !1), i[l])) u += encodeURIComponent(i[l]);
            else {
              let p = l.replace(/[^a-z0-9]/gi, "");
              i[p] && (u += encodeURIComponent(i[p]));
            }
            l = "";
          } else l += o;
        else
          o == "/"
            ? u && (a && (a += "/"), (a += u), (u = ""))
            : o == "{"
            ? s + 1 < n && t[s + 1] == "{"
              ? ((u += o), s++)
              : (r = !0)
            : o == "}"
            ? ((u += o), s + 1 < n && t[s + 1] == "}" && s++)
            : (u += o);
      return u && (a && (a += "/"), (a += u)), a;
    }
  };
  ui.APIS_RELATIVE_PATH = "_apis";
  ui.PREVIEW_INDICATOR = "-preview.";
  $n.VsoClient = ui;
});
var Ku = x((Hn) => {
  "use strict";
  Object.defineProperty(Hn, "__esModule", { value: !0 });
  var kh;
  (function (e) {
    var t;
    function i(d, c, f) {
      return d && c ? (Array.isArray(d) ? u(d, c, !0, f) : l(d, c, !0, f)) : d;
    }
    e.serialize = i;
    function a(d, c, f, h) {
      return (
        d &&
          (h && Array.isArray(d.value) && (d = d.value),
          c &&
            (Array.isArray(d) ? (d = u(d, c, !1, f)) : (d = l(d, c, !1, f)))),
        d
      );
    }
    e.deserialize = a;
    function u(d, c, f, h) {
      var T = d,
        q = [],
        j;
      for (j = 0; j < d.length; j++) {
        var F = d[j],
          U;
        Array.isArray(F) ? (U = u(F, c, f, h)) : (U = l(F, c, f, h)),
          h ? (q.push(U), U !== F && (T = q)) : (d[j] = U);
      }
      return T;
    }
    function l(d, c, f, h) {
      var T = d,
        q = !1;
      if (d && c.fields)
        for (var j in c.fields) {
          var F = c.fields[j],
            U = d[j],
            z = r(U, F, f, h);
          U !== z &&
            (h && !q && ((T = this._extend({}, d)), (q = !0)), (T[j] = z));
        }
      return T;
    }
    function r(d, c, f, h) {
      if (!d) return d;
      if (c.isArray)
        if (Array.isArray(d)) {
          for (var T = [], q = d, j = 0; j < d.length; j++) {
            var F = d[j],
              U = F;
            c.isDate
              ? (U = n(F, f))
              : c.enumType
              ? (U = s(c.enumType, F, f))
              : c.typeInfo &&
                (Array.isArray(F)
                  ? (U = u(F, c.typeInfo, f, h))
                  : (U = l(F, c.typeInfo, f, h))),
              h ? (T.push(U), U !== F && (q = T)) : (d[j] = U);
          }
          return q;
        } else return d;
      else if (c.isDictionary) {
        var z = !1,
          W = {};
        for (var fe in d) {
          var Ie = d[fe],
            Te = fe,
            Re = Ie;
          c.dictionaryKeyIsDate
            ? (Te = n(fe, f))
            : c.dictionaryKeyEnumType &&
              (Te = s(c.dictionaryKeyEnumType, fe, f)),
            c.dictionaryValueIsDate
              ? (Re = n(Ie, f))
              : c.dictionaryValueEnumType
              ? (Re = s(c.dictionaryValueEnumType, Ie, f))
              : c.dictionaryValueTypeInfo
              ? (Re = l(Re, c.dictionaryValueTypeInfo, f, h))
              : c.dictionaryValueFieldInfo &&
                (Re = r(Ie, c.dictionaryValueFieldInfo, f, h)),
            (W[Te] = Re),
            (fe !== Te || Ie !== Re) && (z = !0);
        }
        return z ? W : d;
      } else
        return c.isDate
          ? n(d, f)
          : c.enumType
          ? s(c.enumType, d, f)
          : c.typeInfo
          ? l(d, c.typeInfo, f, h)
          : d;
    }
    function s(d, c, f) {
      if (!(f && typeof c == "number")) {
        if (!f && typeof c == "string") {
          var h = 0;
          if (c)
            for (var T = c.split(","), q = 0; q < T.length; q++) {
              var j = T[q],
                F = j.replace(/^\s+|\s+$/g, "") || "";
              if (F) {
                var U = d.enumValues[F];
                if (!U) {
                  var z = F.toLowerCase();
                  if (z !== F)
                    for (var W in d.enumValues) {
                      var fe = d.enumValues[W];
                      if (W.toLowerCase() === z) {
                        U = fe;
                        break;
                      }
                    }
                }
                U && (h |= U);
              }
            }
          return h;
        }
      }
      return c;
    }
    function n(d, c) {
      if (!c && typeof d == "string") {
        var f = new Date(d);
        return (
          isNaN(f) &&
            navigator.userAgent &&
            /msie/i.test(navigator.userAgent) &&
            (f = o(d)),
          f
        );
      }
      return d;
    }
    function o(d) {
      var c;
      return (
        t ||
          (t = new RegExp("(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+):(\\d+).(\\d+)Z")),
        (c = t.exec(d)),
        c
          ? new Date(
              Date.UTC(
                parseInt(c[1]),
                parseInt(c[2]) - 1,
                parseInt(c[3]),
                parseInt(c[4]),
                parseInt(c[5]),
                parseInt(c[6]),
                parseInt(c[7])
              )
            )
          : null
      );
    }
    var p = function (d) {
      d = d || {};
      for (var c = 1; c < arguments.length; c++)
        if (arguments[c])
          for (var f in arguments[c])
            arguments[c].hasOwnProperty(f) && (d[f] = arguments[c][f]);
      return d;
    };
  })((kh = Hn.ContractSerializer || (Hn.ContractSerializer = {})));
});
var Zu = x((yb, Xu) => {
  "use strict";
  Xu.exports = function () {
    if (
      typeof Symbol != "function" ||
      typeof Object.getOwnPropertySymbols != "function"
    )
      return !1;
    if (typeof Symbol.iterator == "symbol") return !0;
    var t = {},
      i = Symbol("test"),
      a = Object(i);
    if (
      typeof i == "string" ||
      Object.prototype.toString.call(i) !== "[object Symbol]" ||
      Object.prototype.toString.call(a) !== "[object Symbol]"
    )
      return !1;
    var u = 42;
    t[i] = u;
    for (i in t) return !1;
    if (
      (typeof Object.keys == "function" && Object.keys(t).length !== 0) ||
      (typeof Object.getOwnPropertyNames == "function" &&
        Object.getOwnPropertyNames(t).length !== 0)
    )
      return !1;
    var l = Object.getOwnPropertySymbols(t);
    if (
      l.length !== 1 ||
      l[0] !== i ||
      !Object.prototype.propertyIsEnumerable.call(t, i)
    )
      return !1;
    if (typeof Object.getOwnPropertyDescriptor == "function") {
      var r = Object.getOwnPropertyDescriptor(t, i);
      if (r.value !== u || r.enumerable !== !0) return !1;
    }
    return !0;
  };
});
var tp = x((vb, ep) => {
  "use strict";
  var Yu = typeof Symbol < "u" && Symbol,
    Eh = Zu();
  ep.exports = function () {
    return typeof Yu != "function" ||
      typeof Symbol != "function" ||
      typeof Yu("foo") != "symbol" ||
      typeof Symbol("bar") != "symbol"
      ? !1
      : Eh();
  };
});
var np = x((mb, rp) => {
  "use strict";
  var ip = { foo: {} },
    Sh = Object;
  rp.exports = function () {
    return (
      { __proto__: ip }.foo === ip.foo && !({ __proto__: null } instanceof Sh)
    );
  };
});
var op = x((gb, sp) => {
  "use strict";
  var Nh = "Function.prototype.bind called on incompatible ",
    Go = Array.prototype.slice,
    Bh = Object.prototype.toString,
    Mh = "[object Function]";
  sp.exports = function (t) {
    var i = this;
    if (typeof i != "function" || Bh.call(i) !== Mh)
      throw new TypeError(Nh + i);
    for (
      var a = Go.call(arguments, 1),
        u,
        l = function () {
          if (this instanceof u) {
            var p = i.apply(this, a.concat(Go.call(arguments)));
            return Object(p) === p ? p : this;
          } else return i.apply(t, a.concat(Go.call(arguments)));
        },
        r = Math.max(0, i.length - a.length),
        s = [],
        n = 0;
      n < r;
      n++
    )
      s.push("$" + n);
    if (
      ((u = Function(
        "binder",
        "return function (" +
          s.join(",") +
          "){ return binder.apply(this,arguments); }"
      )(l)),
      i.prototype)
    ) {
      var o = function () {};
      (o.prototype = i.prototype),
        (u.prototype = new o()),
        (o.prototype = null);
    }
    return u;
  };
});
var zn = x((Ib, ap) => {
  "use strict";
  var xh = op();
  ap.exports = Function.prototype.bind || xh;
});
var up = x((Tb, lp) => {
  "use strict";
  var _h = zn();
  lp.exports = _h.call(Function.call, Object.prototype.hasOwnProperty);
});
var Kn = x((Rb, hp) => {
  "use strict";
  var oe,
    _i = SyntaxError,
    fp = Function,
    xi = TypeError,
    Fo = function (e) {
      try {
        return fp('"use strict"; return (' + e + ").constructor;")();
      } catch {}
    },
    pi = Object.getOwnPropertyDescriptor;
  if (pi)
    try {
      pi({}, "");
    } catch {
      pi = null;
    }
  var Lo = function () {
      throw new xi();
    },
    Gh = pi
      ? (function () {
          try {
            return arguments.callee, Lo;
          } catch {
            try {
              return pi(arguments, "callee").get;
            } catch {
              return Lo;
            }
          }
        })()
      : Lo,
    Bi = tp()(),
    Fh = np()(),
    Ee =
      Object.getPrototypeOf ||
      (Fh
        ? function (e) {
            return e.__proto__;
          }
        : null),
    Mi = {},
    Lh = typeof Uint8Array > "u" || !Ee ? oe : Ee(Uint8Array),
    di = {
      "%AggregateError%": typeof AggregateError > "u" ? oe : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer > "u" ? oe : ArrayBuffer,
      "%ArrayIteratorPrototype%": Bi && Ee ? Ee([][Symbol.iterator]()) : oe,
      "%AsyncFromSyncIteratorPrototype%": oe,
      "%AsyncFunction%": Mi,
      "%AsyncGenerator%": Mi,
      "%AsyncGeneratorFunction%": Mi,
      "%AsyncIteratorPrototype%": Mi,
      "%Atomics%": typeof Atomics > "u" ? oe : Atomics,
      "%BigInt%": typeof BigInt > "u" ? oe : BigInt,
      "%BigInt64Array%": typeof BigInt64Array > "u" ? oe : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array > "u" ? oe : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView > "u" ? oe : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": Error,
      "%eval%": eval,
      "%EvalError%": EvalError,
      "%Float32Array%": typeof Float32Array > "u" ? oe : Float32Array,
      "%Float64Array%": typeof Float64Array > "u" ? oe : Float64Array,
      "%FinalizationRegistry%":
        typeof FinalizationRegistry > "u" ? oe : FinalizationRegistry,
      "%Function%": fp,
      "%GeneratorFunction%": Mi,
      "%Int8Array%": typeof Int8Array > "u" ? oe : Int8Array,
      "%Int16Array%": typeof Int16Array > "u" ? oe : Int16Array,
      "%Int32Array%": typeof Int32Array > "u" ? oe : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": Bi && Ee ? Ee(Ee([][Symbol.iterator]())) : oe,
      "%JSON%": typeof JSON == "object" ? JSON : oe,
      "%Map%": typeof Map > "u" ? oe : Map,
      "%MapIteratorPrototype%":
        typeof Map > "u" || !Bi || !Ee ? oe : Ee(new Map()[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": Object,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise > "u" ? oe : Promise,
      "%Proxy%": typeof Proxy > "u" ? oe : Proxy,
      "%RangeError%": RangeError,
      "%ReferenceError%": ReferenceError,
      "%Reflect%": typeof Reflect > "u" ? oe : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set > "u" ? oe : Set,
      "%SetIteratorPrototype%":
        typeof Set > "u" || !Bi || !Ee ? oe : Ee(new Set()[Symbol.iterator]()),
      "%SharedArrayBuffer%":
        typeof SharedArrayBuffer > "u" ? oe : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": Bi && Ee ? Ee(""[Symbol.iterator]()) : oe,
      "%Symbol%": Bi ? Symbol : oe,
      "%SyntaxError%": _i,
      "%ThrowTypeError%": Gh,
      "%TypedArray%": Lh,
      "%TypeError%": xi,
      "%Uint8Array%": typeof Uint8Array > "u" ? oe : Uint8Array,
      "%Uint8ClampedArray%":
        typeof Uint8ClampedArray > "u" ? oe : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array > "u" ? oe : Uint16Array,
      "%Uint32Array%": typeof Uint32Array > "u" ? oe : Uint32Array,
      "%URIError%": URIError,
      "%WeakMap%": typeof WeakMap > "u" ? oe : WeakMap,
      "%WeakRef%": typeof WeakRef > "u" ? oe : WeakRef,
      "%WeakSet%": typeof WeakSet > "u" ? oe : WeakSet,
    };
  if (Ee)
    try {
      null.error;
    } catch (e) {
      (pp = Ee(Ee(e))), (di["%Error.prototype%"] = pp);
    }
  var pp,
    Wh = function e(t) {
      var i;
      if (t === "%AsyncFunction%") i = Fo("async function () {}");
      else if (t === "%GeneratorFunction%") i = Fo("function* () {}");
      else if (t === "%AsyncGeneratorFunction%")
        i = Fo("async function* () {}");
      else if (t === "%AsyncGenerator%") {
        var a = e("%AsyncGeneratorFunction%");
        a && (i = a.prototype);
      } else if (t === "%AsyncIteratorPrototype%") {
        var u = e("%AsyncGenerator%");
        u && Ee && (i = Ee(u.prototype));
      }
      return (di[t] = i), i;
    },
    dp = {
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": [
        "AsyncGeneratorFunction",
        "prototype",
        "prototype",
      ],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"],
    },
    br = zn(),
    Qn = up(),
    $h = br.call(Function.call, Array.prototype.concat),
    Hh = br.call(Function.apply, Array.prototype.splice),
    cp = br.call(Function.call, String.prototype.replace),
    Jn = br.call(Function.call, String.prototype.slice),
    zh = br.call(Function.call, RegExp.prototype.exec),
    Qh =
      /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
    Jh = /\\(\\)?/g,
    Kh = function (t) {
      var i = Jn(t, 0, 1),
        a = Jn(t, -1);
      if (i === "%" && a !== "%")
        throw new _i("invalid intrinsic syntax, expected closing `%`");
      if (a === "%" && i !== "%")
        throw new _i("invalid intrinsic syntax, expected opening `%`");
      var u = [];
      return (
        cp(t, Qh, function (l, r, s, n) {
          u[u.length] = s ? cp(n, Jh, "$1") : r || l;
        }),
        u
      );
    },
    Xh = function (t, i) {
      var a = t,
        u;
      if ((Qn(dp, a) && ((u = dp[a]), (a = "%" + u[0] + "%")), Qn(di, a))) {
        var l = di[a];
        if ((l === Mi && (l = Wh(a)), typeof l > "u" && !i))
          throw new xi(
            "intrinsic " +
              t +
              " exists, but is not available. Please file an issue!"
          );
        return { alias: u, name: a, value: l };
      }
      throw new _i("intrinsic " + t + " does not exist!");
    };
  hp.exports = function (t, i) {
    if (typeof t != "string" || t.length === 0)
      throw new xi("intrinsic name must be a non-empty string");
    if (arguments.length > 1 && typeof i != "boolean")
      throw new xi('"allowMissing" argument must be a boolean');
    if (zh(/^%?[^%]*%?$/, t) === null)
      throw new _i(
        "`%` may not be present anywhere but at the beginning and end of the intrinsic name"
      );
    var a = Kh(t),
      u = a.length > 0 ? a[0] : "",
      l = Xh("%" + u + "%", i),
      r = l.name,
      s = l.value,
      n = !1,
      o = l.alias;
    o && ((u = o[0]), Hh(a, $h([0, 1], o)));
    for (var p = 1, d = !0; p < a.length; p += 1) {
      var c = a[p],
        f = Jn(c, 0, 1),
        h = Jn(c, -1);
      if (
        (f === '"' ||
          f === "'" ||
          f === "`" ||
          h === '"' ||
          h === "'" ||
          h === "`") &&
        f !== h
      )
        throw new _i("property names with quotes must have matching quotes");
      if (
        ((c === "constructor" || !d) && (n = !0),
        (u += "." + c),
        (r = "%" + u + "%"),
        Qn(di, r))
      )
        s = di[r];
      else if (s != null) {
        if (!(c in s)) {
          if (!i)
            throw new xi(
              "base intrinsic for " +
                t +
                " exists, but the property is not available."
            );
          return;
        }
        if (pi && p + 1 >= a.length) {
          var T = pi(s, c);
          (d = !!T),
            d && "get" in T && !("originalValue" in T.get)
              ? (s = T.get)
              : (s = s[c]);
        } else (d = Qn(s, c)), (s = s[c]);
        d && !n && (di[r] = s);
      }
    }
    return s;
  };
});
var Tp = x((Vb, Xn) => {
  "use strict";
  var Wo = zn(),
    Gi = Kn(),
    mp = Gi("%Function.prototype.apply%"),
    gp = Gi("%Function.prototype.call%"),
    Ip = Gi("%Reflect.apply%", !0) || Wo.call(gp, mp),
    yp = Gi("%Object.getOwnPropertyDescriptor%", !0),
    ci = Gi("%Object.defineProperty%", !0),
    Zh = Gi("%Math.max%");
  if (ci)
    try {
      ci({}, "a", { value: 1 });
    } catch {
      ci = null;
    }
  Xn.exports = function (t) {
    var i = Ip(Wo, gp, arguments);
    if (yp && ci) {
      var a = yp(i, "length");
      a.configurable &&
        ci(i, "length", {
          value: 1 + Zh(0, t.length - (arguments.length - 1)),
        });
    }
    return i;
  };
  var vp = function () {
    return Ip(Wo, mp, arguments);
  };
  ci ? ci(Xn.exports, "apply", { value: vp }) : (Xn.exports.apply = vp);
});
var Dp = x((bb, bp) => {
  "use strict";
  var Rp = Kn(),
    Vp = Tp(),
    Yh = Vp(Rp("String.prototype.indexOf"));
  bp.exports = function (t, i) {
    var a = Rp(t, !!i);
    return typeof a == "function" && Yh(t, ".prototype.") > -1 ? Vp(a) : a;
  };
});
var qp = x((Db, wp) => {
  wp.exports = require("util").inspect;
});
var Hp = x((wb, $p) => {
  var ea = typeof Map == "function" && Map.prototype,
    $o =
      Object.getOwnPropertyDescriptor && ea
        ? Object.getOwnPropertyDescriptor(Map.prototype, "size")
        : null,
    Yn = ea && $o && typeof $o.get == "function" ? $o.get : null,
    Pp = ea && Map.prototype.forEach,
    ta = typeof Set == "function" && Set.prototype,
    Ho =
      Object.getOwnPropertyDescriptor && ta
        ? Object.getOwnPropertyDescriptor(Set.prototype, "size")
        : null,
    es = ta && Ho && typeof Ho.get == "function" ? Ho.get : null,
    Cp = ta && Set.prototype.forEach,
    ey = typeof WeakMap == "function" && WeakMap.prototype,
    wr = ey ? WeakMap.prototype.has : null,
    ty = typeof WeakSet == "function" && WeakSet.prototype,
    qr = ty ? WeakSet.prototype.has : null,
    iy = typeof WeakRef == "function" && WeakRef.prototype,
    jp = iy ? WeakRef.prototype.deref : null,
    ry = Boolean.prototype.valueOf,
    ny = Object.prototype.toString,
    sy = Function.prototype.toString,
    oy = String.prototype.match,
    ia = String.prototype.slice,
    Wt = String.prototype.replace,
    ay = String.prototype.toUpperCase,
    Ap = String.prototype.toLowerCase,
    xp = RegExp.prototype.test,
    Op = Array.prototype.concat,
    Vt = Array.prototype.join,
    ly = Array.prototype.slice,
    Up = Math.floor,
    Jo = typeof BigInt == "function" ? BigInt.prototype.valueOf : null,
    zo = Object.getOwnPropertySymbols,
    Ko =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? Symbol.prototype.toString
        : null,
    Fi = typeof Symbol == "function" && typeof Symbol.iterator == "object",
    Qe =
      typeof Symbol == "function" &&
      Symbol.toStringTag &&
      (typeof Symbol.toStringTag === Fi || "symbol")
        ? Symbol.toStringTag
        : null,
    _p = Object.prototype.propertyIsEnumerable,
    kp =
      (typeof Reflect == "function"
        ? Reflect.getPrototypeOf
        : Object.getPrototypeOf) ||
      ([].__proto__ === Array.prototype
        ? function (e) {
            return e.__proto__;
          }
        : null);
  function Ep(e, t) {
    if (
      e === 1 / 0 ||
      e === -1 / 0 ||
      e !== e ||
      (e && e > -1e3 && e < 1e3) ||
      xp.call(/e/, t)
    )
      return t;
    var i = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof e == "number") {
      var a = e < 0 ? -Up(-e) : Up(e);
      if (a !== e) {
        var u = String(a),
          l = ia.call(t, u.length + 1);
        return (
          Wt.call(u, i, "$&_") +
          "." +
          Wt.call(Wt.call(l, /([0-9]{3})/g, "$&_"), /_$/, "")
        );
      }
    }
    return Wt.call(t, i, "$&_");
  }
  var Xo = qp(),
    Sp = Xo.custom,
    Np = Fp(Sp) ? Sp : null;
  $p.exports = function e(t, i, a, u) {
    var l = i || {};
    if (
      Lt(l, "quoteStyle") &&
      l.quoteStyle !== "single" &&
      l.quoteStyle !== "double"
    )
      throw new TypeError('option "quoteStyle" must be "single" or "double"');
    if (
      Lt(l, "maxStringLength") &&
      (typeof l.maxStringLength == "number"
        ? l.maxStringLength < 0 && l.maxStringLength !== 1 / 0
        : l.maxStringLength !== null)
    )
      throw new TypeError(
        'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`'
      );
    var r = Lt(l, "customInspect") ? l.customInspect : !0;
    if (typeof r != "boolean" && r !== "symbol")
      throw new TypeError(
        "option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`"
      );
    if (
      Lt(l, "indent") &&
      l.indent !== null &&
      l.indent !== "	" &&
      !(parseInt(l.indent, 10) === l.indent && l.indent > 0)
    )
      throw new TypeError(
        'option "indent" must be "\\t", an integer > 0, or `null`'
      );
    if (Lt(l, "numericSeparator") && typeof l.numericSeparator != "boolean")
      throw new TypeError(
        'option "numericSeparator", if provided, must be `true` or `false`'
      );
    var s = l.numericSeparator;
    if (typeof t > "u") return "undefined";
    if (t === null) return "null";
    if (typeof t == "boolean") return t ? "true" : "false";
    if (typeof t == "string") return Wp(t, l);
    if (typeof t == "number") {
      if (t === 0) return 1 / 0 / t > 0 ? "0" : "-0";
      var n = String(t);
      return s ? Ep(t, n) : n;
    }
    if (typeof t == "bigint") {
      var o = String(t) + "n";
      return s ? Ep(t, o) : o;
    }
    var p = typeof l.depth > "u" ? 5 : l.depth;
    if ((typeof a > "u" && (a = 0), a >= p && p > 0 && typeof t == "object"))
      return Zo(t) ? "[Array]" : "[Object]";
    var d = qy(l, a);
    if (typeof u > "u") u = [];
    else if (Lp(u, t) >= 0) return "[Circular]";
    function c(rt, mt, Si) {
      if ((mt && ((u = ly.call(u)), u.push(mt)), Si)) {
        var Ni = { depth: l.depth };
        return (
          Lt(l, "quoteStyle") && (Ni.quoteStyle = l.quoteStyle),
          e(rt, Ni, a + 1, u)
        );
      }
      return e(rt, l, a + 1, u);
    }
    if (typeof t == "function" && !Bp(t)) {
      var f = my(t),
        h = Zn(t, c);
      return (
        "[Function" +
        (f ? ": " + f : " (anonymous)") +
        "]" +
        (h.length > 0 ? " { " + Vt.call(h, ", ") + " }" : "")
      );
    }
    if (Fp(t)) {
      var T = Fi
        ? Wt.call(String(t), /^(Symbol\(.*\))_[^)]*$/, "$1")
        : Ko.call(t);
      return typeof t == "object" && !Fi ? Dr(T) : T;
    }
    if (by(t)) {
      for (
        var q = "<" + Ap.call(String(t.nodeName)),
          j = t.attributes || [],
          F = 0;
        F < j.length;
        F++
      )
        q += " " + j[F].name + "=" + Gp(uy(j[F].value), "double", l);
      return (
        (q += ">"),
        t.childNodes && t.childNodes.length && (q += "..."),
        (q += "</" + Ap.call(String(t.nodeName)) + ">"),
        q
      );
    }
    if (Zo(t)) {
      if (t.length === 0) return "[]";
      var U = Zn(t, c);
      return d && !wy(U)
        ? "[" + Yo(U, d) + "]"
        : "[ " + Vt.call(U, ", ") + " ]";
    }
    if (dy(t)) {
      var z = Zn(t, c);
      return !("cause" in Error.prototype) &&
        "cause" in t &&
        !_p.call(t, "cause")
        ? "{ [" +
            String(t) +
            "] " +
            Vt.call(Op.call("[cause]: " + c(t.cause), z), ", ") +
            " }"
        : z.length === 0
        ? "[" + String(t) + "]"
        : "{ [" + String(t) + "] " + Vt.call(z, ", ") + " }";
    }
    if (typeof t == "object" && r) {
      if (Np && typeof t[Np] == "function" && Xo)
        return Xo(t, { depth: p - a });
      if (r !== "symbol" && typeof t.inspect == "function") return t.inspect();
    }
    if (gy(t)) {
      var W = [];
      return (
        Pp &&
          Pp.call(t, function (rt, mt) {
            W.push(c(mt, t, !0) + " => " + c(rt, t));
          }),
        Mp("Map", Yn.call(t), W, d)
      );
    }
    if (Ry(t)) {
      var fe = [];
      return (
        Cp &&
          Cp.call(t, function (rt) {
            fe.push(c(rt, t));
          }),
        Mp("Set", es.call(t), fe, d)
      );
    }
    if (Iy(t)) return Qo("WeakMap");
    if (Vy(t)) return Qo("WeakSet");
    if (Ty(t)) return Qo("WeakRef");
    if (fy(t)) return Dr(c(Number(t)));
    if (yy(t)) return Dr(c(Jo.call(t)));
    if (hy(t)) return Dr(ry.call(t));
    if (cy(t)) return Dr(c(String(t)));
    if (!py(t) && !Bp(t)) {
      var Ie = Zn(t, c),
        Te = kp
          ? kp(t) === Object.prototype
          : t instanceof Object || t.constructor === Object,
        Re = t instanceof Object ? "" : "null prototype",
        Ge =
          !Te && Qe && Object(t) === t && Qe in t
            ? ia.call($t(t), 8, -1)
            : Re
            ? "Object"
            : "",
        ft =
          Te || typeof t.constructor != "function"
            ? ""
            : t.constructor.name
            ? t.constructor.name + " "
            : "",
        Ye =
          ft +
          (Ge || Re
            ? "[" + Vt.call(Op.call([], Ge || [], Re || []), ": ") + "] "
            : "");
      return Ie.length === 0
        ? Ye + "{}"
        : d
        ? Ye + "{" + Yo(Ie, d) + "}"
        : Ye + "{ " + Vt.call(Ie, ", ") + " }";
    }
    return String(t);
  };
  function Gp(e, t, i) {
    var a = (i.quoteStyle || t) === "double" ? '"' : "'";
    return a + e + a;
  }
  function uy(e) {
    return Wt.call(String(e), /"/g, "&quot;");
  }
  function Zo(e) {
    return (
      $t(e) === "[object Array]" && (!Qe || !(typeof e == "object" && Qe in e))
    );
  }
  function py(e) {
    return (
      $t(e) === "[object Date]" && (!Qe || !(typeof e == "object" && Qe in e))
    );
  }
  function Bp(e) {
    return (
      $t(e) === "[object RegExp]" && (!Qe || !(typeof e == "object" && Qe in e))
    );
  }
  function dy(e) {
    return (
      $t(e) === "[object Error]" && (!Qe || !(typeof e == "object" && Qe in e))
    );
  }
  function cy(e) {
    return (
      $t(e) === "[object String]" && (!Qe || !(typeof e == "object" && Qe in e))
    );
  }
  function fy(e) {
    return (
      $t(e) === "[object Number]" && (!Qe || !(typeof e == "object" && Qe in e))
    );
  }
  function hy(e) {
    return (
      $t(e) === "[object Boolean]" &&
      (!Qe || !(typeof e == "object" && Qe in e))
    );
  }
  function Fp(e) {
    if (Fi) return e && typeof e == "object" && e instanceof Symbol;
    if (typeof e == "symbol") return !0;
    if (!e || typeof e != "object" || !Ko) return !1;
    try {
      return Ko.call(e), !0;
    } catch {}
    return !1;
  }
  function yy(e) {
    if (!e || typeof e != "object" || !Jo) return !1;
    try {
      return Jo.call(e), !0;
    } catch {}
    return !1;
  }
  var vy =
    Object.prototype.hasOwnProperty ||
    function (e) {
      return e in this;
    };
  function Lt(e, t) {
    return vy.call(e, t);
  }
  function $t(e) {
    return ny.call(e);
  }
  function my(e) {
    if (e.name) return e.name;
    var t = oy.call(sy.call(e), /^function\s*([\w$]+)/);
    return t ? t[1] : null;
  }
  function Lp(e, t) {
    if (e.indexOf) return e.indexOf(t);
    for (var i = 0, a = e.length; i < a; i++) if (e[i] === t) return i;
    return -1;
  }
  function gy(e) {
    if (!Yn || !e || typeof e != "object") return !1;
    try {
      Yn.call(e);
      try {
        es.call(e);
      } catch {
        return !0;
      }
      return e instanceof Map;
    } catch {}
    return !1;
  }
  function Iy(e) {
    if (!wr || !e || typeof e != "object") return !1;
    try {
      wr.call(e, wr);
      try {
        qr.call(e, qr);
      } catch {
        return !0;
      }
      return e instanceof WeakMap;
    } catch {}
    return !1;
  }
  function Ty(e) {
    if (!jp || !e || typeof e != "object") return !1;
    try {
      return jp.call(e), !0;
    } catch {}
    return !1;
  }
  function Ry(e) {
    if (!es || !e || typeof e != "object") return !1;
    try {
      es.call(e);
      try {
        Yn.call(e);
      } catch {
        return !0;
      }
      return e instanceof Set;
    } catch {}
    return !1;
  }
  function Vy(e) {
    if (!qr || !e || typeof e != "object") return !1;
    try {
      qr.call(e, qr);
      try {
        wr.call(e, wr);
      } catch {
        return !0;
      }
      return e instanceof WeakSet;
    } catch {}
    return !1;
  }
  function by(e) {
    return !e || typeof e != "object"
      ? !1
      : typeof HTMLElement < "u" && e instanceof HTMLElement
      ? !0
      : typeof e.nodeName == "string" && typeof e.getAttribute == "function";
  }
  function Wp(e, t) {
    if (e.length > t.maxStringLength) {
      var i = e.length - t.maxStringLength,
        a = "... " + i + " more character" + (i > 1 ? "s" : "");
      return Wp(ia.call(e, 0, t.maxStringLength), t) + a;
    }
    var u = Wt.call(Wt.call(e, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, Dy);
    return Gp(u, "single", t);
  }
  function Dy(e) {
    var t = e.charCodeAt(0),
      i = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[t];
    return i ? "\\" + i : "\\x" + (t < 16 ? "0" : "") + ay.call(t.toString(16));
  }
  function Dr(e) {
    return "Object(" + e + ")";
  }
  function Qo(e) {
    return e + " { ? }";
  }
  function Mp(e, t, i, a) {
    var u = a ? Yo(i, a) : Vt.call(i, ", ");
    return e + " (" + t + ") {" + u + "}";
  }
  function wy(e) {
    for (var t = 0; t < e.length; t++)
      if (
        Lp(
          e[t],
          `
`
        ) >= 0
      )
        return !1;
    return !0;
  }
  function qy(e, t) {
    var i;
    if (e.indent === "	") i = "	";
    else if (typeof e.indent == "number" && e.indent > 0)
      i = Vt.call(Array(e.indent + 1), " ");
    else return null;
    return { base: i, prev: Vt.call(Array(t + 1), i) };
  }
  function Yo(e, t) {
    if (e.length === 0) return "";
    var i =
      `
` +
      t.prev +
      t.base;
    return (
      i +
      Vt.call(e, "," + i) +
      `
` +
      t.prev
    );
  }
  function Zn(e, t) {
    var i = Zo(e),
      a = [];
    if (i) {
      a.length = e.length;
      for (var u = 0; u < e.length; u++) a[u] = Lt(e, u) ? t(e[u], e) : "";
    }
    var l = typeof zo == "function" ? zo(e) : [],
      r;
    if (Fi) {
      r = {};
      for (var s = 0; s < l.length; s++) r["$" + l[s]] = l[s];
    }
    for (var n in e)
      Lt(e, n) &&
        ((i && String(Number(n)) === n && n < e.length) ||
          (Fi && r["$" + n] instanceof Symbol) ||
          (xp.call(/[^\w$]/, n)
            ? a.push(t(n, e) + ": " + t(e[n], e))
            : a.push(n + ": " + t(e[n], e))));
    if (typeof zo == "function")
      for (var o = 0; o < l.length; o++)
        _p.call(e, l[o]) && a.push("[" + t(l[o]) + "]: " + t(e[l[o]], e));
    return a;
  }
});
var Qp = x((qb, zp) => {
  "use strict";
  var ra = Kn(),
    Li = Dp(),
    Py = Hp(),
    Cy = ra("%TypeError%"),
    ts = ra("%WeakMap%", !0),
    is = ra("%Map%", !0),
    jy = Li("WeakMap.prototype.get", !0),
    Ay = Li("WeakMap.prototype.set", !0),
    Oy = Li("WeakMap.prototype.has", !0),
    Uy = Li("Map.prototype.get", !0),
    ky = Li("Map.prototype.set", !0),
    Ey = Li("Map.prototype.has", !0),
    na = function (e, t) {
      for (var i = e, a; (a = i.next) !== null; i = a)
        if (a.key === t)
          return (i.next = a.next), (a.next = e.next), (e.next = a), a;
    },
    Sy = function (e, t) {
      var i = na(e, t);
      return i && i.value;
    },
    Ny = function (e, t, i) {
      var a = na(e, t);
      a ? (a.value = i) : (e.next = { key: t, next: e.next, value: i });
    },
    By = function (e, t) {
      return !!na(e, t);
    };
  zp.exports = function () {
    var t,
      i,
      a,
      u = {
        assert: function (l) {
          if (!u.has(l)) throw new Cy("Side channel does not contain " + Py(l));
        },
        get: function (l) {
          if (ts && l && (typeof l == "object" || typeof l == "function")) {
            if (t) return jy(t, l);
          } else if (is) {
            if (i) return Uy(i, l);
          } else if (a) return Sy(a, l);
        },
        has: function (l) {
          if (ts && l && (typeof l == "object" || typeof l == "function")) {
            if (t) return Oy(t, l);
          } else if (is) {
            if (i) return Ey(i, l);
          } else if (a) return By(a, l);
          return !1;
        },
        set: function (l, r) {
          ts && l && (typeof l == "object" || typeof l == "function")
            ? (t || (t = new ts()), Ay(t, l, r))
            : is
            ? (i || (i = new is()), ky(i, l, r))
            : (a || (a = { key: {}, next: null }), Ny(a, l, r));
        },
      };
    return u;
  };
});
var rs = x((Pb, Jp) => {
  "use strict";
  var My = String.prototype.replace,
    xy = /%20/g,
    sa = { RFC1738: "RFC1738", RFC3986: "RFC3986" };
  Jp.exports = {
    default: sa.RFC3986,
    formatters: {
      RFC1738: function (e) {
        return My.call(e, xy, "+");
      },
      RFC3986: function (e) {
        return String(e);
      },
    },
    RFC1738: sa.RFC1738,
    RFC3986: sa.RFC3986,
  };
});
var aa = x((Cb, Xp) => {
  "use strict";
  var _y = rs(),
    oa = Object.prototype.hasOwnProperty,
    fi = Array.isArray,
    bt = (function () {
      for (var e = [], t = 0; t < 256; ++t)
        e.push("%" + ((t < 16 ? "0" : "") + t.toString(16)).toUpperCase());
      return e;
    })(),
    Gy = function (t) {
      for (; t.length > 1; ) {
        var i = t.pop(),
          a = i.obj[i.prop];
        if (fi(a)) {
          for (var u = [], l = 0; l < a.length; ++l)
            typeof a[l] < "u" && u.push(a[l]);
          i.obj[i.prop] = u;
        }
      }
    },
    Kp = function (t, i) {
      for (
        var a = i && i.plainObjects ? Object.create(null) : {}, u = 0;
        u < t.length;
        ++u
      )
        typeof t[u] < "u" && (a[u] = t[u]);
      return a;
    },
    Fy = function e(t, i, a) {
      if (!i) return t;
      if (typeof i != "object") {
        if (fi(t)) t.push(i);
        else if (t && typeof t == "object")
          ((a && (a.plainObjects || a.allowPrototypes)) ||
            !oa.call(Object.prototype, i)) &&
            (t[i] = !0);
        else return [t, i];
        return t;
      }
      if (!t || typeof t != "object") return [t].concat(i);
      var u = t;
      return (
        fi(t) && !fi(i) && (u = Kp(t, a)),
        fi(t) && fi(i)
          ? (i.forEach(function (l, r) {
              if (oa.call(t, r)) {
                var s = t[r];
                s && typeof s == "object" && l && typeof l == "object"
                  ? (t[r] = e(s, l, a))
                  : t.push(l);
              } else t[r] = l;
            }),
            t)
          : Object.keys(i).reduce(function (l, r) {
              var s = i[r];
              return oa.call(l, r) ? (l[r] = e(l[r], s, a)) : (l[r] = s), l;
            }, u)
      );
    },
    Ly = function (t, i) {
      return Object.keys(i).reduce(function (a, u) {
        return (a[u] = i[u]), a;
      }, t);
    },
    Wy = function (e, t, i) {
      var a = e.replace(/\+/g, " ");
      if (i === "iso-8859-1") return a.replace(/%[0-9a-f]{2}/gi, unescape);
      try {
        return decodeURIComponent(a);
      } catch {
        return a;
      }
    },
    $y = function (t, i, a, u, l) {
      if (t.length === 0) return t;
      var r = t;
      if (
        (typeof t == "symbol"
          ? (r = Symbol.prototype.toString.call(t))
          : typeof t != "string" && (r = String(t)),
        a === "iso-8859-1")
      )
        return escape(r).replace(/%u[0-9a-f]{4}/gi, function (p) {
          return "%26%23" + parseInt(p.slice(2), 16) + "%3B";
        });
      for (var s = "", n = 0; n < r.length; ++n) {
        var o = r.charCodeAt(n);
        if (
          o === 45 ||
          o === 46 ||
          o === 95 ||
          o === 126 ||
          (o >= 48 && o <= 57) ||
          (o >= 65 && o <= 90) ||
          (o >= 97 && o <= 122) ||
          (l === _y.RFC1738 && (o === 40 || o === 41))
        ) {
          s += r.charAt(n);
          continue;
        }
        if (o < 128) {
          s = s + bt[o];
          continue;
        }
        if (o < 2048) {
          s = s + (bt[192 | (o >> 6)] + bt[128 | (o & 63)]);
          continue;
        }
        if (o < 55296 || o >= 57344) {
          s =
            s +
            (bt[224 | (o >> 12)] +
              bt[128 | ((o >> 6) & 63)] +
              bt[128 | (o & 63)]);
          continue;
        }
        (n += 1),
          (o = 65536 + (((o & 1023) << 10) | (r.charCodeAt(n) & 1023))),
          (s +=
            bt[240 | (o >> 18)] +
            bt[128 | ((o >> 12) & 63)] +
            bt[128 | ((o >> 6) & 63)] +
            bt[128 | (o & 63)]);
      }
      return s;
    },
    Hy = function (t) {
      for (
        var i = [{ obj: { o: t }, prop: "o" }], a = [], u = 0;
        u < i.length;
        ++u
      )
        for (
          var l = i[u], r = l.obj[l.prop], s = Object.keys(r), n = 0;
          n < s.length;
          ++n
        ) {
          var o = s[n],
            p = r[o];
          typeof p == "object" &&
            p !== null &&
            a.indexOf(p) === -1 &&
            (i.push({ obj: r, prop: o }), a.push(p));
        }
      return Gy(i), t;
    },
    zy = function (t) {
      return Object.prototype.toString.call(t) === "[object RegExp]";
    },
    Qy = function (t) {
      return !t || typeof t != "object"
        ? !1
        : !!(
            t.constructor &&
            t.constructor.isBuffer &&
            t.constructor.isBuffer(t)
          );
    },
    Jy = function (t, i) {
      return [].concat(t, i);
    },
    Ky = function (t, i) {
      if (fi(t)) {
        for (var a = [], u = 0; u < t.length; u += 1) a.push(i(t[u]));
        return a;
      }
      return i(t);
    };
  Xp.exports = {
    arrayToObject: Kp,
    assign: Ly,
    combine: Jy,
    compact: Hy,
    decode: Wy,
    encode: $y,
    isBuffer: Qy,
    isRegExp: zy,
    maybeMap: Ky,
    merge: Fy,
  };
});
var rd = x((jb, id) => {
  "use strict";
  var ed = Qp(),
    ns = aa(),
    Pr = rs(),
    Xy = Object.prototype.hasOwnProperty,
    Zp = {
      brackets: function (t) {
        return t + "[]";
      },
      comma: "comma",
      indices: function (t, i) {
        return t + "[" + i + "]";
      },
      repeat: function (t) {
        return t;
      },
    },
    Ct = Array.isArray,
    Zy = Array.prototype.push,
    td = function (e, t) {
      Zy.apply(e, Ct(t) ? t : [t]);
    },
    Yy = Date.prototype.toISOString,
    Yp = Pr.default,
    Je = {
      addQueryPrefix: !1,
      allowDots: !1,
      charset: "utf-8",
      charsetSentinel: !1,
      delimiter: "&",
      encode: !0,
      encoder: ns.encode,
      encodeValuesOnly: !1,
      format: Yp,
      formatter: Pr.formatters[Yp],
      indices: !1,
      serializeDate: function (t) {
        return Yy.call(t);
      },
      skipNulls: !1,
      strictNullHandling: !1,
    },
    ev = function (t) {
      return (
        typeof t == "string" ||
        typeof t == "number" ||
        typeof t == "boolean" ||
        typeof t == "symbol" ||
        typeof t == "bigint"
      );
    },
    la = {},
    tv = function e(t, i, a, u, l, r, s, n, o, p, d, c, f, h, T, q) {
      for (
        var j = t, F = q, U = 0, z = !1;
        (F = F.get(la)) !== void 0 && !z;

      ) {
        var W = F.get(t);
        if (((U += 1), typeof W < "u")) {
          if (W === U) throw new RangeError("Cyclic object value");
          z = !0;
        }
        typeof F.get(la) > "u" && (U = 0);
      }
      if (
        (typeof n == "function"
          ? (j = n(i, j))
          : j instanceof Date
          ? (j = d(j))
          : a === "comma" &&
            Ct(j) &&
            (j = ns.maybeMap(j, function (Ni) {
              return Ni instanceof Date ? d(Ni) : Ni;
            })),
        j === null)
      ) {
        if (l) return s && !h ? s(i, Je.encoder, T, "key", c) : i;
        j = "";
      }
      if (ev(j) || ns.isBuffer(j)) {
        if (s) {
          var fe = h ? i : s(i, Je.encoder, T, "key", c);
          return [f(fe) + "=" + f(s(j, Je.encoder, T, "value", c))];
        }
        return [f(i) + "=" + f(String(j))];
      }
      var Ie = [];
      if (typeof j > "u") return Ie;
      var Te;
      if (a === "comma" && Ct(j))
        h && s && (j = ns.maybeMap(j, s)),
          (Te = [{ value: j.length > 0 ? j.join(",") || null : void 0 }]);
      else if (Ct(n)) Te = n;
      else {
        var Re = Object.keys(j);
        Te = o ? Re.sort(o) : Re;
      }
      for (
        var Ge = u && Ct(j) && j.length === 1 ? i + "[]" : i, ft = 0;
        ft < Te.length;
        ++ft
      ) {
        var Ye = Te[ft],
          rt =
            typeof Ye == "object" && typeof Ye.value < "u" ? Ye.value : j[Ye];
        if (!(r && rt === null)) {
          var mt = Ct(j)
            ? typeof a == "function"
              ? a(Ge, Ye)
              : Ge
            : Ge + (p ? "." + Ye : "[" + Ye + "]");
          q.set(t, U);
          var Si = ed();
          Si.set(la, q),
            td(
              Ie,
              e(
                rt,
                mt,
                a,
                u,
                l,
                r,
                a === "comma" && h && Ct(j) ? null : s,
                n,
                o,
                p,
                d,
                c,
                f,
                h,
                T,
                Si
              )
            );
        }
      }
      return Ie;
    },
    iv = function (t) {
      if (!t) return Je;
      if (
        t.encoder !== null &&
        typeof t.encoder < "u" &&
        typeof t.encoder != "function"
      )
        throw new TypeError("Encoder has to be a function.");
      var i = t.charset || Je.charset;
      if (
        typeof t.charset < "u" &&
        t.charset !== "utf-8" &&
        t.charset !== "iso-8859-1"
      )
        throw new TypeError(
          "The charset option must be either utf-8, iso-8859-1, or undefined"
        );
      var a = Pr.default;
      if (typeof t.format < "u") {
        if (!Xy.call(Pr.formatters, t.format))
          throw new TypeError("Unknown format option provided.");
        a = t.format;
      }
      var u = Pr.formatters[a],
        l = Je.filter;
      return (
        (typeof t.filter == "function" || Ct(t.filter)) && (l = t.filter),
        {
          addQueryPrefix:
            typeof t.addQueryPrefix == "boolean"
              ? t.addQueryPrefix
              : Je.addQueryPrefix,
          allowDots: typeof t.allowDots > "u" ? Je.allowDots : !!t.allowDots,
          charset: i,
          charsetSentinel:
            typeof t.charsetSentinel == "boolean"
              ? t.charsetSentinel
              : Je.charsetSentinel,
          delimiter: typeof t.delimiter > "u" ? Je.delimiter : t.delimiter,
          encode: typeof t.encode == "boolean" ? t.encode : Je.encode,
          encoder: typeof t.encoder == "function" ? t.encoder : Je.encoder,
          encodeValuesOnly:
            typeof t.encodeValuesOnly == "boolean"
              ? t.encodeValuesOnly
              : Je.encodeValuesOnly,
          filter: l,
          format: a,
          formatter: u,
          serializeDate:
            typeof t.serializeDate == "function"
              ? t.serializeDate
              : Je.serializeDate,
          skipNulls:
            typeof t.skipNulls == "boolean" ? t.skipNulls : Je.skipNulls,
          sort: typeof t.sort == "function" ? t.sort : null,
          strictNullHandling:
            typeof t.strictNullHandling == "boolean"
              ? t.strictNullHandling
              : Je.strictNullHandling,
        }
      );
    };
  id.exports = function (e, t) {
    var i = e,
      a = iv(t),
      u,
      l;
    typeof a.filter == "function"
      ? ((l = a.filter), (i = l("", i)))
      : Ct(a.filter) && ((l = a.filter), (u = l));
    var r = [];
    if (typeof i != "object" || i === null) return "";
    var s;
    t && t.arrayFormat in Zp
      ? (s = t.arrayFormat)
      : t && "indices" in t
      ? (s = t.indices ? "indices" : "repeat")
      : (s = "indices");
    var n = Zp[s];
    if (t && "commaRoundTrip" in t && typeof t.commaRoundTrip != "boolean")
      throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
    var o = n === "comma" && t && t.commaRoundTrip;
    u || (u = Object.keys(i)), a.sort && u.sort(a.sort);
    for (var p = ed(), d = 0; d < u.length; ++d) {
      var c = u[d];
      (a.skipNulls && i[c] === null) ||
        td(
          r,
          tv(
            i[c],
            c,
            n,
            o,
            a.strictNullHandling,
            a.skipNulls,
            a.encode ? a.encoder : null,
            a.filter,
            a.sort,
            a.allowDots,
            a.serializeDate,
            a.format,
            a.formatter,
            a.encodeValuesOnly,
            a.charset,
            p
          )
        );
    }
    var f = r.join(a.delimiter),
      h = a.addQueryPrefix === !0 ? "?" : "";
    return (
      a.charsetSentinel &&
        (a.charset === "iso-8859-1"
          ? (h += "utf8=%26%2310003%3B&")
          : (h += "utf8=%E2%9C%93&")),
      f.length > 0 ? h + f : ""
    );
  };
});
var od = x((Ab, sd) => {
  "use strict";
  var Wi = aa(),
    ua = Object.prototype.hasOwnProperty,
    rv = Array.isArray,
    Se = {
      allowDots: !1,
      allowPrototypes: !1,
      allowSparse: !1,
      arrayLimit: 20,
      charset: "utf-8",
      charsetSentinel: !1,
      comma: !1,
      decoder: Wi.decode,
      delimiter: "&",
      depth: 5,
      ignoreQueryPrefix: !1,
      interpretNumericEntities: !1,
      parameterLimit: 1e3,
      parseArrays: !0,
      plainObjects: !1,
      strictNullHandling: !1,
    },
    nv = function (e) {
      return e.replace(/&#(\d+);/g, function (t, i) {
        return String.fromCharCode(parseInt(i, 10));
      });
    },
    nd = function (e, t) {
      return e && typeof e == "string" && t.comma && e.indexOf(",") > -1
        ? e.split(",")
        : e;
    },
    sv = "utf8=%26%2310003%3B",
    ov = "utf8=%E2%9C%93",
    av = function (t, i) {
      var a = { __proto__: null },
        u = i.ignoreQueryPrefix ? t.replace(/^\?/, "") : t,
        l = i.parameterLimit === 1 / 0 ? void 0 : i.parameterLimit,
        r = u.split(i.delimiter, l),
        s = -1,
        n,
        o = i.charset;
      if (i.charsetSentinel)
        for (n = 0; n < r.length; ++n)
          r[n].indexOf("utf8=") === 0 &&
            (r[n] === ov ? (o = "utf-8") : r[n] === sv && (o = "iso-8859-1"),
            (s = n),
            (n = r.length));
      for (n = 0; n < r.length; ++n)
        if (n !== s) {
          var p = r[n],
            d = p.indexOf("]="),
            c = d === -1 ? p.indexOf("=") : d + 1,
            f,
            h;
          c === -1
            ? ((f = i.decoder(p, Se.decoder, o, "key")),
              (h = i.strictNullHandling ? null : ""))
            : ((f = i.decoder(p.slice(0, c), Se.decoder, o, "key")),
              (h = Wi.maybeMap(nd(p.slice(c + 1), i), function (T) {
                return i.decoder(T, Se.decoder, o, "value");
              }))),
            h &&
              i.interpretNumericEntities &&
              o === "iso-8859-1" &&
              (h = nv(h)),
            p.indexOf("[]=") > -1 && (h = rv(h) ? [h] : h),
            ua.call(a, f) ? (a[f] = Wi.combine(a[f], h)) : (a[f] = h);
        }
      return a;
    },
    lv = function (e, t, i, a) {
      for (var u = a ? t : nd(t, i), l = e.length - 1; l >= 0; --l) {
        var r,
          s = e[l];
        if (s === "[]" && i.parseArrays) r = [].concat(u);
        else {
          r = i.plainObjects ? Object.create(null) : {};
          var n =
              s.charAt(0) === "[" && s.charAt(s.length - 1) === "]"
                ? s.slice(1, -1)
                : s,
            o = parseInt(n, 10);
          !i.parseArrays && n === ""
            ? (r = { 0: u })
            : !isNaN(o) &&
              s !== n &&
              String(o) === n &&
              o >= 0 &&
              i.parseArrays &&
              o <= i.arrayLimit
            ? ((r = []), (r[o] = u))
            : n !== "__proto__" && (r[n] = u);
        }
        u = r;
      }
      return u;
    },
    uv = function (t, i, a, u) {
      if (t) {
        var l = a.allowDots ? t.replace(/\.([^.[]+)/g, "[$1]") : t,
          r = /(\[[^[\]]*])/,
          s = /(\[[^[\]]*])/g,
          n = a.depth > 0 && r.exec(l),
          o = n ? l.slice(0, n.index) : l,
          p = [];
        if (o) {
          if (
            !a.plainObjects &&
            ua.call(Object.prototype, o) &&
            !a.allowPrototypes
          )
            return;
          p.push(o);
        }
        for (
          var d = 0;
          a.depth > 0 && (n = s.exec(l)) !== null && d < a.depth;

        ) {
          if (
            ((d += 1),
            !a.plainObjects &&
              ua.call(Object.prototype, n[1].slice(1, -1)) &&
              !a.allowPrototypes)
          )
            return;
          p.push(n[1]);
        }
        return n && p.push("[" + l.slice(n.index) + "]"), lv(p, i, a, u);
      }
    },
    pv = function (t) {
      if (!t) return Se;
      if (
        t.decoder !== null &&
        t.decoder !== void 0 &&
        typeof t.decoder != "function"
      )
        throw new TypeError("Decoder has to be a function.");
      if (
        typeof t.charset < "u" &&
        t.charset !== "utf-8" &&
        t.charset !== "iso-8859-1"
      )
        throw new TypeError(
          "The charset option must be either utf-8, iso-8859-1, or undefined"
        );
      var i = typeof t.charset > "u" ? Se.charset : t.charset;
      return {
        allowDots: typeof t.allowDots > "u" ? Se.allowDots : !!t.allowDots,
        allowPrototypes:
          typeof t.allowPrototypes == "boolean"
            ? t.allowPrototypes
            : Se.allowPrototypes,
        allowSparse:
          typeof t.allowSparse == "boolean" ? t.allowSparse : Se.allowSparse,
        arrayLimit:
          typeof t.arrayLimit == "number" ? t.arrayLimit : Se.arrayLimit,
        charset: i,
        charsetSentinel:
          typeof t.charsetSentinel == "boolean"
            ? t.charsetSentinel
            : Se.charsetSentinel,
        comma: typeof t.comma == "boolean" ? t.comma : Se.comma,
        decoder: typeof t.decoder == "function" ? t.decoder : Se.decoder,
        delimiter:
          typeof t.delimiter == "string" || Wi.isRegExp(t.delimiter)
            ? t.delimiter
            : Se.delimiter,
        depth:
          typeof t.depth == "number" || t.depth === !1 ? +t.depth : Se.depth,
        ignoreQueryPrefix: t.ignoreQueryPrefix === !0,
        interpretNumericEntities:
          typeof t.interpretNumericEntities == "boolean"
            ? t.interpretNumericEntities
            : Se.interpretNumericEntities,
        parameterLimit:
          typeof t.parameterLimit == "number"
            ? t.parameterLimit
            : Se.parameterLimit,
        parseArrays: t.parseArrays !== !1,
        plainObjects:
          typeof t.plainObjects == "boolean" ? t.plainObjects : Se.plainObjects,
        strictNullHandling:
          typeof t.strictNullHandling == "boolean"
            ? t.strictNullHandling
            : Se.strictNullHandling,
      };
    };
  sd.exports = function (e, t) {
    var i = pv(t);
    if (e === "" || e === null || typeof e > "u")
      return i.plainObjects ? Object.create(null) : {};
    for (
      var a = typeof e == "string" ? av(e, i) : e,
        u = i.plainObjects ? Object.create(null) : {},
        l = Object.keys(a),
        r = 0;
      r < l.length;
      ++r
    ) {
      var s = l[r],
        n = uv(s, a[s], i, typeof e == "string");
      u = Wi.merge(u, n, i);
    }
    return i.allowSparse === !0 ? u : Wi.compact(u);
  };
});
var ld = x((Ob, ad) => {
  "use strict";
  var dv = rd(),
    cv = od(),
    fv = rs();
  ad.exports = { formats: fv, parse: cv, stringify: dv };
});
var da = x((Ht) => {
  "use strict";
  var ud =
    (Ht && Ht.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Ht, "__esModule", { value: !0 });
  var hv = ld(),
    pa = require("url"),
    pd = require("path"),
    yv = require("zlib");
  function vv(e, t, i) {
    let a = pd.posix || pd,
      u = "";
    if (!t) u = e;
    else if (!e) u = t;
    else {
      let l = pa.parse(t),
        r = pa.parse(e);
      (r.protocol = r.protocol || l.protocol),
        (r.auth = r.auth || l.auth),
        (r.host = r.host || l.host),
        (r.pathname = a.resolve(l.pathname, r.pathname)),
        !r.pathname.endsWith("/") && e.endsWith("/") && (r.pathname += "/"),
        (u = pa.format(r));
    }
    return i ? mv(u, i) : u;
  }
  Ht.getUrl = vv;
  function mv(e, t) {
    let i = e.replace(/\?$/g, ""),
      a = hv.stringify(t.params, gv(t));
    return `${i}${a}`;
  }
  function gv(e) {
    return {
      addQueryPrefix: !0,
      delimiter: (e.options || {}).separator || "&",
      allowDots: (e.options || {}).shouldAllowDots || !1,
      arrayFormat: (e.options || {}).arrayFormat || "repeat",
      encodeValuesOnly: (e.options || {}).shouldOnlyEncodeValues || !0,
    };
  }
  function Iv(e, t) {
    return ud(this, void 0, void 0, function* () {
      return new Promise((i, a) =>
        ud(this, void 0, void 0, function* () {
          yv.gunzip(e, function (u, l) {
            u ? a(u) : i(l.toString(t || "utf-8"));
          });
        })
      );
    });
  }
  Ht.decompressGzippedContent = Iv;
  function Tv(e) {
    try {
      return new RegExp(e, "i");
    } catch (t) {
      if (t instanceof SyntaxError && (e || "").startsWith("*")) {
        let i = e.replace("*", "(.*)");
        return new RegExp(i, "i");
      }
      throw t;
    }
  }
  Ht.buildProxyBypassRegexFromEnv = Tv;
  function Rv(e) {
    let t = ["ascii", "utf8", "utf16le", "ucs2", "base64", "binary", "hex"],
      a = (e.message.headers["content-type"] || "").match(
        /charset=([^;,\r\n]+)/i
      );
    return a && a[1] && t.indexOf(a[1]) != -1 ? a[1] : "utf-8";
  }
  Ht.obtainContentCharset = Rv;
});
var hd = x(($i) => {
  "use strict";
  var kb = require("net"),
    Vv = require("tls"),
    ca = require("http"),
    dd = require("https"),
    bv = require("events"),
    Eb = require("assert"),
    Dv = require("util");
  $i.httpOverHttp = wv;
  $i.httpsOverHttp = qv;
  $i.httpOverHttps = Pv;
  $i.httpsOverHttps = Cv;
  function wv(e) {
    var t = new jt(e);
    return (t.request = ca.request), t;
  }
  function qv(e) {
    var t = new jt(e);
    return (
      (t.request = ca.request), (t.createSocket = cd), (t.defaultPort = 443), t
    );
  }
  function Pv(e) {
    var t = new jt(e);
    return (t.request = dd.request), t;
  }
  function Cv(e) {
    var t = new jt(e);
    return (
      (t.request = dd.request), (t.createSocket = cd), (t.defaultPort = 443), t
    );
  }
  function jt(e) {
    var t = this;
    (t.options = e || {}),
      (t.proxyOptions = t.options.proxy || {}),
      (t.maxSockets = t.options.maxSockets || ca.Agent.defaultMaxSockets),
      (t.requests = []),
      (t.sockets = []),
      t.on("free", function (a, u, l, r) {
        for (var s = fd(u, l, r), n = 0, o = t.requests.length; n < o; ++n) {
          var p = t.requests[n];
          if (p.host === s.host && p.port === s.port) {
            t.requests.splice(n, 1), p.request.onSocket(a);
            return;
          }
        }
        a.destroy(), t.removeSocket(a);
      });
  }
  Dv.inherits(jt, bv.EventEmitter);
  jt.prototype.addRequest = function (t, i, a, u) {
    var l = this,
      r = fa({ request: t }, l.options, fd(i, a, u));
    if (l.sockets.length >= this.maxSockets) {
      l.requests.push(r);
      return;
    }
    l.createSocket(r, function (s) {
      s.on("free", n), s.on("close", o), s.on("agentRemove", o), t.onSocket(s);
      function n() {
        l.emit("free", s, r);
      }
      function o(p) {
        l.removeSocket(s),
          s.removeListener("free", n),
          s.removeListener("close", o),
          s.removeListener("agentRemove", o);
      }
    });
  };
  jt.prototype.createSocket = function (t, i) {
    var a = this,
      u = {};
    a.sockets.push(u);
    var l = fa({}, a.proxyOptions, {
      method: "CONNECT",
      path: t.host + ":" + t.port,
      agent: !1,
      headers: { host: t.host + ":" + t.port },
    });
    t.localAddress && (l.localAddress = t.localAddress),
      l.proxyAuth &&
        ((l.headers = l.headers || {}),
        (l.headers["Proxy-Authorization"] =
          "Basic " + new Buffer(l.proxyAuth).toString("base64"))),
      zt("making CONNECT request");
    var r = a.request(l);
    (r.useChunkedEncodingByDefault = !1),
      r.once("response", s),
      r.once("upgrade", n),
      r.once("connect", o),
      r.once("error", p),
      r.end();
    function s(d) {
      d.upgrade = !0;
    }
    function n(d, c, f) {
      process.nextTick(function () {
        o(d, c, f);
      });
    }
    function o(d, c, f) {
      if (
        (r.removeAllListeners(), c.removeAllListeners(), d.statusCode !== 200)
      ) {
        zt(
          "tunneling socket could not be established, statusCode=%d",
          d.statusCode
        ),
          c.destroy();
        var h = new Error(
          "tunneling socket could not be established, statusCode=" +
            d.statusCode
        );
        (h.code = "ECONNRESET"), t.request.emit("error", h), a.removeSocket(u);
        return;
      }
      if (f.length > 0) {
        zt("got illegal response body from proxy"), c.destroy();
        var h = new Error("got illegal response body from proxy");
        (h.code = "ECONNRESET"), t.request.emit("error", h), a.removeSocket(u);
        return;
      }
      return (
        zt("tunneling connection has established"),
        (a.sockets[a.sockets.indexOf(u)] = c),
        i(c)
      );
    }
    function p(d) {
      r.removeAllListeners(),
        zt(
          `tunneling socket could not be established, cause=%s
`,
          d.message,
          d.stack
        );
      var c = new Error(
        "tunneling socket could not be established, cause=" + d.message
      );
      (c.code = "ECONNRESET"), t.request.emit("error", c), a.removeSocket(u);
    }
  };
  jt.prototype.removeSocket = function (t) {
    var i = this.sockets.indexOf(t);
    if (i !== -1) {
      this.sockets.splice(i, 1);
      var a = this.requests.shift();
      a &&
        this.createSocket(a, function (u) {
          a.request.onSocket(u);
        });
    }
  };
  function cd(e, t) {
    var i = this;
    jt.prototype.createSocket.call(i, e, function (a) {
      var u = e.request.getHeader("host"),
        l = fa({}, i.options, {
          socket: a,
          servername: u ? u.replace(/:.*$/, "") : e.host,
        }),
        r = Vv.connect(0, l);
      (i.sockets[i.sockets.indexOf(a)] = r), t(r);
    });
  }
  function fd(e, t, i) {
    return typeof e == "string" ? { host: e, port: t, localAddress: i } : e;
  }
  function fa(e) {
    for (var t = 1, i = arguments.length; t < i; ++t) {
      var a = arguments[t];
      if (typeof a == "object")
        for (var u = Object.keys(a), l = 0, r = u.length; l < r; ++l) {
          var s = u[l];
          a[s] !== void 0 && (e[s] = a[s]);
        }
    }
    return e;
  }
  var zt;
  process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)
    ? (zt = function () {
        var e = Array.prototype.slice.call(arguments);
        typeof e[0] == "string"
          ? (e[0] = "TUNNEL: " + e[0])
          : e.unshift("TUNNEL:"),
          console.error.apply(console, e);
      })
    : (zt = function () {});
  $i.debug = zt;
});
var vd = x((Nb, yd) => {
  yd.exports = hd();
});
var as = x((At) => {
  "use strict";
  var ya =
    (At && At.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(At, "__esModule", { value: !0 });
  var Cr = require("url"),
    ss = require("http"),
    ha = require("https"),
    va = da(),
    hi,
    Hi,
    Dt;
  (function (e) {
    (e[(e.OK = 200)] = "OK"),
      (e[(e.MultipleChoices = 300)] = "MultipleChoices"),
      (e[(e.MovedPermanently = 301)] = "MovedPermanently"),
      (e[(e.ResourceMoved = 302)] = "ResourceMoved"),
      (e[(e.SeeOther = 303)] = "SeeOther"),
      (e[(e.NotModified = 304)] = "NotModified"),
      (e[(e.UseProxy = 305)] = "UseProxy"),
      (e[(e.SwitchProxy = 306)] = "SwitchProxy"),
      (e[(e.TemporaryRedirect = 307)] = "TemporaryRedirect"),
      (e[(e.PermanentRedirect = 308)] = "PermanentRedirect"),
      (e[(e.BadRequest = 400)] = "BadRequest"),
      (e[(e.Unauthorized = 401)] = "Unauthorized"),
      (e[(e.PaymentRequired = 402)] = "PaymentRequired"),
      (e[(e.Forbidden = 403)] = "Forbidden"),
      (e[(e.NotFound = 404)] = "NotFound"),
      (e[(e.MethodNotAllowed = 405)] = "MethodNotAllowed"),
      (e[(e.NotAcceptable = 406)] = "NotAcceptable"),
      (e[(e.ProxyAuthenticationRequired = 407)] =
        "ProxyAuthenticationRequired"),
      (e[(e.RequestTimeout = 408)] = "RequestTimeout"),
      (e[(e.Conflict = 409)] = "Conflict"),
      (e[(e.Gone = 410)] = "Gone"),
      (e[(e.TooManyRequests = 429)] = "TooManyRequests"),
      (e[(e.InternalServerError = 500)] = "InternalServerError"),
      (e[(e.NotImplemented = 501)] = "NotImplemented"),
      (e[(e.BadGateway = 502)] = "BadGateway"),
      (e[(e.ServiceUnavailable = 503)] = "ServiceUnavailable"),
      (e[(e.GatewayTimeout = 504)] = "GatewayTimeout");
  })((Dt = At.HttpCodes || (At.HttpCodes = {})));
  var jv = [
      Dt.MovedPermanently,
      Dt.ResourceMoved,
      Dt.SeeOther,
      Dt.TemporaryRedirect,
      Dt.PermanentRedirect,
    ],
    Av = [Dt.BadGateway, Dt.ServiceUnavailable, Dt.GatewayTimeout],
    Ov = [
      "ECONNRESET",
      "ENOTFOUND",
      "ESOCKETTIMEDOUT",
      "ETIMEDOUT",
      "ECONNREFUSED",
    ],
    Uv = ["OPTIONS", "GET", "DELETE", "HEAD"],
    kv = 10,
    Ev = 5,
    os = class {
      constructor(t) {
        this.message = t;
      }
      readBody() {
        return new Promise((t, i) =>
          ya(this, void 0, void 0, function* () {
            let a = [],
              u = va.obtainContentCharset(this),
              l = this.message.headers["content-encoding"] || "",
              r = new RegExp("(gzip$)|(gzip, *deflate)").test(l);
            this.message
              .on("data", function (s) {
                let n = typeof s == "string" ? Buffer.from(s, u) : s;
                a.push(n);
              })
              .on("end", function () {
                return ya(this, void 0, void 0, function* () {
                  let s = Buffer.concat(a);
                  if (r) {
                    let n = yield va.decompressGzippedContent(s, u);
                    t(n);
                  } else t(s.toString(u));
                });
              })
              .on("error", function (s) {
                i(s);
              });
          })
        );
      }
    };
  At.HttpClientResponse = os;
  function Sv(e) {
    return Cr.parse(e).protocol === "https:";
  }
  At.isHttps = Sv;
  var jr;
  (function (e) {
    (e.HTTP_PROXY = "HTTP_PROXY"),
      (e.HTTPS_PROXY = "HTTPS_PROXY"),
      (e.NO_PROXY = "NO_PROXY");
  })(jr || (jr = {}));
  var ma = class {
    constructor(t, i, a) {
      (this._ignoreSslError = !1),
        (this._allowRedirects = !0),
        (this._allowRedirectDowngrade = !1),
        (this._maxRedirects = 50),
        (this._allowRetries = !1),
        (this._maxRetries = 1),
        (this._keepAlive = !1),
        (this._disposed = !1),
        (this.userAgent = t),
        (this.handlers = i || []);
      let u = process.env[jr.NO_PROXY];
      u &&
        ((this._httpProxyBypassHosts = []),
        u.split(",").forEach((l) => {
          this._httpProxyBypassHosts.push(va.buildProxyBypassRegexFromEnv(l));
        })),
        (this.requestOptions = a),
        a &&
          (a.ignoreSslError != null &&
            (this._ignoreSslError = a.ignoreSslError),
          (this._socketTimeout = a.socketTimeout),
          (this._httpProxy = a.proxy),
          a.proxy &&
            a.proxy.proxyBypassHosts &&
            ((this._httpProxyBypassHosts = []),
            a.proxy.proxyBypassHosts.forEach((l) => {
              this._httpProxyBypassHosts.push(new RegExp(l, "i"));
            })),
          (this._certConfig = a.cert),
          this._certConfig &&
            ((hi = require("fs")),
            this._certConfig.caFile &&
              hi.existsSync(this._certConfig.caFile) &&
              (this._ca = hi.readFileSync(this._certConfig.caFile, "utf8")),
            this._certConfig.certFile &&
              hi.existsSync(this._certConfig.certFile) &&
              (this._cert = hi.readFileSync(this._certConfig.certFile, "utf8")),
            this._certConfig.keyFile &&
              hi.existsSync(this._certConfig.keyFile) &&
              (this._key = hi.readFileSync(this._certConfig.keyFile, "utf8"))),
          a.allowRedirects != null && (this._allowRedirects = a.allowRedirects),
          a.allowRedirectDowngrade != null &&
            (this._allowRedirectDowngrade = a.allowRedirectDowngrade),
          a.maxRedirects != null &&
            (this._maxRedirects = Math.max(a.maxRedirects, 0)),
          a.keepAlive != null && (this._keepAlive = a.keepAlive),
          a.allowRetries != null && (this._allowRetries = a.allowRetries),
          a.maxRetries != null && (this._maxRetries = a.maxRetries));
    }
    options(t, i) {
      return this.request("OPTIONS", t, null, i || {});
    }
    get(t, i) {
      return this.request("GET", t, null, i || {});
    }
    del(t, i) {
      return this.request("DELETE", t, null, i || {});
    }
    post(t, i, a) {
      return this.request("POST", t, i, a || {});
    }
    patch(t, i, a) {
      return this.request("PATCH", t, i, a || {});
    }
    put(t, i, a) {
      return this.request("PUT", t, i, a || {});
    }
    head(t, i) {
      return this.request("HEAD", t, null, i || {});
    }
    sendStream(t, i, a, u) {
      return this.request(t, i, a, u);
    }
    request(t, i, a, u) {
      return ya(this, void 0, void 0, function* () {
        if (this._disposed)
          throw new Error("Client has already been disposed.");
        let l = Cr.parse(i),
          r = this._prepareRequest(t, l, u),
          s =
            this._allowRetries && Uv.indexOf(t) != -1
              ? this._maxRetries + 1
              : 1,
          n = 0,
          o;
        for (; n < s; ) {
          try {
            o = yield this.requestRaw(r, a);
          } catch (d) {
            if ((n++, d && d.code && Ov.indexOf(d.code) > -1 && n < s)) {
              yield this._performExponentialBackoff(n);
              continue;
            }
            throw d;
          }
          if (o && o.message && o.message.statusCode === Dt.Unauthorized) {
            let d;
            for (let c = 0; c < this.handlers.length; c++)
              if (this.handlers[c].canHandleAuthentication(o)) {
                d = this.handlers[c];
                break;
              }
            return d ? d.handleAuthentication(this, r, a) : o;
          }
          let p = this._maxRedirects;
          for (
            ;
            jv.indexOf(o.message.statusCode) != -1 &&
            this._allowRedirects &&
            p > 0;

          ) {
            let d = o.message.headers.location;
            if (!d) break;
            let c = Cr.parse(d);
            if (
              l.protocol == "https:" &&
              l.protocol != c.protocol &&
              !this._allowRedirectDowngrade
            )
              throw new Error(
                "Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true."
              );
            yield o.readBody(),
              (r = this._prepareRequest(t, c, u)),
              (o = yield this.requestRaw(r, a)),
              p--;
          }
          if (Av.indexOf(o.message.statusCode) == -1) return o;
          (n += 1),
            n < s &&
              (yield o.readBody(), yield this._performExponentialBackoff(n));
        }
        return o;
      });
    }
    dispose() {
      this._agent && this._agent.destroy(), (this._disposed = !0);
    }
    requestRaw(t, i) {
      return new Promise((a, u) => {
        let l = function (r, s) {
          r && u(r), a(s);
        };
        this.requestRawWithCallback(t, i, l);
      });
    }
    requestRawWithCallback(t, i, a) {
      let u;
      typeof i == "string" &&
        (t.options.headers["Content-Length"] = Buffer.byteLength(i, "utf8"));
      let l = !1,
        r = (n, o) => {
          l || ((l = !0), a(n, o));
        },
        s = t.httpModule.request(t.options, (n) => {
          let o = new os(n);
          r(null, o);
        });
      s.on("socket", (n) => {
        u = n;
      }),
        s.setTimeout(this._socketTimeout || 3 * 6e4, () => {
          u && u.destroy(),
            r(new Error("Request timeout: " + t.options.path), null);
        }),
        s.on("error", function (n) {
          r(n, null);
        }),
        i && typeof i == "string" && s.write(i, "utf8"),
        i && typeof i != "string"
          ? (i.on("close", function () {
              s.end();
            }),
            i.pipe(s))
          : s.end();
    }
    _prepareRequest(t, i, a) {
      let u = {};
      u.parsedUrl = i;
      let l = u.parsedUrl.protocol === "https:";
      u.httpModule = l ? ha : ss;
      let r = l ? 443 : 80;
      return (
        (u.options = {}),
        (u.options.host = u.parsedUrl.hostname),
        (u.options.port = u.parsedUrl.port ? parseInt(u.parsedUrl.port) : r),
        (u.options.path =
          (u.parsedUrl.pathname || "") + (u.parsedUrl.search || "")),
        (u.options.method = t),
        (u.options.timeout =
          (this.requestOptions && this.requestOptions.socketTimeout) ||
          this._socketTimeout),
        (this._socketTimeout = u.options.timeout),
        (u.options.headers = this._mergeHeaders(a)),
        this.userAgent != null &&
          (u.options.headers["user-agent"] = this.userAgent),
        (u.options.agent = this._getAgent(u.parsedUrl)),
        this.handlers &&
          !this._isPresigned(Cr.format(i)) &&
          this.handlers.forEach((s) => {
            s.prepareRequest(u.options);
          }),
        u
      );
    }
    _isPresigned(t) {
      if (this.requestOptions && this.requestOptions.presignedUrlPatterns) {
        let i = this.requestOptions.presignedUrlPatterns;
        for (let a = 0; a < i.length; a++) if (t.match(i[a])) return !0;
      }
      return !1;
    }
    _mergeHeaders(t) {
      let i = (a) =>
        Object.keys(a).reduce((u, l) => ((u[l.toLowerCase()] = a[l]), u), {});
      return this.requestOptions && this.requestOptions.headers
        ? Object.assign({}, i(this.requestOptions.headers), i(t))
        : i(t || {});
    }
    _getAgent(t) {
      let i,
        a = this._getProxy(t),
        u =
          a.proxyUrl &&
          a.proxyUrl.hostname &&
          !this._isMatchInBypassProxyList(t);
      if (
        (this._keepAlive && u && (i = this._proxyAgent),
        this._keepAlive && !u && (i = this._agent),
        i)
      )
        return i;
      let l = t.protocol === "https:",
        r = 100;
      if (
        (this.requestOptions &&
          (r = this.requestOptions.maxSockets || ss.globalAgent.maxSockets),
        u)
      ) {
        Hi || (Hi = vd());
        let s = {
            maxSockets: r,
            keepAlive: this._keepAlive,
            proxy: {
              proxyAuth: a.proxyAuth,
              host: a.proxyUrl.hostname,
              port: a.proxyUrl.port,
            },
          },
          n,
          o = a.proxyUrl.protocol === "https:";
        l
          ? (n = o ? Hi.httpsOverHttps : Hi.httpsOverHttp)
          : (n = o ? Hi.httpOverHttps : Hi.httpOverHttp),
          (i = n(s)),
          (this._proxyAgent = i);
      }
      if (this._keepAlive && !i) {
        let s = { keepAlive: this._keepAlive, maxSockets: r };
        (i = l ? new ha.Agent(s) : new ss.Agent(s)), (this._agent = i);
      }
      return (
        i || (i = l ? ha.globalAgent : ss.globalAgent),
        l &&
          this._ignoreSslError &&
          (i.options = Object.assign(i.options || {}, {
            rejectUnauthorized: !1,
          })),
        l &&
          this._certConfig &&
          (i.options = Object.assign(i.options || {}, {
            ca: this._ca,
            cert: this._cert,
            key: this._key,
            passphrase: this._certConfig.passphrase,
          })),
        i
      );
    }
    _getProxy(t) {
      let i = t.protocol === "https:",
        a = this._httpProxy,
        u = process.env[jr.HTTPS_PROXY],
        l = process.env[jr.HTTP_PROXY];
      a || (u && i ? (a = { proxyUrl: u }) : l && (a = { proxyUrl: l }));
      let r, s;
      return (
        a &&
          (a.proxyUrl.length > 0 && (r = Cr.parse(a.proxyUrl)),
          (a.proxyUsername || a.proxyPassword) &&
            (s = a.proxyUsername + ":" + a.proxyPassword)),
        { proxyUrl: r, proxyAuth: s }
      );
    }
    _isMatchInBypassProxyList(t) {
      if (!this._httpProxyBypassHosts) return !1;
      let i = !1;
      return (
        this._httpProxyBypassHosts.forEach((a) => {
          a.test(t.href) && (i = !0);
        }),
        i
      );
    }
    _performExponentialBackoff(t) {
      t = Math.min(kv, t);
      let i = Ev * Math.pow(2, t);
      return new Promise((a) => setTimeout(() => a(), i));
    }
  };
  At.HttpClient = ma;
});
var ga = x((Or) => {
  "use strict";
  var Ot =
    (Or && Or.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Or, "__esModule", { value: !0 });
  var md = as(),
    yi = da(),
    Ar = class {
      constructor(t, i, a, u) {
        (this.client = new md.HttpClient(t, a, u)), i && (this._baseUrl = i);
      }
      options(t, i) {
        return Ot(this, void 0, void 0, function* () {
          let a = yi.getUrl(t, this._baseUrl),
            u = yield this.client.options(a, this._headersFromOptions(i));
          return this.processResponse(u, i);
        });
      }
      get(t, i) {
        return Ot(this, void 0, void 0, function* () {
          let a = yi.getUrl(t, this._baseUrl, (i || {}).queryParameters),
            u = yield this.client.get(a, this._headersFromOptions(i));
          return this.processResponse(u, i);
        });
      }
      del(t, i) {
        return Ot(this, void 0, void 0, function* () {
          let a = yi.getUrl(t, this._baseUrl, (i || {}).queryParameters),
            u = yield this.client.del(a, this._headersFromOptions(i));
          return this.processResponse(u, i);
        });
      }
      create(t, i, a) {
        return Ot(this, void 0, void 0, function* () {
          let u = yi.getUrl(t, this._baseUrl),
            l = this._headersFromOptions(a, !0),
            r = JSON.stringify(i, null, 2),
            s = yield this.client.post(u, r, l);
          return this.processResponse(s, a);
        });
      }
      update(t, i, a) {
        return Ot(this, void 0, void 0, function* () {
          let u = yi.getUrl(t, this._baseUrl),
            l = this._headersFromOptions(a, !0),
            r = JSON.stringify(i, null, 2),
            s = yield this.client.patch(u, r, l);
          return this.processResponse(s, a);
        });
      }
      replace(t, i, a) {
        return Ot(this, void 0, void 0, function* () {
          let u = yi.getUrl(t, this._baseUrl),
            l = this._headersFromOptions(a, !0),
            r = JSON.stringify(i, null, 2),
            s = yield this.client.put(u, r, l);
          return this.processResponse(s, a);
        });
      }
      uploadStream(t, i, a, u) {
        return Ot(this, void 0, void 0, function* () {
          let l = yi.getUrl(i, this._baseUrl),
            r = this._headersFromOptions(u, !0),
            s = yield this.client.sendStream(t, l, a, r);
          return this.processResponse(s, u);
        });
      }
      _headersFromOptions(t, i) {
        t = t || {};
        let a = t.additionalHeaders || {};
        if (((a.Accept = t.acceptHeader || "application/json"), i)) {
          let u = !1;
          for (let l in a) l.toLowerCase() == "content-type" && (u = !0);
          u || (a["Content-Type"] = "application/json; charset=utf-8");
        }
        return a;
      }
      static dateTimeDeserializer(t, i) {
        if (typeof i == "string") {
          let a = new Date(i);
          if (!isNaN(a.valueOf())) return a;
        }
        return i;
      }
      processResponse(t, i) {
        return Ot(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ot(this, void 0, void 0, function* () {
              let l = t.message.statusCode,
                r = { statusCode: l, result: null, headers: {} };
              l == md.HttpCodes.NotFound && a(r);
              let s, n;
              try {
                (n = yield t.readBody()),
                  n &&
                    n.length > 0 &&
                    (i && i.deserializeDates
                      ? (s = JSON.parse(n, Ar.dateTimeDeserializer))
                      : (s = JSON.parse(n)),
                    i && i.responseProcessor
                      ? (r.result = i.responseProcessor(s))
                      : (r.result = s)),
                  (r.headers = t.message.headers);
              } catch {}
              if (l > 299) {
                let o;
                s && s.message
                  ? (o = s.message)
                  : n && n.length > 0
                  ? (o = n)
                  : (o = "Failed request: (" + l + ")");
                let p = new Error(o);
                (p.statusCode = l), r.result && (p.result = r.result), u(p);
              } else a(r);
            })
          );
        });
      }
    };
  Or.RestClient = Ar;
});
var qe = x((Ta) => {
  "use strict";
  Object.defineProperty(Ta, "__esModule", { value: !0 });
  var Nv = _o(),
    Bv = Ku(),
    Mv = ga(),
    xv = as(),
    Ia = class {
      constructor(t, i, a, u) {
        (this.baseUrl = t),
          (this.http = new xv.HttpClient(a, i, u)),
          (this.rest = new Mv.RestClient(a, null, i, u)),
          (this.vsoClient = new Nv.VsoClient(t, this.rest)),
          (this.userAgent = a);
      }
      createAcceptHeader(t, i) {
        return t + (i ? ";api-version=" + i : "");
      }
      createRequestOptions(t, i) {
        let a = {};
        return (a.acceptHeader = this.createAcceptHeader(t, i)), a;
      }
      formatResponse(t, i, a) {
        let u = { responseTypeMetadata: i, responseIsCollection: a };
        return Bv.ContractSerializer.deserialize(
          t,
          u.responseTypeMetadata,
          !1,
          u.responseIsCollection
        );
      }
    };
  Ta.ClientApiBase = Ia;
});
var gd = x((Ur) => {
  "use strict";
  Object.defineProperty(Ur, "__esModule", { value: !0 });
  var _v;
  (function (e) {
    (e[(e.BigInt = 0)] = "BigInt"),
      (e[(e.Binary = 1)] = "Binary"),
      (e[(e.Bit = 2)] = "Bit"),
      (e[(e.Char = 3)] = "Char"),
      (e[(e.DateTime = 4)] = "DateTime"),
      (e[(e.Decimal = 5)] = "Decimal"),
      (e[(e.Float = 6)] = "Float"),
      (e[(e.Image = 7)] = "Image"),
      (e[(e.Int = 8)] = "Int"),
      (e[(e.Money = 9)] = "Money"),
      (e[(e.NChar = 10)] = "NChar"),
      (e[(e.NText = 11)] = "NText"),
      (e[(e.NVarChar = 12)] = "NVarChar"),
      (e[(e.Real = 13)] = "Real"),
      (e[(e.UniqueIdentifier = 14)] = "UniqueIdentifier"),
      (e[(e.SmallDateTime = 15)] = "SmallDateTime"),
      (e[(e.SmallInt = 16)] = "SmallInt"),
      (e[(e.SmallMoney = 17)] = "SmallMoney"),
      (e[(e.Text = 18)] = "Text"),
      (e[(e.Timestamp = 19)] = "Timestamp"),
      (e[(e.TinyInt = 20)] = "TinyInt"),
      (e[(e.VarBinary = 21)] = "VarBinary"),
      (e[(e.VarChar = 22)] = "VarChar"),
      (e[(e.Variant = 23)] = "Variant"),
      (e[(e.Xml = 25)] = "Xml"),
      (e[(e.Udt = 29)] = "Udt"),
      (e[(e.Structured = 30)] = "Structured"),
      (e[(e.Date = 31)] = "Date"),
      (e[(e.Time = 32)] = "Time"),
      (e[(e.DateTime2 = 33)] = "DateTime2"),
      (e[(e.DateTimeOffset = 34)] = "DateTimeOffset");
  })((_v = Ur.SqlDbType || (Ur.SqlDbType = {})));
  Ur.TypeInfo = {
    SqlDbType: {
      enumValues: {
        BigInt: 0,
        Binary: 1,
        Bit: 2,
        Char: 3,
        DateTime: 4,
        Decimal: 5,
        Float: 6,
        Image: 7,
        Int: 8,
        Money: 9,
        NChar: 10,
        NText: 11,
        NVarChar: 12,
        Real: 13,
        UniqueIdentifier: 14,
        SmallDateTime: 15,
        SmallInt: 16,
        SmallMoney: 17,
        Text: 18,
        Timestamp: 19,
        TinyInt: 20,
        VarBinary: 21,
        VarChar: 22,
        Variant: 23,
        Xml: 25,
        Udt: 29,
        Structured: 30,
        Date: 31,
        Time: 32,
        DateTime2: 33,
        DateTimeOffset: 34,
      },
    },
  };
});
var zi = x((ae) => {
  "use strict";
  Object.defineProperty(ae, "__esModule", { value: !0 });
  var Gv;
  (function (e) {
    (e[(e.Custom = 0)] = "Custom"),
      (e[(e.AzureSubscription = 1)] = "AzureSubscription"),
      (e[(e.Chef = 2)] = "Chef"),
      (e[(e.Generic = 3)] = "Generic");
  })((Gv = ae.ConnectedServiceKind || (ae.ConnectedServiceKind = {})));
  var Fv;
  (function (e) {
    (e[(e.Unknown = -1)] = "Unknown"),
      (e[(e.Xml = 0)] = "Xml"),
      (e[(e.Inherited = 1)] = "Inherited");
  })((Fv = ae.ProcessCustomizationType || (ae.ProcessCustomizationType = {})));
  var Lv;
  (function (e) {
    (e[(e.System = 0)] = "System"),
      (e[(e.Custom = 1)] = "Custom"),
      (e[(e.Inherited = 2)] = "Inherited");
  })((Lv = ae.ProcessType || (ae.ProcessType = {})));
  var Wv;
  (function (e) {
    (e[(e.Modified = 0)] = "Modified"),
      (e[(e.Deleted = 1)] = "Deleted"),
      (e[(e.Added = 2)] = "Added");
  })((Wv = ae.ProjectChangeType || (ae.ProjectChangeType = {})));
  var $v;
  (function (e) {
    (e[(e.Unchanged = -1)] = "Unchanged"),
      (e[(e.Private = 0)] = "Private"),
      (e[(e.Organization = 1)] = "Organization"),
      (e[(e.Public = 2)] = "Public"),
      (e[(e.SystemPrivate = 3)] = "SystemPrivate");
  })(($v = ae.ProjectVisibility || (ae.ProjectVisibility = {})));
  var Hv;
  (function (e) {
    (e[(e.Tfvc = 1)] = "Tfvc"), (e[(e.Git = 2)] = "Git");
  })((Hv = ae.SourceControlTypes || (ae.SourceControlTypes = {})));
  ae.TypeInfo = {
    ConnectedServiceKind: {
      enumValues: { custom: 0, azureSubscription: 1, chef: 2, generic: 3 },
    },
    Process: {},
    ProcessCustomizationType: {
      enumValues: { unknown: -1, xml: 0, inherited: 1 },
    },
    ProcessType: { enumValues: { system: 0, custom: 1, inherited: 2 } },
    ProjectChangeType: { enumValues: { modified: 0, deleted: 1, added: 2 } },
    ProjectInfo: {},
    ProjectMessage: {},
    ProjectVisibility: {
      enumValues: { private: 0, organization: 1, public: 2 },
    },
    SourceControlTypes: { enumValues: { tfvc: 1, git: 2 } },
    TeamProject: {},
    TeamProjectCollection: {},
    TeamProjectReference: {},
    TemporaryDataCreatedDTO: {},
    WebApiConnectedService: {},
    WebApiConnectedServiceDetails: {},
    WebApiProject: {},
  };
  ae.TypeInfo.Process.fields = { type: { enumType: ae.TypeInfo.ProcessType } };
  ae.TypeInfo.ProjectInfo.fields = {
    lastUpdateTime: { isDate: !0 },
    visibility: { enumType: ae.TypeInfo.ProjectVisibility },
  };
  ae.TypeInfo.ProjectMessage.fields = {
    project: { typeInfo: ae.TypeInfo.ProjectInfo },
    projectChangeType: { enumType: ae.TypeInfo.ProjectChangeType },
  };
  ae.TypeInfo.TeamProject.fields = {
    lastUpdateTime: { isDate: !0 },
    visibility: { enumType: ae.TypeInfo.ProjectVisibility },
  };
  ae.TypeInfo.TeamProjectCollection.fields = {
    processCustomizationType: {
      enumType: ae.TypeInfo.ProcessCustomizationType,
    },
  };
  ae.TypeInfo.TeamProjectReference.fields = {
    lastUpdateTime: { isDate: !0 },
    visibility: { enumType: ae.TypeInfo.ProjectVisibility },
  };
  ae.TypeInfo.TemporaryDataCreatedDTO.fields = {
    expirationDate: { isDate: !0 },
  };
  ae.TypeInfo.WebApiConnectedService.fields = {
    project: { typeInfo: ae.TypeInfo.TeamProjectReference },
  };
  ae.TypeInfo.WebApiConnectedServiceDetails.fields = {
    connectedServiceMetaData: { typeInfo: ae.TypeInfo.WebApiConnectedService },
  };
  ae.TypeInfo.WebApiProject.fields = {
    lastUpdateTime: { isDate: !0 },
    visibility: { enumType: ae.TypeInfo.ProjectVisibility },
  };
});
var Ra = x((v) => {
  "use strict";
  Object.defineProperty(v, "__esModule", { value: !0 });
  var zv = gd(),
    Qv = zi(),
    Jv;
  (function (e) {
    (e[(e.GeneralAttachment = 0)] = "GeneralAttachment"),
      (e[(e.AfnStrip = 1)] = "AfnStrip"),
      (e[(e.BugFilingData = 2)] = "BugFilingData"),
      (e[(e.CodeCoverage = 3)] = "CodeCoverage"),
      (e[(e.IntermediateCollectorData = 4)] = "IntermediateCollectorData"),
      (e[(e.RunConfig = 5)] = "RunConfig"),
      (e[(e.TestImpactDetails = 6)] = "TestImpactDetails"),
      (e[(e.TmiTestRunDeploymentFiles = 7)] = "TmiTestRunDeploymentFiles"),
      (e[(e.TmiTestRunReverseDeploymentFiles = 8)] =
        "TmiTestRunReverseDeploymentFiles"),
      (e[(e.TmiTestResultDetail = 9)] = "TmiTestResultDetail"),
      (e[(e.TmiTestRunSummary = 10)] = "TmiTestRunSummary"),
      (e[(e.ConsoleLog = 11)] = "ConsoleLog");
  })((Jv = v.AttachmentType || (v.AttachmentType = {})));
  var Kv;
  (function (e) {
    (e[(e.Failed = 2)] = "Failed"),
      (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Queued = 0)] = "Queued"),
      (e[(e.Succeeded = 3)] = "Succeeded");
  })((Kv = v.CloneOperationState || (v.CloneOperationState = {})));
  var Xv;
  (function (e) {
    (e[(e.Modules = 1)] = "Modules"),
      (e[(e.Functions = 2)] = "Functions"),
      (e[(e.BlockData = 4)] = "BlockData");
  })((Xv = v.CoverageQueryFlags || (v.CoverageQueryFlags = {})));
  var Zv;
  (function (e) {
    (e[(e.Covered = 0)] = "Covered"),
      (e[(e.NotCovered = 1)] = "NotCovered"),
      (e[(e.PartiallyCovered = 2)] = "PartiallyCovered");
  })((Zv = v.CoverageStatus || (v.CoverageStatus = {})));
  var Yv;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Completed = 2)] = "Completed"),
      (e[(e.Finalized = 3)] = "Finalized"),
      (e[(e.Pending = 4)] = "Pending"),
      (e[(e.UpdateRequestQueued = 5)] = "UpdateRequestQueued");
  })((Yv = v.CoverageSummaryStatus || (v.CoverageSummaryStatus = {})));
  var em;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.TestRun = 1)] = "TestRun"),
      (e[(e.TestResult = 2)] = "TestResult"),
      (e[(e.System = 4)] = "System"),
      (e[(e.All = 7)] = "All");
  })((em = v.CustomTestFieldScope || (v.CustomTestFieldScope = {})));
  var tm;
  (function (e) {
    (e[(e.Bit = 2)] = "Bit"),
      (e[(e.DateTime = 4)] = "DateTime"),
      (e[(e.Int = 8)] = "Int"),
      (e[(e.Float = 6)] = "Float"),
      (e[(e.String = 12)] = "String"),
      (e[(e.Guid = 14)] = "Guid");
  })((tm = v.CustomTestFieldType || (v.CustomTestFieldType = {})));
  var im;
  (function (e) {
    (e[(e.Custom = 1)] = "Custom"), (e[(e.System = 2)] = "System");
  })((im = v.FlakyDetectionType || (v.FlakyDetectionType = {})));
  var rm;
  (function (e) {
    (e[(e.All = 1)] = "All"),
      (e[(e.ResultSummary = 2)] = "ResultSummary"),
      (e[(e.ResultsAnalysis = 3)] = "ResultsAnalysis"),
      (e[(e.RunSummary = 4)] = "RunSummary");
  })((rm = v.Metrics || (v.Metrics = {})));
  var nm;
  (function (e) {
    (e[(e.Add = 1)] = "Add"), (e[(e.Delete = 2)] = "Delete");
  })((nm = v.OperationType || (v.OperationType = {})));
  var sm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Iterations = 1)] = "Iterations"),
      (e[(e.WorkItems = 2)] = "WorkItems"),
      (e[(e.SubResults = 4)] = "SubResults"),
      (e[(e.Point = 8)] = "Point");
  })((sm = v.ResultDetails || (v.ResultDetails = {})));
  var om;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Rerun = 1)] = "Rerun"),
      (e[(e.DataDriven = 2)] = "DataDriven"),
      (e[(e.OrderedTest = 3)] = "OrderedTest"),
      (e[(e.Generic = 4)] = "Generic");
  })((om = v.ResultGroupType || (v.ResultGroupType = {})));
  var am;
  (function (e) {
    (e[(e.Rerun = 1)] = "Rerun"), (e[(e.Flaky = 2)] = "Flaky");
  })((am = v.ResultMetadata || (v.ResultMetadata = {})));
  var lm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.FlakyIdentifiers = 1)] = "FlakyIdentifiers");
  })((lm = v.ResultMetaDataDetails || (v.ResultMetaDataDetails = {})));
  var um;
  (function (e) {
    (e[(e.TestSuite = 0)] = "TestSuite"), (e[(e.TestPlan = 1)] = "TestPlan");
  })((um = v.ResultObjectType || (v.ResultObjectType = {})));
  var pm;
  (function (e) {
    (e[(e.Unspecified = 0)] = "Unspecified"),
      (e[(e.Normal = 1)] = "Normal"),
      (e[(e.Blocking = 2)] = "Blocking"),
      (e[(e.Web = 4)] = "Web"),
      (e[(e.MtrRunInitiatedFromWeb = 8)] = "MtrRunInitiatedFromWeb"),
      (e[(e.RunWithDtlEnv = 16)] = "RunWithDtlEnv"),
      (e[(e.NoConfigRun = 32)] = "NoConfigRun");
  })((pm = v.RunType || (v.RunType = {})));
  var dm;
  (function (e) {
    (e[(e.Any = 0)] = "Any"),
      (e[(e.Tcm = 1)] = "Tcm"),
      (e[(e.Tfs = 2)] = "Tfs");
  })((dm = v.Service || (v.Service = {})));
  var cm;
  (function (e) {
    (e[(e.Children = 1)] = "Children"),
      (e[(e.DefaultTesters = 2)] = "DefaultTesters");
  })((cm = v.SuiteExpand || (v.SuiteExpand = {})));
  var fm;
  (function (e) {
    (e[(e.NotStarted = 0)] = "NotStarted"),
      (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Completed = 2)] = "Completed"),
      (e[(e.Failed = 3)] = "Failed");
  })(
    (fm =
      v.TCMServiceDataMigrationStatus || (v.TCMServiceDataMigrationStatus = {}))
  );
  var hm;
  (function (e) {
    (e[(e.Active = 1)] = "Active"), (e[(e.Inactive = 2)] = "Inactive");
  })((hm = v.TestConfigurationState || (v.TestConfigurationState = {})));
  var ym;
  (function (e) {
    (e[(e.Run = 0)] = "Run"),
      (e[(e.Build = 1)] = "Build"),
      (e[(e.Release = 2)] = "Release");
  })((ym = v.TestLogScope || (v.TestLogScope = {})));
  var vm;
  (function (e) {
    (e[(e.Success = 0)] = "Success"),
      (e[(e.Failed = 1)] = "Failed"),
      (e[(e.FileAlreadyExists = 2)] = "FileAlreadyExists"),
      (e[(e.InvalidInput = 3)] = "InvalidInput"),
      (e[(e.InvalidFileName = 4)] = "InvalidFileName"),
      (e[(e.InvalidContainer = 5)] = "InvalidContainer"),
      (e[(e.TransferFailed = 6)] = "TransferFailed"),
      (e[(e.FeatureDisabled = 7)] = "FeatureDisabled"),
      (e[(e.BuildDoesNotExist = 8)] = "BuildDoesNotExist"),
      (e[(e.RunDoesNotExist = 9)] = "RunDoesNotExist"),
      (e[(e.ContainerNotCreated = 10)] = "ContainerNotCreated"),
      (e[(e.APINotSupported = 11)] = "APINotSupported"),
      (e[(e.FileSizeExceeds = 12)] = "FileSizeExceeds"),
      (e[(e.ContainerNotFound = 13)] = "ContainerNotFound"),
      (e[(e.FileNotFound = 14)] = "FileNotFound"),
      (e[(e.DirectoryNotFound = 15)] = "DirectoryNotFound"),
      (e[(e.StorageCapacityExceeded = 16)] = "StorageCapacityExceeded");
  })((vm = v.TestLogStatusCode || (v.TestLogStatusCode = {})));
  var mm;
  (function (e) {
    (e[(e.Root = 1)] = "Root"), (e[(e.File = 2)] = "File");
  })((mm = v.TestLogStoreEndpointType || (v.TestLogStoreEndpointType = {})));
  var gm;
  (function (e) {
    (e[(e.Read = 1)] = "Read"),
      (e[(e.Create = 2)] = "Create"),
      (e[(e.ReadAndCreate = 3)] = "ReadAndCreate");
  })((gm = v.TestLogStoreOperationType || (v.TestLogStoreOperationType = {})));
  var Im;
  (function (e) {
    (e[(e.GeneralAttachment = 1)] = "GeneralAttachment"),
      (e[(e.CodeCoverage = 2)] = "CodeCoverage"),
      (e[(e.TestImpact = 3)] = "TestImpact"),
      (e[(e.Intermediate = 4)] = "Intermediate"),
      (e[(e.System = 5)] = "System");
  })((Im = v.TestLogType || (v.TestLogType = {})));
  var Tm;
  (function (e) {
    (e[(e.Unspecified = 0)] = "Unspecified"),
      (e[(e.None = 1)] = "None"),
      (e[(e.Passed = 2)] = "Passed"),
      (e[(e.Failed = 3)] = "Failed"),
      (e[(e.Inconclusive = 4)] = "Inconclusive"),
      (e[(e.Timeout = 5)] = "Timeout"),
      (e[(e.Aborted = 6)] = "Aborted"),
      (e[(e.Blocked = 7)] = "Blocked"),
      (e[(e.NotExecuted = 8)] = "NotExecuted"),
      (e[(e.Warning = 9)] = "Warning"),
      (e[(e.Error = 10)] = "Error"),
      (e[(e.NotApplicable = 11)] = "NotApplicable"),
      (e[(e.Paused = 12)] = "Paused"),
      (e[(e.InProgress = 13)] = "InProgress"),
      (e[(e.NotImpacted = 14)] = "NotImpacted"),
      (e[(e.MaxValue = 14)] = "MaxValue");
  })((Tm = v.TestOutcome || (v.TestOutcome = {})));
  var Rm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Ready = 1)] = "Ready"),
      (e[(e.Completed = 2)] = "Completed"),
      (e[(e.NotReady = 3)] = "NotReady"),
      (e[(e.InProgress = 4)] = "InProgress"),
      (e[(e.MaxValue = 4)] = "MaxValue");
  })((Rm = v.TestPointState || (v.TestPointState = {})));
  var Vm;
  (function (e) {
    (e[(e.Branch = 1)] = "Branch"), (e[(e.Environment = 2)] = "Environment");
  })((Vm = v.TestResultGroupBy || (v.TestResultGroupBy = {})));
  var bm;
  (function (e) {
    (e[(e.Build = 1)] = "Build"),
      (e[(e.Release = 2)] = "Release"),
      (e[(e.Pipeline = 3)] = "Pipeline");
  })((bm = v.TestResultsContextType || (v.TestResultsContextType = {})));
  var Dm;
  (function (e) {
    (e[(e.All = 1)] = "All"),
      (e[(e.Flaky = 2)] = "Flaky"),
      (e[(e.NewTestLogging = 3)] = "NewTestLogging");
  })((Dm = v.TestResultsSettingsType || (v.TestResultsSettingsType = {})));
  var wm;
  (function (e) {
    (e[(e.Passed = 0)] = "Passed"),
      (e[(e.Failed = 1)] = "Failed"),
      (e[(e.NotImpacted = 2)] = "NotImpacted"),
      (e[(e.Others = 3)] = "Others");
  })((wm = v.TestRunOutcome || (v.TestRunOutcome = {})));
  var qm;
  (function (e) {
    (e[(e.Build = 1)] = "Build"),
      (e[(e.Release = 2)] = "Release"),
      (e[(e.All = 3)] = "All");
  })((qm = v.TestRunPublishContext || (v.TestRunPublishContext = {})));
  var Pm;
  (function (e) {
    (e[(e.Unspecified = 0)] = "Unspecified"),
      (e[(e.NotStarted = 1)] = "NotStarted"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Completed = 3)] = "Completed"),
      (e[(e.Aborted = 4)] = "Aborted"),
      (e[(e.Waiting = 5)] = "Waiting"),
      (e[(e.NeedsInvestigation = 6)] = "NeedsInvestigation");
  })((Pm = v.TestRunState || (v.TestRunState = {})));
  var Cm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.CreatingEnvironment = 1)] = "CreatingEnvironment"),
      (e[(e.RunningTests = 2)] = "RunningTests"),
      (e[(e.CanceledByUser = 3)] = "CanceledByUser"),
      (e[(e.AbortedBySystem = 4)] = "AbortedBySystem"),
      (e[(e.TimedOut = 5)] = "TimedOut"),
      (e[(e.PendingAnalysis = 6)] = "PendingAnalysis"),
      (e[(e.Analyzed = 7)] = "Analyzed"),
      (e[(e.CancellationInProgress = 8)] = "CancellationInProgress");
  })((Cm = v.TestRunSubstate || (v.TestRunSubstate = {})));
  var jm;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.XTDesktop = 1)] = "XTDesktop"),
      (e[(e.FeedbackDesktop = 2)] = "FeedbackDesktop"),
      (e[(e.XTWeb = 3)] = "XTWeb"),
      (e[(e.FeedbackWeb = 4)] = "FeedbackWeb"),
      (e[(e.XTDesktop2 = 5)] = "XTDesktop2"),
      (e[(e.SessionInsightsForAll = 6)] = "SessionInsightsForAll");
  })((jm = v.TestSessionSource || (v.TestSessionSource = {})));
  var Am;
  (function (e) {
    (e[(e.Unspecified = 0)] = "Unspecified"),
      (e[(e.NotStarted = 1)] = "NotStarted"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Paused = 3)] = "Paused"),
      (e[(e.Completed = 4)] = "Completed"),
      (e[(e.Declined = 5)] = "Declined");
  })((Am = v.TestSessionState || (v.TestSessionState = {})));
  v.TypeInfo = {
    AfnStrip: {},
    AggregatedDataForResultTrend: {},
    AggregatedResultDetailsByOutcome: {},
    AggregatedResultsAnalysis: {},
    AggregatedResultsByOutcome: {},
    AggregatedRunsByOutcome: {},
    AggregatedRunsByState: {},
    AttachmentType: {
      enumValues: {
        generalAttachment: 0,
        afnStrip: 1,
        bugFilingData: 2,
        codeCoverage: 3,
        intermediateCollectorData: 4,
        runConfig: 5,
        testImpactDetails: 6,
        tmiTestRunDeploymentFiles: 7,
        tmiTestRunReverseDeploymentFiles: 8,
        tmiTestResultDetail: 9,
        tmiTestRunSummary: 10,
        consoleLog: 11,
      },
    },
    BatchResponse: {},
    BuildConfiguration: {},
    BuildCoverage: {},
    BuildReference2: {},
    BulkResultUpdateRequest: {},
    CloneOperationInformation: {},
    CloneOperationState: {
      enumValues: { failed: 2, inProgress: 1, queued: 0, succeeded: 3 },
    },
    CodeCoverageSummary: {},
    Coverage2: {},
    CoverageQueryFlags: {
      enumValues: { modules: 1, functions: 2, blockData: 4 },
    },
    CoverageStatus: {
      enumValues: { covered: 0, notCovered: 1, partiallyCovered: 2 },
    },
    CoverageSummaryStatus: {
      enumValues: {
        none: 0,
        inProgress: 1,
        completed: 2,
        finalized: 3,
        pending: 4,
        updateRequestQueued: 5,
      },
    },
    CreateTestMessageLogEntryRequest: {},
    CreateTestResultsRequest: {},
    CreateTestRunRequest: {},
    CustomTestFieldDefinition: {},
    CustomTestFieldScope: {
      enumValues: { none: 0, testRun: 1, testResult: 2, system: 4, all: 7 },
    },
    CustomTestFieldType: {
      enumValues: {
        bit: 2,
        dateTime: 4,
        int: 8,
        float: 6,
        string: 12,
        guid: 14,
      },
    },
    DatedTestFieldData: {},
    FailingSince: {},
    FetchTestResultsResponse: {},
    FlakyDetection: {},
    FlakyDetectionType: { enumValues: { custom: 1, system: 2 } },
    FlakySettings: {},
    LastResultDetails: {},
    LegacyBuildConfiguration: {},
    LegacyReleaseReference: {},
    LegacyTestCaseResult: {},
    LegacyTestRun: {},
    LegacyTestSettings: {},
    Metrics: {
      enumValues: {
        all: 1,
        resultSummary: 2,
        resultsAnalysis: 3,
        runSummary: 4,
      },
    },
    OperationType: { enumValues: { add: 1, delete: 2 } },
    PipelineTestMetrics: {},
    PointLastResult: {},
    PointsResults2: {},
    QueryTestActionResultResponse: {},
    ReleaseReference: {},
    ReleaseReference2: {},
    RequirementsToTestsMapping2: {},
    Response: {},
    ResultDetails: {
      enumValues: {
        none: 0,
        iterations: 1,
        workItems: 2,
        subResults: 4,
        point: 8,
      },
    },
    ResultGroupType: {
      enumValues: {
        none: 0,
        rerun: 1,
        dataDriven: 2,
        orderedTest: 3,
        generic: 4,
      },
    },
    ResultMetadata: { enumValues: { rerun: 1, flaky: 2 } },
    ResultMetaDataDetails: { enumValues: { none: 0, flakyIdentifiers: 1 } },
    ResultObjectType: { enumValues: { testSuite: 0, testPlan: 1 } },
    ResultRetentionSettings: {},
    ResultsByQueryResponse: {},
    ResultsFilter: {},
    ResultsSummaryByOutcome: {},
    ResultSummary: {},
    ResultUpdateRequest: {},
    ResultUpdateRequestModel: {},
    ResultUpdateResponse: {},
    RunCreateModel: {},
    RunStatistic: {},
    RunSummary: {},
    RunSummaryModel: {},
    RunType: {
      enumValues: {
        unspecified: 0,
        normal: 1,
        blocking: 2,
        web: 4,
        mtrRunInitiatedFromWeb: 8,
        runWithDtlEnv: 16,
        noConfigRun: 32,
      },
    },
    RunUpdateModel: {},
    Service: { enumValues: { any: 0, tcm: 1, tfs: 2 } },
    SuiteExpand: { enumValues: { children: 1, defaultTesters: 2 } },
    TCMServiceDataMigrationStatus: {
      enumValues: { notStarted: 0, inProgress: 1, completed: 2, failed: 3 },
    },
    TestActionResult: {},
    TestActionResult2: {},
    TestActionResultModel: {},
    TestAttachment: {},
    TestAuthoringDetails: {},
    TestCaseReference2: {},
    TestCaseResult: {},
    TestConfiguration: {},
    TestConfigurationState: { enumValues: { active: 1, inactive: 2 } },
    TestExecutionReportData: {},
    TestExtensionField: {},
    TestExtensionFieldDetails: {},
    TestFailuresAnalysis: {},
    TestHistoryQuery: {},
    TestIterationDetailsModel: {},
    TestLog: {},
    TestLogReference: {},
    TestLogScope: { enumValues: { run: 0, build: 1, release: 2 } },
    TestLogStatus: {},
    TestLogStatusCode: {
      enumValues: {
        success: 0,
        failed: 1,
        fileAlreadyExists: 2,
        invalidInput: 3,
        invalidFileName: 4,
        invalidContainer: 5,
        transferFailed: 6,
        featureDisabled: 7,
        buildDoesNotExist: 8,
        runDoesNotExist: 9,
        containerNotCreated: 10,
        apiNotSupported: 11,
        fileSizeExceeds: 12,
        containerNotFound: 13,
        fileNotFound: 14,
        directoryNotFound: 15,
        storageCapacityExceeded: 16,
      },
    },
    TestLogStoreAttachment: {},
    TestLogStoreEndpointDetails: {},
    TestLogStoreEndpointType: { enumValues: { root: 1, file: 2 } },
    TestLogStoreOperationType: {
      enumValues: { read: 1, create: 2, readAndCreate: 3 },
    },
    TestLogType: {
      enumValues: {
        generalAttachment: 1,
        codeCoverage: 2,
        testImpact: 3,
        intermediate: 4,
        system: 5,
      },
    },
    TestMessageLogDetails: {},
    TestMessageLogEntry: {},
    TestMessageLogEntry2: {},
    TestOutcome: {
      enumValues: {
        unspecified: 0,
        none: 1,
        passed: 2,
        failed: 3,
        inconclusive: 4,
        timeout: 5,
        aborted: 6,
        blocked: 7,
        notExecuted: 8,
        warning: 9,
        error: 10,
        notApplicable: 11,
        paused: 12,
        inProgress: 13,
        notImpacted: 14,
        maxValue: 14,
      },
    },
    TestParameter2: {},
    TestPlan: {},
    TestPlanCloneRequest: {},
    TestPlanHubData: {},
    TestPlansWithSelection: {},
    TestPoint: {},
    TestPointReference: {},
    TestPointsEvent: {},
    TestPointsQuery: {},
    TestPointState: {
      enumValues: {
        none: 0,
        ready: 1,
        completed: 2,
        notReady: 3,
        inProgress: 4,
        maxValue: 4,
      },
    },
    TestPointsUpdatedEvent: {},
    TestResult2: {},
    TestResultAcrossProjectResponse: {},
    TestResultAttachment: {},
    TestResultGroupBy: { enumValues: { branch: 1, environment: 2 } },
    TestResultHistory: {},
    TestResultHistoryDetailsForGroup: {},
    TestResultHistoryForGroup: {},
    TestResultModelBase: {},
    TestResultReset2: {},
    TestResultsContext: {},
    TestResultsContextType: {
      enumValues: { build: 1, release: 2, pipeline: 3 },
    },
    TestResultsDetails: {},
    TestResultsDetailsForGroup: {},
    TestResultsEx2: {},
    TestResultsQuery: {},
    TestResultsSettings: {},
    TestResultsSettingsType: {
      enumValues: { all: 1, flaky: 2, newTestLogging: 3 },
    },
    TestResultSummary: {},
    TestResultsUpdateSettings: {},
    TestResultsWithWatermark: {},
    TestResultTrendFilter: {},
    TestRun: {},
    TestRun2: {},
    TestRunCanceledEvent: {},
    TestRunCreatedEvent: {},
    TestRunEvent: {},
    TestRunEx2: {},
    TestRunOutcome: {
      enumValues: { passed: 0, failed: 1, notImpacted: 2, others: 3 },
    },
    TestRunPublishContext: { enumValues: { build: 1, release: 2, all: 3 } },
    TestRunStartedEvent: {},
    TestRunState: {
      enumValues: {
        unspecified: 0,
        notStarted: 1,
        inProgress: 2,
        completed: 3,
        aborted: 4,
        waiting: 5,
        needsInvestigation: 6,
      },
    },
    TestRunStatistic: {},
    TestRunSubstate: {
      enumValues: {
        none: 0,
        creatingEnvironment: 1,
        runningTests: 2,
        canceledByUser: 3,
        abortedBySystem: 4,
        timedOut: 5,
        pendingAnalysis: 6,
        analyzed: 7,
        cancellationInProgress: 8,
      },
    },
    TestRunSummary2: {},
    TestRunWithDtlEnvEvent: {},
    TestSession: {},
    TestSessionExploredWorkItemReference: {},
    TestSessionSource: {
      enumValues: {
        unknown: 0,
        xtDesktop: 1,
        feedbackDesktop: 2,
        xtWeb: 3,
        feedbackWeb: 4,
        xtDesktop2: 5,
        sessionInsightsForAll: 6,
      },
    },
    TestSessionState: {
      enumValues: {
        unspecified: 0,
        notStarted: 1,
        inProgress: 2,
        paused: 3,
        completed: 4,
        declined: 5,
      },
    },
    TestSettings2: {},
    TestSubResult: {},
    TestSuite: {},
    TestSummaryForWorkItem: {},
    UpdatedProperties: {},
    UpdateTestRunRequest: {},
    UpdateTestRunResponse: {},
    WorkItemToTestLinks: {},
  };
  v.TypeInfo.AfnStrip.fields = { creationDate: { isDate: !0 } };
  v.TypeInfo.AggregatedDataForResultTrend.fields = {
    resultsByOutcome: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestOutcome,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedResultsByOutcome,
    },
    runSummaryByState: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestRunState,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedRunsByState,
    },
    testResultsContext: { typeInfo: v.TypeInfo.TestResultsContext },
  };
  v.TypeInfo.AggregatedResultDetailsByOutcome.fields = {
    outcome: { enumType: v.TypeInfo.TestOutcome },
  };
  v.TypeInfo.AggregatedResultsAnalysis.fields = {
    notReportedResultsByOutcome: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestOutcome,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedResultsByOutcome,
    },
    previousContext: { typeInfo: v.TypeInfo.TestResultsContext },
    resultsByOutcome: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestOutcome,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedResultsByOutcome,
    },
    runSummaryByOutcome: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestRunOutcome,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedRunsByOutcome,
    },
    runSummaryByState: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestRunState,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedRunsByState,
    },
  };
  v.TypeInfo.AggregatedResultsByOutcome.fields = {
    outcome: { enumType: v.TypeInfo.TestOutcome },
  };
  v.TypeInfo.AggregatedRunsByOutcome.fields = {
    outcome: { enumType: v.TypeInfo.TestRunOutcome },
  };
  v.TypeInfo.AggregatedRunsByState.fields = {
    resultsByOutcome: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestOutcome,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedResultsByOutcome,
    },
    state: { enumType: v.TypeInfo.TestRunState },
  };
  v.TypeInfo.BatchResponse.fields = {
    responses: { isArray: !0, typeInfo: v.TypeInfo.Response },
  };
  v.TypeInfo.BuildConfiguration.fields = { creationDate: { isDate: !0 } };
  v.TypeInfo.BuildCoverage.fields = {
    configuration: { typeInfo: v.TypeInfo.BuildConfiguration },
  };
  v.TypeInfo.BuildReference2.fields = { createdDate: { isDate: !0 } };
  v.TypeInfo.BulkResultUpdateRequest.fields = {
    requests: { isArray: !0, typeInfo: v.TypeInfo.ResultUpdateRequest },
  };
  v.TypeInfo.CloneOperationInformation.fields = {
    completionDate: { isDate: !0 },
    creationDate: { isDate: !0 },
    resultObjectType: { enumType: v.TypeInfo.ResultObjectType },
    state: { enumType: v.TypeInfo.CloneOperationState },
  };
  v.TypeInfo.CodeCoverageSummary.fields = {
    status: { enumType: v.TypeInfo.CoverageSummaryStatus },
  };
  v.TypeInfo.Coverage2.fields = {
    dateCreated: { isDate: !0 },
    dateModified: { isDate: !0 },
  };
  v.TypeInfo.CreateTestMessageLogEntryRequest.fields = {
    testMessageLogEntry: {
      isArray: !0,
      typeInfo: v.TypeInfo.TestMessageLogEntry,
    },
  };
  v.TypeInfo.CreateTestResultsRequest.fields = {
    results: { isArray: !0, typeInfo: v.TypeInfo.LegacyTestCaseResult },
  };
  v.TypeInfo.CreateTestRunRequest.fields = {
    results: { isArray: !0, typeInfo: v.TypeInfo.LegacyTestCaseResult },
    testRun: { typeInfo: v.TypeInfo.LegacyTestRun },
    testSettings: { typeInfo: v.TypeInfo.LegacyTestSettings },
  };
  v.TypeInfo.CustomTestFieldDefinition.fields = {
    fieldType: { enumType: v.TypeInfo.CustomTestFieldType },
    scope: { enumType: v.TypeInfo.CustomTestFieldScope },
  };
  v.TypeInfo.DatedTestFieldData.fields = { date: { isDate: !0 } };
  v.TypeInfo.FailingSince.fields = {
    date: { isDate: !0 },
    release: { typeInfo: v.TypeInfo.ReleaseReference },
  };
  v.TypeInfo.FetchTestResultsResponse.fields = {
    actionResults: { isArray: !0, typeInfo: v.TypeInfo.TestActionResult },
    attachments: { isArray: !0, typeInfo: v.TypeInfo.TestResultAttachment },
    results: { isArray: !0, typeInfo: v.TypeInfo.LegacyTestCaseResult },
  };
  v.TypeInfo.FlakyDetection.fields = {
    flakyDetectionType: { enumType: v.TypeInfo.FlakyDetectionType },
  };
  v.TypeInfo.FlakySettings.fields = {
    flakyDetection: { typeInfo: v.TypeInfo.FlakyDetection },
  };
  v.TypeInfo.LastResultDetails.fields = { dateCompleted: { isDate: !0 } };
  v.TypeInfo.LegacyBuildConfiguration.fields = {
    completedDate: { isDate: !0 },
    createdDate: { isDate: !0 },
  };
  v.TypeInfo.LegacyReleaseReference.fields = {
    environmentCreationDate: { isDate: !0 },
    releaseCreationDate: { isDate: !0 },
  };
  v.TypeInfo.LegacyTestCaseResult.fields = {
    buildReference: { typeInfo: v.TypeInfo.LegacyBuildConfiguration },
    creationDate: { isDate: !0 },
    customFields: { isArray: !0, typeInfo: v.TypeInfo.TestExtensionField },
    dateCompleted: { isDate: !0 },
    dateStarted: { isDate: !0 },
    failingSince: { typeInfo: v.TypeInfo.FailingSince },
    lastUpdated: { isDate: !0 },
    releaseReference: { typeInfo: v.TypeInfo.LegacyReleaseReference },
    resultGroupType: { enumType: v.TypeInfo.ResultGroupType },
    stackTrace: { typeInfo: v.TypeInfo.TestExtensionField },
  };
  v.TypeInfo.LegacyTestRun.fields = {
    buildReference: { typeInfo: v.TypeInfo.LegacyBuildConfiguration },
    completeDate: { isDate: !0 },
    creationDate: { isDate: !0 },
    customFields: { isArray: !0, typeInfo: v.TypeInfo.TestExtensionField },
    dueDate: { isDate: !0 },
    lastUpdated: { isDate: !0 },
    releaseReference: { typeInfo: v.TypeInfo.LegacyReleaseReference },
    startDate: { isDate: !0 },
    testMessageLogEntries: {
      isArray: !0,
      typeInfo: v.TypeInfo.TestMessageLogDetails,
    },
  };
  v.TypeInfo.LegacyTestSettings.fields = {
    createdDate: { isDate: !0 },
    lastUpdated: { isDate: !0 },
  };
  v.TypeInfo.PipelineTestMetrics.fields = {
    resultSummary: { typeInfo: v.TypeInfo.ResultSummary },
    runSummary: { typeInfo: v.TypeInfo.RunSummary },
    summaryAtChild: { isArray: !0, typeInfo: v.TypeInfo.PipelineTestMetrics },
  };
  v.TypeInfo.PointLastResult.fields = { lastUpdatedDate: { isDate: !0 } };
  v.TypeInfo.PointsResults2.fields = { lastUpdated: { isDate: !0 } };
  v.TypeInfo.QueryTestActionResultResponse.fields = {
    testActionResults: { isArray: !0, typeInfo: v.TypeInfo.TestActionResult },
    testAttachments: { isArray: !0, typeInfo: v.TypeInfo.TestResultAttachment },
  };
  v.TypeInfo.ReleaseReference.fields = {
    creationDate: { isDate: !0 },
    environmentCreationDate: { isDate: !0 },
  };
  v.TypeInfo.ReleaseReference2.fields = {
    environmentCreationDate: { isDate: !0 },
    releaseCreationDate: { isDate: !0 },
  };
  v.TypeInfo.RequirementsToTestsMapping2.fields = {
    creationDate: { isDate: !0 },
    deletionDate: { isDate: !0 },
  };
  v.TypeInfo.Response.fields = {};
  v.TypeInfo.ResultRetentionSettings.fields = {
    lastUpdatedDate: { isDate: !0 },
  };
  v.TypeInfo.ResultsByQueryResponse.fields = {
    testResults: { isArray: !0, typeInfo: v.TypeInfo.LegacyTestCaseResult },
  };
  v.TypeInfo.ResultsFilter.fields = {
    executedIn: { enumType: v.TypeInfo.Service },
    maxCompleteDate: { isDate: !0 },
    testResultsContext: { typeInfo: v.TypeInfo.TestResultsContext },
  };
  v.TypeInfo.ResultsSummaryByOutcome.fields = {
    aggregatedResultDetailsByOutcome: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestOutcome,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedResultDetailsByOutcome,
    },
  };
  v.TypeInfo.ResultSummary.fields = {
    resultSummaryByRunState: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestRunState,
      dictionaryValueTypeInfo: v.TypeInfo.ResultsSummaryByOutcome,
    },
  };
  v.TypeInfo.ResultUpdateRequest.fields = {
    actionResultDeletes: { isArray: !0, typeInfo: v.TypeInfo.TestActionResult },
    actionResults: { isArray: !0, typeInfo: v.TypeInfo.TestActionResult },
    attachments: { isArray: !0, typeInfo: v.TypeInfo.TestResultAttachment },
    testCaseResult: { typeInfo: v.TypeInfo.LegacyTestCaseResult },
  };
  v.TypeInfo.ResultUpdateRequestModel.fields = {
    actionResultDeletes: {
      isArray: !0,
      typeInfo: v.TypeInfo.TestActionResultModel,
    },
    actionResults: { isArray: !0, typeInfo: v.TypeInfo.TestActionResultModel },
  };
  v.TypeInfo.ResultUpdateResponse.fields = { lastUpdated: { isDate: !0 } };
  v.TypeInfo.RunCreateModel.fields = {
    buildReference: { typeInfo: v.TypeInfo.BuildConfiguration },
    releaseReference: { typeInfo: v.TypeInfo.ReleaseReference },
    runSummary: { isArray: !0, typeInfo: v.TypeInfo.RunSummaryModel },
  };
  v.TypeInfo.RunStatistic.fields = {
    resultMetadata: { enumType: v.TypeInfo.ResultMetadata },
  };
  v.TypeInfo.RunSummary.fields = {
    runSummaryByOutcome: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestRunOutcome,
    },
    runSummaryByState: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestRunState,
    },
  };
  v.TypeInfo.RunSummaryModel.fields = {
    testOutcome: { enumType: v.TypeInfo.TestOutcome },
  };
  v.TypeInfo.RunUpdateModel.fields = {
    logEntries: { isArray: !0, typeInfo: v.TypeInfo.TestMessageLogDetails },
    runSummary: { isArray: !0, typeInfo: v.TypeInfo.RunSummaryModel },
    substate: { enumType: v.TypeInfo.TestRunSubstate },
  };
  v.TypeInfo.TestActionResult.fields = {
    creationDate: { isDate: !0 },
    dateCompleted: { isDate: !0 },
    dateStarted: { isDate: !0 },
    lastUpdated: { isDate: !0 },
  };
  v.TypeInfo.TestActionResult2.fields = {
    creationDate: { isDate: !0 },
    dateCompleted: { isDate: !0 },
    dateStarted: { isDate: !0 },
    lastUpdated: { isDate: !0 },
  };
  v.TypeInfo.TestActionResultModel.fields = {
    completedDate: { isDate: !0 },
    startedDate: { isDate: !0 },
  };
  v.TypeInfo.TestAttachment.fields = {
    attachmentType: { enumType: v.TypeInfo.AttachmentType },
    createdDate: { isDate: !0 },
  };
  v.TypeInfo.TestAuthoringDetails.fields = {
    lastUpdated: { isDate: !0 },
    state: { enumType: v.TypeInfo.TestPointState },
  };
  v.TypeInfo.TestCaseReference2.fields = {
    creationDate: { isDate: !0 },
    lastRefTestRunDate: { isDate: !0 },
  };
  v.TypeInfo.TestCaseResult.fields = {
    completedDate: { isDate: !0 },
    createdDate: { isDate: !0 },
    failingSince: { typeInfo: v.TypeInfo.FailingSince },
    iterationDetails: {
      isArray: !0,
      typeInfo: v.TypeInfo.TestIterationDetailsModel,
    },
    lastUpdatedDate: { isDate: !0 },
    releaseReference: { typeInfo: v.TypeInfo.ReleaseReference },
    resultGroupType: { enumType: v.TypeInfo.ResultGroupType },
    startedDate: { isDate: !0 },
    subResults: { isArray: !0, typeInfo: v.TypeInfo.TestSubResult },
  };
  v.TypeInfo.TestConfiguration.fields = {
    lastUpdatedDate: { isDate: !0 },
    state: { enumType: v.TypeInfo.TestConfigurationState },
  };
  v.TypeInfo.TestExecutionReportData.fields = {
    reportData: { isArray: !0, typeInfo: v.TypeInfo.DatedTestFieldData },
  };
  v.TypeInfo.TestExtensionField.fields = {
    field: { typeInfo: v.TypeInfo.TestExtensionFieldDetails },
  };
  v.TypeInfo.TestExtensionFieldDetails.fields = {
    type: { enumType: zv.TypeInfo.SqlDbType },
  };
  v.TypeInfo.TestFailuresAnalysis.fields = {
    previousContext: { typeInfo: v.TypeInfo.TestResultsContext },
  };
  v.TypeInfo.TestHistoryQuery.fields = {
    groupBy: { enumType: v.TypeInfo.TestResultGroupBy },
    maxCompleteDate: { isDate: !0 },
    resultsForGroup: {
      isArray: !0,
      typeInfo: v.TypeInfo.TestResultHistoryForGroup,
    },
  };
  v.TypeInfo.TestIterationDetailsModel.fields = {
    actionResults: { isArray: !0, typeInfo: v.TypeInfo.TestActionResultModel },
    completedDate: { isDate: !0 },
    startedDate: { isDate: !0 },
  };
  v.TypeInfo.TestLog.fields = {
    logReference: { typeInfo: v.TypeInfo.TestLogReference },
    modifiedOn: { isDate: !0 },
  };
  v.TypeInfo.TestLogReference.fields = {
    scope: { enumType: v.TypeInfo.TestLogScope },
    type: { enumType: v.TypeInfo.TestLogType },
  };
  v.TypeInfo.TestLogStatus.fields = {
    status: { enumType: v.TypeInfo.TestLogStatusCode },
  };
  v.TypeInfo.TestLogStoreAttachment.fields = {
    attachmentType: { enumType: v.TypeInfo.AttachmentType },
    createdDate: { isDate: !0 },
  };
  v.TypeInfo.TestLogStoreEndpointDetails.fields = {
    endpointType: { enumType: v.TypeInfo.TestLogStoreEndpointType },
    status: { enumType: v.TypeInfo.TestLogStatusCode },
  };
  v.TypeInfo.TestMessageLogDetails.fields = { dateCreated: { isDate: !0 } };
  v.TypeInfo.TestMessageLogEntry.fields = { dateCreated: { isDate: !0 } };
  v.TypeInfo.TestMessageLogEntry2.fields = { dateCreated: { isDate: !0 } };
  v.TypeInfo.TestParameter2.fields = {
    creationDate: { isDate: !0 },
    dateModified: { isDate: !0 },
  };
  v.TypeInfo.TestPlan.fields = {
    endDate: { isDate: !0 },
    startDate: { isDate: !0 },
    updatedDate: { isDate: !0 },
  };
  v.TypeInfo.TestPlanCloneRequest.fields = {
    destinationTestPlan: { typeInfo: v.TypeInfo.TestPlan },
  };
  v.TypeInfo.TestPlanHubData.fields = {
    testPlan: { typeInfo: v.TypeInfo.TestPlan },
    testPoints: { isArray: !0, typeInfo: v.TypeInfo.TestPoint },
    testSuites: { isArray: !0, typeInfo: v.TypeInfo.TestSuite },
  };
  v.TypeInfo.TestPlansWithSelection.fields = {
    plans: { isArray: !0, typeInfo: v.TypeInfo.TestPlan },
  };
  v.TypeInfo.TestPoint.fields = {
    lastResetToActive: { isDate: !0 },
    lastResultDetails: { typeInfo: v.TypeInfo.LastResultDetails },
    lastUpdatedDate: { isDate: !0 },
  };
  v.TypeInfo.TestPointReference.fields = {
    state: { enumType: v.TypeInfo.TestPointState },
  };
  v.TypeInfo.TestPointsEvent.fields = {
    testPoints: { isArray: !0, typeInfo: v.TypeInfo.TestPointReference },
  };
  v.TypeInfo.TestPointsQuery.fields = {
    points: { isArray: !0, typeInfo: v.TypeInfo.TestPoint },
  };
  v.TypeInfo.TestPointsUpdatedEvent.fields = {
    testPoints: { isArray: !0, typeInfo: v.TypeInfo.TestPointReference },
  };
  v.TypeInfo.TestResult2.fields = {
    creationDate: { isDate: !0 },
    dateCompleted: { isDate: !0 },
    dateStarted: { isDate: !0 },
    lastUpdated: { isDate: !0 },
  };
  v.TypeInfo.TestResultAcrossProjectResponse.fields = {
    testResult: { typeInfo: v.TypeInfo.LegacyTestCaseResult },
  };
  v.TypeInfo.TestResultAttachment.fields = {
    attachmentType: { enumType: v.TypeInfo.AttachmentType },
    creationDate: { isDate: !0 },
  };
  v.TypeInfo.TestResultHistory.fields = {
    resultsForGroup: {
      isArray: !0,
      typeInfo: v.TypeInfo.TestResultHistoryDetailsForGroup,
    },
  };
  v.TypeInfo.TestResultHistoryDetailsForGroup.fields = {
    latestResult: { typeInfo: v.TypeInfo.TestCaseResult },
  };
  v.TypeInfo.TestResultHistoryForGroup.fields = {
    results: { isArray: !0, typeInfo: v.TypeInfo.TestCaseResult },
  };
  v.TypeInfo.TestResultModelBase.fields = {
    completedDate: { isDate: !0 },
    startedDate: { isDate: !0 },
  };
  v.TypeInfo.TestResultReset2.fields = { dateModified: { isDate: !0 } };
  v.TypeInfo.TestResultsContext.fields = {
    contextType: { enumType: v.TypeInfo.TestResultsContextType },
    release: { typeInfo: v.TypeInfo.ReleaseReference },
  };
  v.TypeInfo.TestResultsDetails.fields = {
    resultsForGroup: {
      isArray: !0,
      typeInfo: v.TypeInfo.TestResultsDetailsForGroup,
    },
  };
  v.TypeInfo.TestResultsDetailsForGroup.fields = {
    results: { isArray: !0, typeInfo: v.TypeInfo.TestCaseResult },
    resultsCountByOutcome: {
      isDictionary: !0,
      dictionaryKeyEnumType: v.TypeInfo.TestOutcome,
      dictionaryValueTypeInfo: v.TypeInfo.AggregatedResultsByOutcome,
    },
  };
  v.TypeInfo.TestResultsEx2.fields = {
    creationDate: { isDate: !0 },
    dateTimeValue: { isDate: !0 },
  };
  v.TypeInfo.TestResultsQuery.fields = {
    results: { isArray: !0, typeInfo: v.TypeInfo.TestCaseResult },
    resultsFilter: { typeInfo: v.TypeInfo.ResultsFilter },
  };
  v.TypeInfo.TestResultsSettings.fields = {
    flakySettings: { typeInfo: v.TypeInfo.FlakySettings },
  };
  v.TypeInfo.TestResultSummary.fields = {
    aggregatedResultsAnalysis: {
      typeInfo: v.TypeInfo.AggregatedResultsAnalysis,
    },
    teamProject: { typeInfo: Qv.TypeInfo.TeamProjectReference },
    testFailures: { typeInfo: v.TypeInfo.TestFailuresAnalysis },
    testResultsContext: { typeInfo: v.TypeInfo.TestResultsContext },
  };
  v.TypeInfo.TestResultsUpdateSettings.fields = {
    flakySettings: { typeInfo: v.TypeInfo.FlakySettings },
  };
  v.TypeInfo.TestResultsWithWatermark.fields = {
    changedDate: { isDate: !0 },
    pointsResults: { isArray: !0, typeInfo: v.TypeInfo.PointsResults2 },
  };
  v.TypeInfo.TestResultTrendFilter.fields = { maxCompleteDate: { isDate: !0 } };
  v.TypeInfo.TestRun.fields = {
    buildConfiguration: { typeInfo: v.TypeInfo.BuildConfiguration },
    completedDate: { isDate: !0 },
    createdDate: { isDate: !0 },
    dueDate: { isDate: !0 },
    lastUpdatedDate: { isDate: !0 },
    release: { typeInfo: v.TypeInfo.ReleaseReference },
    runStatistics: { isArray: !0, typeInfo: v.TypeInfo.RunStatistic },
    startedDate: { isDate: !0 },
    substate: { enumType: v.TypeInfo.TestRunSubstate },
  };
  v.TypeInfo.TestRun2.fields = {
    completeDate: { isDate: !0 },
    creationDate: { isDate: !0 },
    deletedOn: { isDate: !0 },
    dueDate: { isDate: !0 },
    lastUpdated: { isDate: !0 },
    startDate: { isDate: !0 },
  };
  v.TypeInfo.TestRunCanceledEvent.fields = {
    testRun: { typeInfo: v.TypeInfo.TestRun },
  };
  v.TypeInfo.TestRunCreatedEvent.fields = {
    testRun: { typeInfo: v.TypeInfo.TestRun },
  };
  v.TypeInfo.TestRunEvent.fields = {
    testRun: { typeInfo: v.TypeInfo.TestRun },
  };
  v.TypeInfo.TestRunEx2.fields = {
    createdDate: { isDate: !0 },
    dateTimeValue: { isDate: !0 },
  };
  v.TypeInfo.TestRunStartedEvent.fields = {
    testRun: { typeInfo: v.TypeInfo.TestRun },
  };
  v.TypeInfo.TestRunStatistic.fields = {
    runStatistics: { isArray: !0, typeInfo: v.TypeInfo.RunStatistic },
  };
  v.TypeInfo.TestRunSummary2.fields = { testRunCompletedDate: { isDate: !0 } };
  v.TypeInfo.TestRunWithDtlEnvEvent.fields = {
    testRun: { typeInfo: v.TypeInfo.TestRun },
  };
  v.TypeInfo.TestSession.fields = {
    endDate: { isDate: !0 },
    lastUpdatedDate: { isDate: !0 },
    source: { enumType: v.TypeInfo.TestSessionSource },
    startDate: { isDate: !0 },
    state: { enumType: v.TypeInfo.TestSessionState },
  };
  v.TypeInfo.TestSessionExploredWorkItemReference.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  v.TypeInfo.TestSettings2.fields = {
    createdDate: { isDate: !0 },
    lastUpdatedDate: { isDate: !0 },
  };
  v.TypeInfo.TestSubResult.fields = {
    completedDate: { isDate: !0 },
    lastUpdatedDate: { isDate: !0 },
    resultGroupType: { enumType: v.TypeInfo.ResultGroupType },
    startedDate: { isDate: !0 },
    subResults: { isArray: !0, typeInfo: v.TypeInfo.TestSubResult },
  };
  v.TypeInfo.TestSuite.fields = {
    children: { isArray: !0, typeInfo: v.TypeInfo.TestSuite },
    lastPopulatedDate: { isDate: !0 },
    lastUpdatedDate: { isDate: !0 },
  };
  v.TypeInfo.TestSummaryForWorkItem.fields = {
    summary: { typeInfo: v.TypeInfo.AggregatedDataForResultTrend },
  };
  v.TypeInfo.UpdatedProperties.fields = { lastUpdated: { isDate: !0 } };
  v.TypeInfo.UpdateTestRunRequest.fields = {
    attachmentsToAdd: {
      isArray: !0,
      typeInfo: v.TypeInfo.TestResultAttachment,
    },
    testRun: { typeInfo: v.TypeInfo.LegacyTestRun },
  };
  v.TypeInfo.UpdateTestRunResponse.fields = {
    updatedProperties: { typeInfo: v.TypeInfo.UpdatedProperties },
  };
  v.TypeInfo.WorkItemToTestLinks.fields = {
    executedIn: { enumType: v.TypeInfo.Service },
  };
});
var Id = x((V) => {
  "use strict";
  Object.defineProperty(V, "__esModule", { value: !0 });
  var Om = Ra(),
    Ut = zi(),
    Um;
  (function (e) {
    (e[(e.Unavailable = 0)] = "Unavailable"),
      (e[(e.Available = 1)] = "Available"),
      (e[(e.Offline = 2)] = "Offline");
  })((Um = V.AgentStatus || (V.AgentStatus = {})));
  var km;
  (function (e) {
    (e[(e.Add = 1)] = "Add"),
      (e[(e.Update = 2)] = "Update"),
      (e[(e.Delete = 3)] = "Delete");
  })((km = V.AuditAction || (V.AuditAction = {})));
  var Em;
  (function (e) {
    (e[(e.ProjectCollection = 1)] = "ProjectCollection"),
      (e[(e.Project = 2)] = "Project");
  })((Em = V.BuildAuthorizationScope || (V.BuildAuthorizationScope = {})));
  var Sm;
  (function (e) {
    (e[(e.String = 0)] = "String"),
      (e[(e.Boolean = 1)] = "Boolean"),
      (e[(e.StringList = 2)] = "StringList"),
      (e[(e.Radio = 3)] = "Radio"),
      (e[(e.PickList = 4)] = "PickList"),
      (e[(e.MultiLine = 5)] = "MultiLine"),
      (e[(e.BranchFilter = 6)] = "BranchFilter");
  })((Sm = V.BuildOptionInputType || (V.BuildOptionInputType = {})));
  var Nm;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.Failed = 1)] = "Failed"),
      (e[(e.Succeeded = 2)] = "Succeeded");
  })((Nm = V.BuildPhaseStatus || (V.BuildPhaseStatus = {})));
  var Bm;
  (function (e) {
    (e[(e.FinishTimeAscending = 2)] = "FinishTimeAscending"),
      (e[(e.FinishTimeDescending = 3)] = "FinishTimeDescending"),
      (e[(e.QueueTimeDescending = 4)] = "QueueTimeDescending"),
      (e[(e.QueueTimeAscending = 5)] = "QueueTimeAscending"),
      (e[(e.StartTimeDescending = 6)] = "StartTimeDescending"),
      (e[(e.StartTimeAscending = 7)] = "StartTimeAscending");
  })((Bm = V.BuildQueryOrder || (V.BuildQueryOrder = {})));
  var Mm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manual = 1)] = "Manual"),
      (e[(e.IndividualCI = 2)] = "IndividualCI"),
      (e[(e.BatchedCI = 4)] = "BatchedCI"),
      (e[(e.Schedule = 8)] = "Schedule"),
      (e[(e.ScheduleForced = 16)] = "ScheduleForced"),
      (e[(e.UserCreated = 32)] = "UserCreated"),
      (e[(e.ValidateShelveset = 64)] = "ValidateShelveset"),
      (e[(e.CheckInShelveset = 128)] = "CheckInShelveset"),
      (e[(e.PullRequest = 256)] = "PullRequest"),
      (e[(e.BuildCompletion = 512)] = "BuildCompletion"),
      (e[(e.ResourceTrigger = 1024)] = "ResourceTrigger"),
      (e[(e.Triggered = 1967)] = "Triggered"),
      (e[(e.All = 2031)] = "All");
  })((Mm = V.BuildReason || (V.BuildReason = {})));
  var xm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Succeeded = 2)] = "Succeeded"),
      (e[(e.PartiallySucceeded = 4)] = "PartiallySucceeded"),
      (e[(e.Failed = 8)] = "Failed"),
      (e[(e.Canceled = 32)] = "Canceled");
  })((xm = V.BuildResult || (V.BuildResult = {})));
  var _m;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Completed = 2)] = "Completed"),
      (e[(e.Cancelling = 4)] = "Cancelling"),
      (e[(e.Postponed = 8)] = "Postponed"),
      (e[(e.NotStarted = 32)] = "NotStarted"),
      (e[(e.All = 47)] = "All");
  })((_m = V.BuildStatus || (V.BuildStatus = {})));
  var Gm;
  (function (e) {
    (e[(e.Unavailable = 0)] = "Unavailable"),
      (e[(e.Available = 1)] = "Available"),
      (e[(e.Offline = 2)] = "Offline");
  })((Gm = V.ControllerStatus || (V.ControllerStatus = {})));
  var Fm;
  (function (e) {
    (e[(e.Definition = 1)] = "Definition"), (e[(e.Draft = 2)] = "Draft");
  })((Fm = V.DefinitionQuality || (V.DefinitionQuality = {})));
  var Lm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.LastModifiedAscending = 1)] = "LastModifiedAscending"),
      (e[(e.LastModifiedDescending = 2)] = "LastModifiedDescending"),
      (e[(e.DefinitionNameAscending = 3)] = "DefinitionNameAscending"),
      (e[(e.DefinitionNameDescending = 4)] = "DefinitionNameDescending");
  })((Lm = V.DefinitionQueryOrder || (V.DefinitionQueryOrder = {})));
  var Wm;
  (function (e) {
    (e[(e.Enabled = 0)] = "Enabled"),
      (e[(e.Paused = 1)] = "Paused"),
      (e[(e.Disabled = 2)] = "Disabled");
  })((Wm = V.DefinitionQueueStatus || (V.DefinitionQueueStatus = {})));
  var $m;
  (function (e) {
    (e[(e.None = 1)] = "None"),
      (e[(e.ContinuousIntegration = 2)] = "ContinuousIntegration"),
      (e[(e.BatchedContinuousIntegration = 4)] =
        "BatchedContinuousIntegration"),
      (e[(e.Schedule = 8)] = "Schedule"),
      (e[(e.GatedCheckIn = 16)] = "GatedCheckIn"),
      (e[(e.BatchedGatedCheckIn = 32)] = "BatchedGatedCheckIn"),
      (e[(e.PullRequest = 64)] = "PullRequest"),
      (e[(e.BuildCompletion = 128)] = "BuildCompletion"),
      (e[(e.All = 255)] = "All");
  })(($m = V.DefinitionTriggerType || (V.DefinitionTriggerType = {})));
  var Hm;
  (function (e) {
    (e[(e.Xaml = 1)] = "Xaml"), (e[(e.Build = 2)] = "Build");
  })((Hm = V.DefinitionType || (V.DefinitionType = {})));
  var zm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.DropLocation = 1)] = "DropLocation"),
      (e[(e.TestResults = 2)] = "TestResults"),
      (e[(e.Label = 4)] = "Label"),
      (e[(e.Details = 8)] = "Details"),
      (e[(e.Symbols = 16)] = "Symbols"),
      (e[(e.All = 31)] = "All");
  })((zm = V.DeleteOptions || (V.DeleteOptions = {})));
  var Qm;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.FolderAscending = 1)] = "FolderAscending"),
      (e[(e.FolderDescending = 2)] = "FolderDescending");
  })((Qm = V.FolderQueryOrder || (V.FolderQueryOrder = {})));
  var Jm;
  (function (e) {
    (e[(e.LatestOnQueue = 0)] = "LatestOnQueue"),
      (e[(e.LatestOnBuild = 1)] = "LatestOnBuild"),
      (e[(e.Custom = 2)] = "Custom");
  })((Jm = V.GetOption || (V.GetOption = {})));
  var Km;
  (function (e) {
    (e[(e.Error = 1)] = "Error"), (e[(e.Warning = 2)] = "Warning");
  })((Km = V.IssueType || (V.IssueType = {})));
  var Xm;
  (function (e) {
    (e[(e.Custom = 0)] = "Custom"),
      (e[(e.Default = 1)] = "Default"),
      (e[(e.Upgrade = 2)] = "Upgrade");
  })((Xm = V.ProcessTemplateType || (V.ProcessTemplateType = {})));
  var Zm;
  (function (e) {
    (e[(e.ExcludeDeleted = 0)] = "ExcludeDeleted"),
      (e[(e.IncludeDeleted = 1)] = "IncludeDeleted"),
      (e[(e.OnlyDeleted = 2)] = "OnlyDeleted");
  })((Zm = V.QueryDeletedOption || (V.QueryDeletedOption = {})));
  var Ym;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.DoNotRun = 1)] = "DoNotRun");
  })((Ym = V.QueueOptions || (V.QueueOptions = {})));
  var e0;
  (function (e) {
    (e[(e.Low = 5)] = "Low"),
      (e[(e.BelowNormal = 4)] = "BelowNormal"),
      (e[(e.Normal = 3)] = "Normal"),
      (e[(e.AboveNormal = 2)] = "AboveNormal"),
      (e[(e.High = 1)] = "High");
  })((e0 = V.QueuePriority || (V.QueuePriority = {})));
  var t0;
  (function (e) {
    (e[(e.Source = 0)] = "Source"),
      (e[(e.SourceAndOutputDir = 1)] = "SourceAndOutputDir"),
      (e[(e.SourceDir = 2)] = "SourceDir"),
      (e[(e.AllBuildDir = 3)] = "AllBuildDir");
  })((t0 = V.RepositoryCleanOptions || (V.RepositoryCleanOptions = {})));
  var i0;
  (function (e) {
    (e[(e.All = 0)] = "All"), (e[(e.Top = 1)] = "Top");
  })((i0 = V.ResultSet || (V.ResultSet = {})));
  var r0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Monday = 1)] = "Monday"),
      (e[(e.Tuesday = 2)] = "Tuesday"),
      (e[(e.Wednesday = 4)] = "Wednesday"),
      (e[(e.Thursday = 8)] = "Thursday"),
      (e[(e.Friday = 16)] = "Friday"),
      (e[(e.Saturday = 32)] = "Saturday"),
      (e[(e.Sunday = 64)] = "Sunday"),
      (e[(e.All = 127)] = "All");
  })((r0 = V.ScheduleDays || (V.ScheduleDays = {})));
  var n0;
  (function (e) {
    (e[(e.Online = 1)] = "Online"), (e[(e.Offline = 2)] = "Offline");
  })((n0 = V.ServiceHostStatus || (V.ServiceHostStatus = {})));
  var s0;
  (function (e) {
    (e[(e.Hosted = 1)] = "Hosted"),
      (e[(e.OnPremises = 2)] = "OnPremises"),
      (e[(e.All = 3)] = "All");
  })(
    (s0 = V.SourceProviderAvailability || (V.SourceProviderAvailability = {}))
  );
  var o0;
  (function (e) {
    (e[(e.Cancel = 0)] = "Cancel"), (e[(e.Retry = 1)] = "Retry");
  })((o0 = V.StageUpdateType || (V.StageUpdateType = {})));
  var a0;
  (function (e) {
    (e[(e.Unsupported = 0)] = "Unsupported"),
      (e[(e.Supported = 1)] = "Supported"),
      (e[(e.Required = 2)] = "Required");
  })((a0 = V.SupportLevel || (V.SupportLevel = {})));
  var l0;
  (function (e) {
    (e[(e.Succeeded = 0)] = "Succeeded"),
      (e[(e.SucceededWithIssues = 1)] = "SucceededWithIssues"),
      (e[(e.Failed = 2)] = "Failed"),
      (e[(e.Canceled = 3)] = "Canceled"),
      (e[(e.Skipped = 4)] = "Skipped"),
      (e[(e.Abandoned = 5)] = "Abandoned");
  })((l0 = V.TaskResult || (V.TaskResult = {})));
  var u0;
  (function (e) {
    (e[(e.Pending = 0)] = "Pending"),
      (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Completed = 2)] = "Completed");
  })((u0 = V.TimelineRecordState || (V.TimelineRecordState = {})));
  var p0;
  (function (e) {
    (e[(e.OK = 0)] = "OK"),
      (e[(e.Warning = 1)] = "Warning"),
      (e[(e.Error = 2)] = "Error");
  })((p0 = V.ValidationResult || (V.ValidationResult = {})));
  var d0;
  (function (e) {
    (e[(e.Map = 0)] = "Map"), (e[(e.Cloak = 1)] = "Cloak");
  })((d0 = V.WorkspaceMappingType || (V.WorkspaceMappingType = {})));
  V.TypeInfo = {
    AgentStatus: { enumValues: { unavailable: 0, available: 1, offline: 2 } },
    AuditAction: { enumValues: { add: 1, update: 2, delete: 3 } },
    Build: {},
    BuildAgent: {},
    BuildAuthorizationScope: {
      enumValues: { projectCollection: 1, project: 2 },
    },
    BuildCompletedEvent: {},
    BuildCompletionTrigger: {},
    BuildController: {},
    BuildDefinition: {},
    BuildDefinition3_2: {},
    BuildDefinitionReference: {},
    BuildDefinitionReference3_2: {},
    BuildDefinitionRevision: {},
    BuildDefinitionSourceProvider: {},
    BuildDefinitionTemplate: {},
    BuildDefinitionTemplate3_2: {},
    BuildDeletedEvent: {},
    BuildDeployment: {},
    BuildLog: {},
    BuildMetric: {},
    BuildOptionDefinition: {},
    BuildOptionInputDefinition: {},
    BuildOptionInputType: {
      enumValues: {
        string: 0,
        boolean: 1,
        stringList: 2,
        radio: 3,
        pickList: 4,
        multiLine: 5,
        branchFilter: 6,
      },
    },
    BuildPhaseStatus: { enumValues: { unknown: 0, failed: 1, succeeded: 2 } },
    BuildProcessTemplate: {},
    BuildQueryOrder: {
      enumValues: {
        finishTimeAscending: 2,
        finishTimeDescending: 3,
        queueTimeDescending: 4,
        queueTimeAscending: 5,
        startTimeDescending: 6,
        startTimeAscending: 7,
      },
    },
    BuildQueuedEvent: {},
    BuildReason: {
      enumValues: {
        none: 0,
        manual: 1,
        individualCI: 2,
        batchedCI: 4,
        schedule: 8,
        scheduleForced: 16,
        userCreated: 32,
        validateShelveset: 64,
        checkInShelveset: 128,
        pullRequest: 256,
        buildCompletion: 512,
        resourceTrigger: 1024,
        triggered: 1967,
        all: 2031,
      },
    },
    BuildReference: {},
    BuildRequestValidationResult: {},
    BuildResult: {
      enumValues: {
        none: 0,
        succeeded: 2,
        partiallySucceeded: 4,
        failed: 8,
        canceled: 32,
      },
    },
    BuildRetentionHistory: {},
    BuildRetentionSample: {},
    BuildServer: {},
    BuildStatus: {
      enumValues: {
        none: 0,
        inProgress: 1,
        completed: 2,
        cancelling: 4,
        postponed: 8,
        notStarted: 32,
        all: 47,
      },
    },
    BuildSummary: {},
    BuildTagsAddedEvent: {},
    BuildTrigger: {},
    BuildUpdatedEvent: {},
    Change: {},
    ContinuousDeploymentDefinition: {},
    ContinuousIntegrationTrigger: {},
    ControllerStatus: {
      enumValues: { unavailable: 0, available: 1, offline: 2 },
    },
    DefinitionQuality: { enumValues: { definition: 1, draft: 2 } },
    DefinitionQueryOrder: {
      enumValues: {
        none: 0,
        lastModifiedAscending: 1,
        lastModifiedDescending: 2,
        definitionNameAscending: 3,
        definitionNameDescending: 4,
      },
    },
    DefinitionQueueStatus: {
      enumValues: { enabled: 0, paused: 1, disabled: 2 },
    },
    DefinitionReference: {},
    DefinitionTriggerType: {
      enumValues: {
        none: 1,
        continuousIntegration: 2,
        batchedContinuousIntegration: 4,
        schedule: 8,
        gatedCheckIn: 16,
        batchedGatedCheckIn: 32,
        pullRequest: 64,
        buildCompletion: 128,
        all: 255,
      },
    },
    DefinitionType: { enumValues: { xaml: 1, build: 2 } },
    DeleteOptions: {
      enumValues: {
        none: 0,
        dropLocation: 1,
        testResults: 2,
        label: 4,
        details: 8,
        symbols: 16,
        all: 31,
      },
    },
    DesignerProcess: {},
    Folder: {},
    FolderQueryOrder: {
      enumValues: { none: 0, folderAscending: 1, folderDescending: 2 },
    },
    GatedCheckInTrigger: {},
    GetOption: {
      enumValues: { latestOnQueue: 0, latestOnBuild: 1, custom: 2 },
    },
    InformationNode: {},
    Issue: {},
    IssueType: { enumValues: { error: 1, warning: 2 } },
    Phase: {},
    ProcessTemplateType: { enumValues: { custom: 0, default: 1, upgrade: 2 } },
    PullRequestTrigger: {},
    QueryDeletedOption: {
      enumValues: { excludeDeleted: 0, includeDeleted: 1, onlyDeleted: 2 },
    },
    QueueOptions: { enumValues: { none: 0, doNotRun: 1 } },
    QueuePriority: {
      enumValues: {
        low: 5,
        belowNormal: 4,
        normal: 3,
        aboveNormal: 2,
        high: 1,
      },
    },
    RepositoryCleanOptions: {
      enumValues: {
        source: 0,
        sourceAndOutputDir: 1,
        sourceDir: 2,
        allBuildDir: 3,
      },
    },
    RepositoryWebhook: {},
    ResultSet: { enumValues: { all: 0, top: 1 } },
    RetentionLease: {},
    Schedule: {},
    ScheduleDays: {
      enumValues: {
        none: 0,
        monday: 1,
        tuesday: 2,
        wednesday: 4,
        thursday: 8,
        friday: 16,
        saturday: 32,
        sunday: 64,
        all: 127,
      },
    },
    ScheduleTrigger: {},
    ServiceHostStatus: { enumValues: { online: 1, offline: 2 } },
    SourceProviderAttributes: {},
    SourceProviderAvailability: {
      enumValues: { hosted: 1, onPremises: 2, all: 3 },
    },
    StageUpdateType: { enumValues: { cancel: 0, retry: 1 } },
    SupportedTrigger: {},
    SupportLevel: { enumValues: { unsupported: 0, supported: 1, required: 2 } },
    TaskResult: {
      enumValues: {
        succeeded: 0,
        succeededWithIssues: 1,
        failed: 2,
        canceled: 3,
        skipped: 4,
        abandoned: 5,
      },
    },
    Timeline: {},
    TimelineRecord: {},
    TimelineRecordState: {
      enumValues: { pending: 0, inProgress: 1, completed: 2 },
    },
    TimelineRecordsUpdatedEvent: {},
    UpdateStageParameters: {},
    ValidationResult: { enumValues: { ok: 0, warning: 1, error: 2 } },
    WorkspaceMapping: {},
    WorkspaceMappingType: { enumValues: { map: 0, cloak: 1 } },
    WorkspaceTemplate: {},
    XamlBuildDefinition: {},
  };
  V.TypeInfo.Build.fields = {
    controller: { typeInfo: V.TypeInfo.BuildController },
    definition: { typeInfo: V.TypeInfo.DefinitionReference },
    deletedDate: { isDate: !0 },
    finishTime: { isDate: !0 },
    lastChangedDate: { isDate: !0 },
    priority: { enumType: V.TypeInfo.QueuePriority },
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
    queueOptions: { enumType: V.TypeInfo.QueueOptions },
    queueTime: { isDate: !0 },
    reason: { enumType: V.TypeInfo.BuildReason },
    result: { enumType: V.TypeInfo.BuildResult },
    startTime: { isDate: !0 },
    status: { enumType: V.TypeInfo.BuildStatus },
    triggeredByBuild: { typeInfo: V.TypeInfo.Build },
    validationResults: {
      isArray: !0,
      typeInfo: V.TypeInfo.BuildRequestValidationResult,
    },
  };
  V.TypeInfo.BuildAgent.fields = {
    createdDate: { isDate: !0 },
    status: { enumType: V.TypeInfo.AgentStatus },
    updatedDate: { isDate: !0 },
  };
  V.TypeInfo.BuildCompletedEvent.fields = {
    build: { typeInfo: V.TypeInfo.Build },
    changes: { isArray: !0, typeInfo: V.TypeInfo.Change },
    testResults: { typeInfo: Om.TypeInfo.AggregatedResultsAnalysis },
    timelineRecords: { isArray: !0, typeInfo: V.TypeInfo.TimelineRecord },
  };
  V.TypeInfo.BuildCompletionTrigger.fields = {
    definition: { typeInfo: V.TypeInfo.DefinitionReference },
    triggerType: { enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.BuildController.fields = {
    createdDate: { isDate: !0 },
    status: { enumType: V.TypeInfo.ControllerStatus },
    updatedDate: { isDate: !0 },
  };
  V.TypeInfo.BuildDefinition.fields = {
    createdDate: { isDate: !0 },
    draftOf: { typeInfo: V.TypeInfo.DefinitionReference },
    drafts: { isArray: !0, typeInfo: V.TypeInfo.DefinitionReference },
    jobAuthorizationScope: { enumType: V.TypeInfo.BuildAuthorizationScope },
    latestBuild: { typeInfo: V.TypeInfo.Build },
    latestCompletedBuild: { typeInfo: V.TypeInfo.Build },
    metrics: { isArray: !0, typeInfo: V.TypeInfo.BuildMetric },
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
    quality: { enumType: V.TypeInfo.DefinitionQuality },
    queueStatus: { enumType: V.TypeInfo.DefinitionQueueStatus },
    triggers: { isArray: !0, typeInfo: V.TypeInfo.BuildTrigger },
    type: { enumType: V.TypeInfo.DefinitionType },
  };
  V.TypeInfo.BuildDefinition3_2.fields = {
    createdDate: { isDate: !0 },
    draftOf: { typeInfo: V.TypeInfo.DefinitionReference },
    drafts: { isArray: !0, typeInfo: V.TypeInfo.DefinitionReference },
    jobAuthorizationScope: { enumType: V.TypeInfo.BuildAuthorizationScope },
    latestBuild: { typeInfo: V.TypeInfo.Build },
    latestCompletedBuild: { typeInfo: V.TypeInfo.Build },
    metrics: { isArray: !0, typeInfo: V.TypeInfo.BuildMetric },
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
    quality: { enumType: V.TypeInfo.DefinitionQuality },
    queueStatus: { enumType: V.TypeInfo.DefinitionQueueStatus },
    triggers: { isArray: !0, typeInfo: V.TypeInfo.BuildTrigger },
    type: { enumType: V.TypeInfo.DefinitionType },
  };
  V.TypeInfo.BuildDefinitionReference.fields = {
    createdDate: { isDate: !0 },
    draftOf: { typeInfo: V.TypeInfo.DefinitionReference },
    drafts: { isArray: !0, typeInfo: V.TypeInfo.DefinitionReference },
    latestBuild: { typeInfo: V.TypeInfo.Build },
    latestCompletedBuild: { typeInfo: V.TypeInfo.Build },
    metrics: { isArray: !0, typeInfo: V.TypeInfo.BuildMetric },
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
    quality: { enumType: V.TypeInfo.DefinitionQuality },
    queueStatus: { enumType: V.TypeInfo.DefinitionQueueStatus },
    type: { enumType: V.TypeInfo.DefinitionType },
  };
  V.TypeInfo.BuildDefinitionReference3_2.fields = {
    createdDate: { isDate: !0 },
    draftOf: { typeInfo: V.TypeInfo.DefinitionReference },
    drafts: { isArray: !0, typeInfo: V.TypeInfo.DefinitionReference },
    metrics: { isArray: !0, typeInfo: V.TypeInfo.BuildMetric },
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
    quality: { enumType: V.TypeInfo.DefinitionQuality },
    queueStatus: { enumType: V.TypeInfo.DefinitionQueueStatus },
    type: { enumType: V.TypeInfo.DefinitionType },
  };
  V.TypeInfo.BuildDefinitionRevision.fields = {
    changedDate: { isDate: !0 },
    changeType: { enumType: V.TypeInfo.AuditAction },
  };
  V.TypeInfo.BuildDefinitionSourceProvider.fields = {
    lastModified: { isDate: !0 },
    supportedTriggerTypes: { enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.BuildDefinitionTemplate.fields = {
    template: { typeInfo: V.TypeInfo.BuildDefinition },
  };
  V.TypeInfo.BuildDefinitionTemplate3_2.fields = {
    template: { typeInfo: V.TypeInfo.BuildDefinition3_2 },
  };
  V.TypeInfo.BuildDeletedEvent.fields = {
    build: { typeInfo: V.TypeInfo.Build },
  };
  V.TypeInfo.BuildDeployment.fields = {
    deployment: { typeInfo: V.TypeInfo.BuildSummary },
  };
  V.TypeInfo.BuildLog.fields = {
    createdOn: { isDate: !0 },
    lastChangedOn: { isDate: !0 },
  };
  V.TypeInfo.BuildMetric.fields = { date: { isDate: !0 } };
  V.TypeInfo.BuildOptionDefinition.fields = {
    inputs: { isArray: !0, typeInfo: V.TypeInfo.BuildOptionInputDefinition },
  };
  V.TypeInfo.BuildOptionInputDefinition.fields = {
    type: { enumType: V.TypeInfo.BuildOptionInputType },
  };
  V.TypeInfo.BuildProcessTemplate.fields = {
    supportedReasons: { enumType: V.TypeInfo.BuildReason },
    templateType: { enumType: V.TypeInfo.ProcessTemplateType },
  };
  V.TypeInfo.BuildQueuedEvent.fields = {
    build: { typeInfo: V.TypeInfo.Build },
  };
  V.TypeInfo.BuildReference.fields = {
    finishTime: { isDate: !0 },
    queueTime: { isDate: !0 },
    result: { enumType: V.TypeInfo.BuildResult },
    startTime: { isDate: !0 },
    status: { enumType: V.TypeInfo.BuildStatus },
  };
  V.TypeInfo.BuildRequestValidationResult.fields = {
    result: { enumType: V.TypeInfo.ValidationResult },
  };
  V.TypeInfo.BuildRetentionHistory.fields = {
    buildRetentionSamples: {
      isArray: !0,
      typeInfo: V.TypeInfo.BuildRetentionSample,
    },
  };
  V.TypeInfo.BuildRetentionSample.fields = { sampleTime: { isDate: !0 } };
  V.TypeInfo.BuildServer.fields = {
    status: { enumType: V.TypeInfo.ServiceHostStatus },
    statusChangedDate: { isDate: !0 },
  };
  V.TypeInfo.BuildSummary.fields = {
    finishTime: { isDate: !0 },
    reason: { enumType: V.TypeInfo.BuildReason },
    startTime: { isDate: !0 },
    status: { enumType: V.TypeInfo.BuildStatus },
  };
  V.TypeInfo.BuildTagsAddedEvent.fields = {
    build: { typeInfo: V.TypeInfo.Build },
  };
  V.TypeInfo.BuildTrigger.fields = {
    triggerType: { enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.BuildUpdatedEvent.fields = {
    build: { typeInfo: V.TypeInfo.Build },
  };
  V.TypeInfo.Change.fields = { timestamp: { isDate: !0 } };
  V.TypeInfo.ContinuousDeploymentDefinition.fields = {
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
  };
  V.TypeInfo.ContinuousIntegrationTrigger.fields = {
    triggerType: { enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.DefinitionReference.fields = {
    createdDate: { isDate: !0 },
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
    queueStatus: { enumType: V.TypeInfo.DefinitionQueueStatus },
    type: { enumType: V.TypeInfo.DefinitionType },
  };
  V.TypeInfo.DesignerProcess.fields = {
    phases: { isArray: !0, typeInfo: V.TypeInfo.Phase },
  };
  V.TypeInfo.Folder.fields = {
    createdOn: { isDate: !0 },
    lastChangedDate: { isDate: !0 },
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
  };
  V.TypeInfo.GatedCheckInTrigger.fields = {
    triggerType: { enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.InformationNode.fields = { lastModifiedDate: { isDate: !0 } };
  V.TypeInfo.Issue.fields = { type: { enumType: V.TypeInfo.IssueType } };
  V.TypeInfo.Phase.fields = {
    jobAuthorizationScope: { enumType: V.TypeInfo.BuildAuthorizationScope },
  };
  V.TypeInfo.PullRequestTrigger.fields = {
    triggerType: { enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.RepositoryWebhook.fields = {
    types: { isArray: !0, enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.RetentionLease.fields = {
    createdOn: { isDate: !0 },
    validUntil: { isDate: !0 },
  };
  V.TypeInfo.Schedule.fields = {
    daysToBuild: { enumType: V.TypeInfo.ScheduleDays },
  };
  V.TypeInfo.ScheduleTrigger.fields = {
    schedules: { isArray: !0, typeInfo: V.TypeInfo.Schedule },
    triggerType: { enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.SourceProviderAttributes.fields = {
    supportedTriggers: { isArray: !0, typeInfo: V.TypeInfo.SupportedTrigger },
  };
  V.TypeInfo.SupportedTrigger.fields = {
    supportedCapabilities: {
      isDictionary: !0,
      dictionaryValueEnumType: V.TypeInfo.SupportLevel,
    },
    type: { enumType: V.TypeInfo.DefinitionTriggerType },
  };
  V.TypeInfo.Timeline.fields = {
    lastChangedOn: { isDate: !0 },
    records: { isArray: !0, typeInfo: V.TypeInfo.TimelineRecord },
  };
  V.TypeInfo.TimelineRecord.fields = {
    finishTime: { isDate: !0 },
    issues: { isArray: !0, typeInfo: V.TypeInfo.Issue },
    lastModified: { isDate: !0 },
    result: { enumType: V.TypeInfo.TaskResult },
    startTime: { isDate: !0 },
    state: { enumType: V.TypeInfo.TimelineRecordState },
  };
  V.TypeInfo.TimelineRecordsUpdatedEvent.fields = {
    timelineRecords: { isArray: !0, typeInfo: V.TypeInfo.TimelineRecord },
  };
  V.TypeInfo.UpdateStageParameters.fields = {
    state: { enumType: V.TypeInfo.StageUpdateType },
  };
  V.TypeInfo.WorkspaceMapping.fields = {
    mappingType: { enumType: V.TypeInfo.WorkspaceMappingType },
  };
  V.TypeInfo.WorkspaceTemplate.fields = {
    lastModifiedDate: { isDate: !0 },
    mappings: { isArray: !0, typeInfo: V.TypeInfo.WorkspaceMapping },
  };
  V.TypeInfo.XamlBuildDefinition.fields = {
    controller: { typeInfo: V.TypeInfo.BuildController },
    createdDate: { isDate: !0 },
    createdOn: { isDate: !0 },
    project: { typeInfo: Ut.TypeInfo.TeamProjectReference },
    queueStatus: { enumType: V.TypeInfo.DefinitionQueueStatus },
    supportedReasons: { enumType: V.TypeInfo.BuildReason },
    triggerType: { enumType: V.TypeInfo.DefinitionTriggerType },
    type: { enumType: V.TypeInfo.DefinitionType },
  };
});
var Td = x((kr) => {
  "use strict";
  var b =
    (kr && kr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(kr, "__esModule", { value: !0 });
  var c0 = qe(),
    ne = Id(),
    ls = class extends c0.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Build-api", a);
      }
      createArtifact(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i, buildId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.5",
                    "build",
                    "1db06c96-014e-44e1-ac91-90b2d4b3e984",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getArtifact(t, i, a) {
        return b(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("artifactName can not be null or undefined");
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i },
                s = { artifactName: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.5",
                    "build",
                    "1db06c96-014e-44e1-ac91-90b2d4b3e984",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getArtifactContentZip(t, i, a) {
        return b(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("artifactName can not be null or undefined");
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i },
                s = { artifactName: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.5",
                    "build",
                    "1db06c96-014e-44e1-ac91-90b2d4b3e984",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("application/zip", p);
                u((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getArtifacts(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, buildId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.5",
                    "build",
                    "1db06c96-014e-44e1-ac91-90b2d4b3e984",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getFile(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("artifactName can not be null or undefined");
          if (u == null)
            throw new TypeError("fileId can not be null or undefined");
          if (l == null)
            throw new TypeError("fileName can not be null or undefined");
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: t, buildId: i },
                o = { artifactName: a, fileId: u, fileName: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.5",
                    "build",
                    "1db06c96-014e-44e1-ac91-90b2d4b3e984",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("application/octet-stream", c);
                r((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getAttachments(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i, type: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "f2192269-89fa-4f94-baf6-8fb128c55159",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getAttachment(t, i, a, u, l, r) {
        return b(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            b(this, void 0, void 0, function* () {
              let o = {
                project: t,
                buildId: i,
                timelineId: a,
                recordId: u,
                type: l,
                name: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "af5122d3-3438-485e-a25a-2dbbfde84ee6",
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("application/octet-stream", c);
                s((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      authorizeProjectResources(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "398c85bc-81aa-4822-947c-a194a05f0fef",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getProjectResources(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { type: i, id: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "398c85bc-81aa-4822-947c-a194a05f0fef",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getBadge(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i },
                s = { branchName: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "de6a4df8-22cd-44ee-af2d-39f6aa7a4261",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      listBranches(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: t, providerName: i },
                o = { serviceEndpointId: a, repository: u, branchName: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "e05d4403-9b81-4244-8763-20fde28d1976",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getBuildBadge(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: t, repoType: i },
                n = { repoId: a, branchName: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "21b3b9ce-fad5-4567-9ad0-80679794e003",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getBuildBadgeData(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: t, repoType: i },
                n = { repoId: a, branchName: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "21b3b9ce-fad5-4567-9ad0-80679794e003",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getRetentionLeasesForBuild(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, buildId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "3da19a6a-f088-45c4-83ce-2ad3a87be6c4",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ne.TypeInfo.RetentionLease,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteBuild(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, buildId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "0cd358e1-9217-4d94-8269-1c1ee6f93dcf",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getBuild(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i },
                s = { propertyFilters: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "0cd358e1-9217-4d94-8269-1c1ee6f93dcf",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, ne.TypeInfo.Build, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getBuilds(t, i, a, u, l, r, s, n, o, p, d, c, f, h, T, q, j, F, U, z, W) {
        return b(this, void 0, void 0, function* () {
          return new Promise((fe, Ie) =>
            b(this, void 0, void 0, function* () {
              let Te = { project: t },
                Re = {
                  definitions: i && i.join(","),
                  queues: a && a.join(","),
                  buildNumber: u,
                  minTime: l,
                  maxTime: r,
                  requestedFor: s,
                  reasonFilter: n,
                  statusFilter: o,
                  resultFilter: p,
                  tagFilters: d && d.join(","),
                  properties: c && c.join(","),
                  $top: f,
                  continuationToken: h,
                  maxBuildsPerDefinition: T,
                  deletedFilter: q,
                  queryOrder: j,
                  branchName: F,
                  buildIds: U && U.join(","),
                  repositoryId: z,
                  repositoryType: W,
                };
              try {
                let Ge = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "0cd358e1-9217-4d94-8269-1c1ee6f93dcf",
                    Te,
                    Re
                  ),
                  ft = Ge.requestUrl,
                  Ye = this.createRequestOptions(
                    "application/json",
                    Ge.apiVersion
                  ),
                  rt;
                rt = yield this.rest.get(ft, Ye);
                let mt = this.formatResponse(rt.result, ne.TypeInfo.Build, !0);
                fe(mt);
              } catch (Ge) {
                Ie(Ge);
              }
            })
          );
        });
      }
      queueBuild(t, i, a, u, l, r) {
        return b(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            b(this, void 0, void 0, function* () {
              let o = { project: i },
                p = {
                  ignoreWarnings: a,
                  checkInTicket: u,
                  sourceBuildId: l,
                  definitionId: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "0cd358e1-9217-4d94-8269-1c1ee6f93dcf",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.create(c, t, f);
                let T = this.formatResponse(h.result, ne.TypeInfo.Build, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      updateBuild(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: i, buildId: a },
                n = { retry: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "0cd358e1-9217-4d94-8269-1c1ee6f93dcf",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, ne.TypeInfo.Build, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      updateBuilds(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "0cd358e1-9217-4d94-8269-1c1ee6f93dcf",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, ne.TypeInfo.Build, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getBuildChanges(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: t, buildId: i },
                o = { continuationToken: a, $top: u, includeSourceChange: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "54572c7b-bbd3-45d4-80dc-28be08941620",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, ne.TypeInfo.Change, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getChangesBetweenBuilds(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { fromBuildId: i, toBuildId: a, $top: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "f10f0ea5-18a1-43ec-a8fb-2042c7be9b43",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, ne.TypeInfo.Change, !0);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getBuildController(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = { controllerId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "fcac1932-2ee1-437f-9b6f-7f696be858f6",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  ne.TypeInfo.BuildController,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getBuildControllers(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = {},
                l = { name: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "fcac1932-2ee1-437f-9b6f-7f696be858f6",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ne.TypeInfo.BuildController,
                  !0
                );
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      createDefinition(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: i },
                n = { definitionToCloneId: a, definitionToCloneRevision: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "dbeaf647-6167-421a-bda9-c9327b25e2e6",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  ne.TypeInfo.BuildDefinition,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      deleteDefinition(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, definitionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "dbeaf647-6167-421a-bda9-c9327b25e2e6",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getDefinition(t, i, a, u, l, r) {
        return b(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            b(this, void 0, void 0, function* () {
              let o = { project: t, definitionId: i },
                p = {
                  revision: a,
                  minMetricsTime: u,
                  propertyFilters: l && l.join(","),
                  includeLatestBuilds: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "dbeaf647-6167-421a-bda9-c9327b25e2e6",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  ne.TypeInfo.BuildDefinition,
                  !1
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getDefinitions(t, i, a, u, l, r, s, n, o, p, d, c, f, h, T, q, j) {
        return b(this, void 0, void 0, function* () {
          return new Promise((F, U) =>
            b(this, void 0, void 0, function* () {
              let z = { project: t },
                W = {
                  name: i,
                  repositoryId: a,
                  repositoryType: u,
                  queryOrder: l,
                  $top: r,
                  continuationToken: s,
                  minMetricsTime: n,
                  definitionIds: o && o.join(","),
                  path: p,
                  builtAfter: d,
                  notBuiltAfter: c,
                  includeAllProperties: f,
                  includeLatestBuilds: h,
                  taskIdFilter: T,
                  processType: q,
                  yamlFilename: j,
                };
              try {
                let fe = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "dbeaf647-6167-421a-bda9-c9327b25e2e6",
                    z,
                    W
                  ),
                  Ie = fe.requestUrl,
                  Te = this.createRequestOptions(
                    "application/json",
                    fe.apiVersion
                  ),
                  Re;
                Re = yield this.rest.get(Ie, Te);
                let Ge = this.formatResponse(
                  Re.result,
                  ne.TypeInfo.BuildDefinitionReference,
                  !0
                );
                F(Ge);
              } catch (fe) {
                U(fe);
              }
            })
          );
        });
      }
      restoreDefinition(t, i, a) {
        return b(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("deleted can not be null or undefined");
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i },
                s = { deleted: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "dbeaf647-6167-421a-bda9-c9327b25e2e6",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, null, p);
                let c = this.formatResponse(
                  d.result,
                  ne.TypeInfo.BuildDefinition,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateDefinition(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: i, definitionId: a },
                o = {
                  secretsSourceDefinitionId: u,
                  secretsSourceDefinitionRevision: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "build",
                    "dbeaf647-6167-421a-bda9-c9327b25e2e6",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.replace(d, t, c);
                let h = this.formatResponse(
                  f.result,
                  ne.TypeInfo.BuildDefinition,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getFileContents(t, i, a, u, l, r) {
        return b(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            b(this, void 0, void 0, function* () {
              let o = { project: t, providerName: i },
                p = {
                  serviceEndpointId: a,
                  repository: u,
                  commitOrBranch: l,
                  path: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "29d12225-b1d9-425f-b668-6c594a981313",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = d.apiVersion,
                  h = this.createAcceptHeader("text/plain", f);
                s((yield this.http.get(c, { Accept: h })).message);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      createFolder(t, i, a) {
        return b(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { path: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "a906531b-d2da-4f55-bda7-f3e676cc50d9",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(d.result, ne.TypeInfo.Folder, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      deleteFolder(t, i) {
        return b(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { path: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "a906531b-d2da-4f55-bda7-f3e676cc50d9",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getFolders(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, path: i },
                s = { queryOrder: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "a906531b-d2da-4f55-bda7-f3e676cc50d9",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, ne.TypeInfo.Folder, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateFolder(t, i, a) {
        return b(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { path: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "a906531b-d2da-4f55-bda7-f3e676cc50d9",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, ne.TypeInfo.Folder, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getBuildGeneralSettings(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "c4aefd19-30ff-405b-80ad-aca021e7242a",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateBuildGeneralSettings(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "c4aefd19-30ff-405b-80ad-aca021e7242a",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getRetentionHistory(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = {},
                l = { daysToLookback: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "1a9c48be-0ef5-4ec2-b94f-f053bdd2d3bf",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ne.TypeInfo.BuildRetentionHistory,
                  !1
                );
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getLatestBuild(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, definition: i },
                s = { branchName: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "54481611-01f4-47f3-998f-160da0f0c229",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, ne.TypeInfo.Build, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      addRetentionLeases(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "272051e4-9af1-45b5-ae22-8d960a5539d4",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  ne.TypeInfo.RetentionLease,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteRetentionLeasesById(t, i) {
        return b(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("ids can not be null or undefined");
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { ids: i && i.join(",") };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "272051e4-9af1-45b5-ae22-8d960a5539d4",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getRetentionLease(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, leaseId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "272051e4-9af1-45b5-ae22-8d960a5539d4",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ne.TypeInfo.RetentionLease,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getRetentionLeasesByMinimalRetentionLeases(t, i) {
        return b(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("leasesToFetch can not be null or undefined");
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { leasesToFetch: i && i.join("|") };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "272051e4-9af1-45b5-ae22-8d960a5539d4",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ne.TypeInfo.RetentionLease,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getRetentionLeasesByOwnerId(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { ownerId: i, definitionId: a, runId: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "272051e4-9af1-45b5-ae22-8d960a5539d4",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  ne.TypeInfo.RetentionLease,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getRetentionLeasesByUserId(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("userOwnerId can not be null or undefined");
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { userOwnerId: i, definitionId: a, runId: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "272051e4-9af1-45b5-ae22-8d960a5539d4",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  ne.TypeInfo.RetentionLease,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      updateRetentionLease(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i, leaseId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "272051e4-9af1-45b5-ae22-8d960a5539d4",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ne.TypeInfo.RetentionLease,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBuildLog(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: t, buildId: i, logId: a },
                o = { startLine: u, endLine: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "35a80daf-7f30-45fc-86e8-6b813d9c90df",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("text/plain", c);
                r((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getBuildLogLines(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: t, buildId: i, logId: a },
                o = { startLine: u, endLine: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "35a80daf-7f30-45fc-86e8-6b813d9c90df",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getBuildLogs(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, buildId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "35a80daf-7f30-45fc-86e8-6b813d9c90df",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, ne.TypeInfo.BuildLog, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getBuildLogsZip(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, buildId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "35a80daf-7f30-45fc-86e8-6b813d9c90df",
                    l
                  ),
                  s = r.requestUrl,
                  n = r.apiVersion,
                  o = this.createAcceptHeader("application/zip", n);
                a((yield this.http.get(s, { Accept: o })).message);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getBuildLogZip(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: t, buildId: i, logId: a },
                o = { startLine: u, endLine: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "35a80daf-7f30-45fc-86e8-6b813d9c90df",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("application/zip", c);
                r((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getProjectMetrics(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, metricAggregationType: i },
                s = { minMetricsTime: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "7433fae7-a6bc-41dc-a6e2-eef9005ce41a",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  ne.TypeInfo.BuildMetric,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getDefinitionMetrics(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i },
                s = { minMetricsTime: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "d973b939-0ce0-4fec-91d8-da3940fa1827",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  ne.TypeInfo.BuildMetric,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getBuildOptionDefinitions(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "591cb5a4-2d46-4f3a-a697-5cd42b6bd332",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  ne.TypeInfo.BuildOptionDefinition,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getPathContents(t, i, a, u, l, r) {
        return b(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            b(this, void 0, void 0, function* () {
              let o = { project: t, providerName: i },
                p = {
                  serviceEndpointId: a,
                  repository: u,
                  commitOrBranch: l,
                  path: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "7944d6fb-df01-4709-920a-7a189aa34037",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !0);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getBuildProperties(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i },
                s = { filter: a && a.join(",") };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "0a6312e9-0627-49b7-8083-7d74a64849c9",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateBuildProperties(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: a, buildId: u };
              (t = t || {}),
                (t["Content-Type"] = "application/json-patch+json");
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "0a6312e9-0627-49b7-8083-7d74a64849c9",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  );
                p.additionalHeaders = t;
                let d;
                d = yield this.rest.update(o, i, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getDefinitionProperties(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i },
                s = { filter: a && a.join(",") };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "d9826ad7-2a68-46a9-a6e9-677698777895",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateDefinitionProperties(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: a, definitionId: u };
              (t = t || {}),
                (t["Content-Type"] = "application/json-patch+json");
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "d9826ad7-2a68-46a9-a6e9-677698777895",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  );
                p.additionalHeaders = t;
                let d;
                d = yield this.rest.update(o, i, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequest(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: t, providerName: i, pullRequestId: a },
                o = { repositoryId: u, serviceEndpointId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "d8763ec7-9ff0-4fb4-b2b2-9d757906ff14",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getBuildReport(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i },
                s = { type: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "45bcaa88-67e1-4042-a035-56d3b4a7d44c",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getBuildReportHtmlContent(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i },
                s = { type: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "45bcaa88-67e1-4042-a035-56d3b4a7d44c",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("text/html", p);
                u((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      listRepositories(t, i, a, u, l, r, s) {
        return b(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            b(this, void 0, void 0, function* () {
              let p = { project: t, providerName: i },
                d = {
                  serviceEndpointId: a,
                  repository: u,
                  resultSet: l,
                  pageResults: r,
                  continuationToken: s,
                };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "d44d1680-f978-4834-9b93-8c6e132329c9",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(T.result, null, !1);
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      authorizeDefinitionResources(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i, definitionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "ea623316-1967-45eb-89ab-e9e6110cf2d6",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getDefinitionResources(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, definitionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "ea623316-1967-45eb-89ab-e9e6110cf2d6",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getResourceUsage() {
        return b(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            b(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "3813d06c-9e36-4ea1-aac3-61a485d60e3d",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !1);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getRetentionSettings(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "dadb46e7-5851-4c72-820e-ae8abb82f59f",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateRetentionSettings(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "dadb46e7-5851-4c72-820e-ae8abb82f59f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getDefinitionRevisions(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, definitionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "7c116775-52e5-453e-8c5d-914d9762d8c4",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ne.TypeInfo.BuildDefinitionRevision,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getBuildSettings(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "aa8c1c9c-ef8b-474a-b8c4-785c7b191d0d",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateBuildSettings(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "aa8c1c9c-ef8b-474a-b8c4-785c7b191d0d",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      listSourceProviders(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "3ce81729-954f-423d-a581-9fea01d25186",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  ne.TypeInfo.SourceProviderAttributes,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateStage(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: u, buildId: i, stageRefName: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "b8aac6c9-744b-46e1-88fc-3550969f9313",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getStatusBadge(t, i, a, u, l, r, s) {
        return b(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            b(this, void 0, void 0, function* () {
              let p = { project: t, definition: i },
                d = {
                  branchName: a,
                  stageName: u,
                  jobName: l,
                  configuration: r,
                  label: s,
                };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "07acfdce-4757-4439-b422-ddd13a2fcc10",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(T.result, null, !1);
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      addBuildTag(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i, tag: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "6e6114b2-8161-44c8-8f6c-c5505782427f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, null, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addBuildTags(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i, buildId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "6e6114b2-8161-44c8-8f6c-c5505782427f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteBuildTag(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i, tag: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "6e6114b2-8161-44c8-8f6c-c5505782427f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBuildTags(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, buildId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "6e6114b2-8161-44c8-8f6c-c5505782427f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateBuildTags(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i, buildId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "6e6114b2-8161-44c8-8f6c-c5505782427f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addDefinitionTag(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i, tag: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "cb894432-134a-4d31-a839-83beceaace4b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, null, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addDefinitionTags(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i, definitionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "cb894432-134a-4d31-a839-83beceaace4b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteDefinitionTag(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i, tag: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "cb894432-134a-4d31-a839-83beceaace4b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getDefinitionTags(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i },
                s = { revision: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "cb894432-134a-4d31-a839-83beceaace4b",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateDefinitionTags(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i, definitionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "cb894432-134a-4d31-a839-83beceaace4b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteTag(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, tag: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "d84ac5c6-edc7-43d5-adc9-1b34be5dea09",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTags(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "d84ac5c6-edc7-43d5-adc9-1b34be5dea09",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteTemplate(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, templateId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "e884571e-7f92-4d6a-9274-3f5649900835",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTemplate(t, i) {
        return b(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            b(this, void 0, void 0, function* () {
              let l = { project: t, templateId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "e884571e-7f92-4d6a-9274-3f5649900835",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ne.TypeInfo.BuildDefinitionTemplate,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTemplates(t) {
        return b(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            b(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "e884571e-7f92-4d6a-9274-3f5649900835",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  ne.TypeInfo.BuildDefinitionTemplate,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      saveTemplate(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: i, templateId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "build",
                    "e884571e-7f92-4d6a-9274-3f5649900835",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ne.TypeInfo.BuildDefinitionTemplate,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBuildTimeline(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: t, buildId: i, timelineId: a },
                o = { changeId: u, planId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "8baac422-4c6e-4de5-8532-db96d92acffa",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, ne.TypeInfo.Timeline, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      restoreWebhooks(t, i, a, u, l) {
        return b(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            b(this, void 0, void 0, function* () {
              let n = { project: i, providerName: a },
                o = { serviceEndpointId: u, repository: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "793bceb8-9736-4030-bd2f-fb3ce6d6b478",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      listWebhooks(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: t, providerName: i },
                n = { serviceEndpointId: a, repository: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "8f20ff82-9498-4812-9f6e-9c01bdc50e99",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  ne.TypeInfo.RepositoryWebhook,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getBuildWorkItemsRefs(t, i, a) {
        return b(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            b(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i },
                s = { $top: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "5a21f5d2-5642-47e4-a0bd-1356e6731bee",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getBuildWorkItemsRefsFromCommits(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: i, buildId: a },
                n = { $top: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "5a21f5d2-5642-47e4-a0bd-1356e6731bee",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(c.result, null, !0);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getWorkItemsBetweenBuilds(t, i, a, u) {
        return b(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("fromBuildId can not be null or undefined");
          if (a == null)
            throw new TypeError("toBuildId can not be null or undefined");
          return new Promise((l, r) =>
            b(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { fromBuildId: i, toBuildId: a, $top: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "build",
                    "52ba8915-5518-42e3-a4bb-b0182d159e2d",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !0);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getDefinitionYaml(t, i, a, u, l, r) {
        return b(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            b(this, void 0, void 0, function* () {
              let o = { project: t, definitionId: i },
                p = {
                  revision: a,
                  minMetricsTime: u,
                  propertyFilters: l && l.join(","),
                  includeLatestBuilds: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "build",
                    "7c3df3a1-7e51-4150-8cf7-540347f8697f",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
    };
  ls.RESOURCE_AREA_ID = "965220d5-5bb9-42cf-8d67-9b146df2a5a4";
  kr.BuildApi = ls;
});
var Rd = x((vi) => {
  "use strict";
  Object.defineProperty(vi, "__esModule", { value: !0 });
  var f0;
  (function (e) {
    (e[(e.NotSet = 0)] = "NotSet"),
      (e[(e.Queued = 1)] = "Queued"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Cancelled = 3)] = "Cancelled"),
      (e[(e.Succeeded = 4)] = "Succeeded"),
      (e[(e.Failed = 5)] = "Failed");
  })((f0 = vi.OperationStatus || (vi.OperationStatus = {})));
  vi.TypeInfo = {
    OperationReference: { fields: null },
    OperationStatus: {
      enumValues: {
        notSet: 0,
        queued: 1,
        inProgress: 2,
        cancelled: 3,
        succeeded: 4,
        failed: 5,
      },
    },
  };
  vi.TypeInfo.OperationReference.fields = {
    status: { enumType: vi.TypeInfo.OperationStatus },
  };
});
var Vd = x((Er) => {
  "use strict";
  var H =
    (Er && Er.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Er, "__esModule", { value: !0 });
  var h0 = qe(),
    kt = zi(),
    Va = Rd(),
    us = class extends h0.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Core-api", a);
      }
      removeProjectAvatar(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = { projectId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "54b2a2a0-859b-4d05-827c-ec4c862f641a",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      setProjectAvatar(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { projectId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "54b2a2a0-859b-4d05-827c-ec4c862f641a",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      createConnectedService(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { projectId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "b4f70219-e18b-42c5-abe3-98b07d35525e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  kt.TypeInfo.WebApiConnectedService,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getConnectedServiceDetails(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { projectId: t, name: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "b4f70219-e18b-42c5-abe3-98b07d35525e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  kt.TypeInfo.WebApiConnectedServiceDetails,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getConnectedServices(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { projectId: t },
                r = { kind: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "b4f70219-e18b-42c5-abe3-98b07d35525e",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  kt.TypeInfo.WebApiConnectedService,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      createIdentityMru(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { mruName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "5ead0b70-2572-4697-97e9-f341069a783a",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteIdentityMru(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { mruName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "5ead0b70-2572-4697-97e9-f341069a783a",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getIdentityMru(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = { mruName: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "5ead0b70-2572-4697-97e9-f341069a783a",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateIdentityMru(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { mruName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "5ead0b70-2572-4697-97e9-f341069a783a",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTeamMembersWithExtendedProperties(t, i, a, u) {
        return H(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            H(this, void 0, void 0, function* () {
              let s = { projectId: t, teamId: i },
                n = { $top: a, $skip: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "core",
                    "294c494c-2600-4d7e-b76c-3dd50c3c95be",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !0);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getProcessById(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = { processId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "93878975-88c5-4e6a-8abb-7ddd77a8a7d8",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, kt.TypeInfo.Process, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getProcesses() {
        return H(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            H(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "93878975-88c5-4e6a-8abb-7ddd77a8a7d8",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, kt.TypeInfo.Process, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getProjectCollection(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = { collectionId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "core",
                    "8031090f-ef1d-4af6-85fc-698cd75d42bf",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  kt.TypeInfo.TeamProjectCollection,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getProjectCollections(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = {},
                r = { $top: t, $skip: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "core",
                    "8031090f-ef1d-4af6-85fc-698cd75d42bf",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getProjectHistoryEntries(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = {},
                l = { minRevision: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "core",
                    "6488a877-4749-4954-82ea-7340d36be9f2",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  kt.TypeInfo.ProjectInfo,
                  !0
                );
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getProject(t, i, a) {
        return H(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            H(this, void 0, void 0, function* () {
              let r = { projectId: t },
                s = { includeCapabilities: i, includeHistory: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "core",
                    "603fe2ac-9723-48b9-88ad-09305aa6c6e1",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  kt.TypeInfo.TeamProject,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getProjects(t, i, a, u, l) {
        return H(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            H(this, void 0, void 0, function* () {
              let n = {},
                o = {
                  stateFilter: t,
                  $top: i,
                  $skip: a,
                  continuationToken: u,
                  getDefaultTeamImageUrl: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "core",
                    "603fe2ac-9723-48b9-88ad-09305aa6c6e1",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  kt.TypeInfo.TeamProjectReference,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      queueCreateProject(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "core",
                    "603fe2ac-9723-48b9-88ad-09305aa6c6e1",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  Va.TypeInfo.OperationReference,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      queueDeleteProject(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = { projectId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "core",
                    "603fe2ac-9723-48b9-88ad-09305aa6c6e1",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(
                  n.result,
                  Va.TypeInfo.OperationReference,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateProject(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { projectId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "core",
                    "603fe2ac-9723-48b9-88ad-09305aa6c6e1",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Va.TypeInfo.OperationReference,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getProjectsProperties(t, i) {
        return H(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("projectIds can not be null or undefined");
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = {},
                r = {
                  projectIds: t && t.join(","),
                  properties: i && i.join(","),
                };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "0a3ffdfc-fe94-47a6-bb27-79bf3f762eac",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getProjectProperties(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { projectId: t },
                r = { keys: i && i.join(",") };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "4976a71a-4487-49aa-8aab-a1eda469037a",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      setProjectProperties(t, i, a) {
        return H(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            H(this, void 0, void 0, function* () {
              let r = { projectId: i };
              (t = t || {}),
                (t["Content-Type"] = "application/json-patch+json");
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "core",
                    "4976a71a-4487-49aa-8aab-a1eda469037a",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  );
                o.additionalHeaders = t;
                let p;
                p = yield this.rest.update(n, a, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createOrUpdateProxy(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "core",
                    "ec1f4311-f2b4-4c15-b2b8-8990b80d2908",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.replace(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteProxy(t, i) {
        return H(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("proxyUrl can not be null or undefined");
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = {},
                r = { proxyUrl: t, site: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "core",
                    "ec1f4311-f2b4-4c15-b2b8-8990b80d2908",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getProxies(t) {
        return H(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            H(this, void 0, void 0, function* () {
              let u = {},
                l = { proxyUrl: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "core",
                    "ec1f4311-f2b4-4c15-b2b8-8990b80d2908",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getAllTeams(t, i, a, u) {
        return H(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            H(this, void 0, void 0, function* () {
              let s = {},
                n = { $mine: t, $top: i, $skip: a, $expandIdentity: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "core",
                    "7a4d9ee9-3433-4347-b47a-7a80f1cf307e",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !0);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createTeam(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { projectId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "core",
                    "d30a3dd1-f8ba-442a-b86a-bd0c0c383e59",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteTeam(t, i) {
        return H(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            H(this, void 0, void 0, function* () {
              let l = { projectId: t, teamId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "core",
                    "d30a3dd1-f8ba-442a-b86a-bd0c0c383e59",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTeam(t, i, a) {
        return H(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            H(this, void 0, void 0, function* () {
              let r = { projectId: t, teamId: i },
                s = { $expandIdentity: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "core",
                    "d30a3dd1-f8ba-442a-b86a-bd0c0c383e59",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getTeams(t, i, a, u, l) {
        return H(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            H(this, void 0, void 0, function* () {
              let n = { projectId: t },
                o = { $mine: i, $top: a, $skip: u, $expandIdentity: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "core",
                    "d30a3dd1-f8ba-442a-b86a-bd0c0c383e59",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      updateTeam(t, i, a) {
        return H(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            H(this, void 0, void 0, function* () {
              let r = { projectId: i, teamId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "core",
                    "d30a3dd1-f8ba-442a-b86a-bd0c0c383e59",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
    };
  us.RESOURCE_AREA_ID = "79134c72-4a58-4b42-976c-04e7115f32bf";
  Er.CoreApi = us;
});
var bd = x((ee) => {
  "use strict";
  Object.defineProperty(ee, "__esModule", { value: !0 });
  var y0;
  (function (e) {
    (e[(e.Collection_User = 0)] = "Collection_User"),
      (e[(e.Project_Team = 1)] = "Project_Team"),
      (e[(e.Project = 2)] = "Project");
  })((y0 = ee.DashboardScope || (ee.DashboardScope = {})));
  var v0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Edit = 1)] = "Edit"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.ManagePermissions = 3)] = "ManagePermissions");
  })((v0 = ee.GroupMemberPermission || (ee.GroupMemberPermission = {})));
  var m0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Read = 1)] = "Read"),
      (e[(e.Create = 2)] = "Create"),
      (e[(e.Edit = 4)] = "Edit"),
      (e[(e.Delete = 8)] = "Delete"),
      (e[(e.ManagePermissions = 16)] = "ManagePermissions");
  })((m0 = ee.TeamDashboardPermission || (ee.TeamDashboardPermission = {})));
  var g0;
  (function (e) {
    (e[(e.Collection_User = 0)] = "Collection_User"),
      (e[(e.Project_Team = 1)] = "Project_Team");
  })((g0 = ee.WidgetScope || (ee.WidgetScope = {})));
  ee.TypeInfo = {
    CopyDashboardOptions: {},
    CopyDashboardResponse: {},
    Dashboard: {},
    DashboardGroup: {},
    DashboardGroupEntry: {},
    DashboardGroupEntryResponse: {},
    DashboardResponse: {},
    DashboardScope: {
      enumValues: { collection_User: 0, project_Team: 1, project: 2 },
    },
    GroupMemberPermission: {
      enumValues: { none: 0, edit: 1, manage: 2, managePermissions: 3 },
    },
    TeamDashboardPermission: {
      enumValues: {
        none: 0,
        read: 1,
        create: 2,
        edit: 4,
        delete: 8,
        managePermissions: 16,
      },
    },
    Widget: {},
    WidgetMetadata: {},
    WidgetMetadataResponse: {},
    WidgetResponse: {},
    WidgetScope: { enumValues: { collection_User: 0, project_Team: 1 } },
    WidgetsVersionedList: {},
    WidgetTypesResponse: {},
  };
  ee.TypeInfo.CopyDashboardOptions.fields = {
    copyDashboardScope: { enumType: ee.TypeInfo.DashboardScope },
  };
  ee.TypeInfo.CopyDashboardResponse.fields = {
    copiedDashboard: { typeInfo: ee.TypeInfo.Dashboard },
    copyDashboardOptions: { typeInfo: ee.TypeInfo.CopyDashboardOptions },
  };
  ee.TypeInfo.Dashboard.fields = {
    dashboardScope: { enumType: ee.TypeInfo.DashboardScope },
    widgets: { isArray: !0, typeInfo: ee.TypeInfo.Widget },
  };
  ee.TypeInfo.DashboardGroup.fields = {
    dashboardEntries: {
      isArray: !0,
      typeInfo: ee.TypeInfo.DashboardGroupEntry,
    },
    permission: { enumType: ee.TypeInfo.GroupMemberPermission },
    teamDashboardPermission: { enumType: ee.TypeInfo.TeamDashboardPermission },
  };
  ee.TypeInfo.DashboardGroupEntry.fields = {
    dashboardScope: { enumType: ee.TypeInfo.DashboardScope },
    widgets: { isArray: !0, typeInfo: ee.TypeInfo.Widget },
  };
  ee.TypeInfo.DashboardGroupEntryResponse.fields = {
    dashboardScope: { enumType: ee.TypeInfo.DashboardScope },
    widgets: { isArray: !0, typeInfo: ee.TypeInfo.Widget },
  };
  ee.TypeInfo.DashboardResponse.fields = {
    dashboardScope: { enumType: ee.TypeInfo.DashboardScope },
    widgets: { isArray: !0, typeInfo: ee.TypeInfo.Widget },
  };
  ee.TypeInfo.Widget.fields = {
    dashboard: { typeInfo: ee.TypeInfo.Dashboard },
  };
  ee.TypeInfo.WidgetMetadata.fields = {
    supportedScopes: { isArray: !0, enumType: ee.TypeInfo.WidgetScope },
  };
  ee.TypeInfo.WidgetMetadataResponse.fields = {
    widgetMetadata: { typeInfo: ee.TypeInfo.WidgetMetadata },
  };
  ee.TypeInfo.WidgetResponse.fields = {
    dashboard: { typeInfo: ee.TypeInfo.Dashboard },
  };
  ee.TypeInfo.WidgetsVersionedList.fields = {
    widgets: { isArray: !0, typeInfo: ee.TypeInfo.Widget },
  };
  ee.TypeInfo.WidgetTypesResponse.fields = {
    widgetTypes: { isArray: !0, typeInfo: ee.TypeInfo.WidgetMetadata },
  };
});
var Dd = x((Sr) => {
  "use strict";
  var Ve =
    (Sr && Sr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Sr, "__esModule", { value: !0 });
  var I0 = qe(),
    ht = bd(),
    ps = class extends I0.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Dashboard-api", a);
      }
      createDashboard(t, i) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ve(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Dashboard",
                    "454b3e51-2e6e-48d4-ad81-978154089351",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  ht.TypeInfo.Dashboard,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      deleteDashboard(t, i) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ve(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, dashboardId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Dashboard",
                    "454b3e51-2e6e-48d4-ad81-978154089351",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getDashboard(t, i) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ve(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, dashboardId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Dashboard",
                    "454b3e51-2e6e-48d4-ad81-978154089351",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  ht.TypeInfo.Dashboard,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getDashboardsByProject(t) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Ve(this, void 0, void 0, function* () {
              let u = null,
                l = null;
              t && ((u = t.projectId || t.project), (l = t.teamId || t.team));
              let r = { project: u, team: l };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Dashboard",
                    "454b3e51-2e6e-48d4-ad81-978154089351",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ht.TypeInfo.Dashboard,
                  !0
                );
                i(d);
              } catch (s) {
                a(s);
              }
            })
          );
        });
      }
      replaceDashboard(t, i, a) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Ve(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, dashboardId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Dashboard",
                    "454b3e51-2e6e-48d4-ad81-978154089351",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  ht.TypeInfo.Dashboard,
                  !1
                );
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      replaceDashboards(t, i) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ve(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Dashboard",
                    "454b3e51-2e6e-48d4-ad81-978154089351",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  ht.TypeInfo.DashboardGroup,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      createWidget(t, i, a) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Ve(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, dashboardId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Dashboard",
                    "bdcff53a-8355-4172-a00a-40497ea23afc",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(c.result, ht.TypeInfo.Widget, !1);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      deleteWidget(t, i, a) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Ve(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              t && ((r = t.projectId || t.project), (s = t.teamId || t.team));
              let n = { project: r, team: s, dashboardId: i, widgetId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Dashboard",
                    "bdcff53a-8355-4172-a00a-40497ea23afc",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(
                  c.result,
                  ht.TypeInfo.Dashboard,
                  !1
                );
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      getWidget(t, i, a) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Ve(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              t && ((r = t.projectId || t.project), (s = t.teamId || t.team));
              let n = { project: r, team: s, dashboardId: i, widgetId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Dashboard",
                    "bdcff53a-8355-4172-a00a-40497ea23afc",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, ht.TypeInfo.Widget, !1);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      replaceWidget(t, i, a, u) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Ve(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              i && ((s = i.projectId || i.project), (n = i.teamId || i.team));
              let o = { project: s, team: n, dashboardId: a, widgetId: u };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Dashboard",
                    "bdcff53a-8355-4172-a00a-40497ea23afc",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.replace(d, t, c);
                let h = this.formatResponse(f.result, ht.TypeInfo.Widget, !1);
                l(h);
              } catch (p) {
                r(p);
              }
            })
          );
        });
      }
      updateWidget(t, i, a, u) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Ve(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              i && ((s = i.projectId || i.project), (n = i.teamId || i.team));
              let o = { project: s, team: n, dashboardId: a, widgetId: u };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Dashboard",
                    "bdcff53a-8355-4172-a00a-40497ea23afc",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, ht.TypeInfo.Widget, !1);
                l(h);
              } catch (p) {
                r(p);
              }
            })
          );
        });
      }
      getWidgetMetadata(t, i) {
        return Ve(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ve(this, void 0, void 0, function* () {
              let l = { project: i, contributionId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Dashboard",
                    "6b3628d3-e96f-4fc7-b176-50240b03b515",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ht.TypeInfo.WidgetMetadataResponse,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getWidgetTypes(t, i) {
        return Ve(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("scope can not be null or undefined");
          return new Promise((a, u) =>
            Ve(this, void 0, void 0, function* () {
              let l = { project: i },
                r = { $scope: t };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Dashboard",
                    "6b3628d3-e96f-4fc7-b176-50240b03b515",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ht.TypeInfo.WidgetTypesResponse,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
    };
  ps.RESOURCE_AREA_ID = "31c84e0a-3ece-48fd-a29d-100849af99ba";
  Sr.DashboardApi = ps;
});
var Nr = x((C) => {
  "use strict";
  Object.defineProperty(C, "__esModule", { value: !0 });
  var T0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Me = 1)] = "Me"),
      (e[(e.All = 2)] = "All");
  })((T0 = C.AcquisitionAssignmentType || (C.AcquisitionAssignmentType = {})));
  var R0;
  (function (e) {
    (e[(e.Disallow = 0)] = "Disallow"),
      (e[(e.Allow = 1)] = "Allow"),
      (e[(e.Completed = 3)] = "Completed");
  })((R0 = C.AcquisitionOperationState || (C.AcquisitionOperationState = {})));
  var V0;
  (function (e) {
    (e[(e.Get = 0)] = "Get"),
      (e[(e.Install = 1)] = "Install"),
      (e[(e.Buy = 2)] = "Buy"),
      (e[(e.Try = 3)] = "Try"),
      (e[(e.Request = 4)] = "Request"),
      (e[(e.None = 5)] = "None"),
      (e[(e.PurchaseRequest = 6)] = "PurchaseRequest");
  })((V0 = C.AcquisitionOperationType || (C.AcquisitionOperationType = {})));
  var b0;
  (function (e) {
    (e[(e.General = 1)] = "General"),
      (e[(e.Abusive = 2)] = "Abusive"),
      (e[(e.Spam = 4)] = "Spam");
  })((b0 = C.ConcernCategory || (C.ConcernCategory = {})));
  var D0;
  (function (e) {
    (e[(e.Publish = 1)] = "Publish"), (e[(e.Cancel = 2)] = "Cancel");
  })((D0 = C.DraftPatchOperation || (C.DraftPatchOperation = {})));
  var w0;
  (function (e) {
    (e[(e.Unpublished = 1)] = "Unpublished"),
      (e[(e.Published = 2)] = "Published"),
      (e[(e.Cancelled = 3)] = "Cancelled"),
      (e[(e.Error = 4)] = "Error");
  })((w0 = C.DraftStateType || (C.DraftStateType = {})));
  var q0;
  (function (e) {
    (e[(e.Exe = 1)] = "Exe"),
      (e[(e.Msi = 2)] = "Msi"),
      (e[(e.Vsix = 3)] = "Vsix"),
      (e[(e.ReferralLink = 4)] = "ReferralLink");
  })(
    (q0 =
      C.ExtensionDeploymentTechnology || (C.ExtensionDeploymentTechnology = {}))
  );
  var P0;
  (function (e) {
    (e[(e.Uninstall = 1)] = "Uninstall"),
      (e[(e.Install = 2)] = "Install"),
      (e[(e.Review = 3)] = "Review"),
      (e[(e.Acquisition = 4)] = "Acquisition"),
      (e[(e.Sales = 5)] = "Sales"),
      (e[(e.Other = 999)] = "Other");
  })(
    (P0 = C.ExtensionLifecycleEventType || (C.ExtensionLifecycleEventType = {}))
  );
  var C0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Private = 1)] = "Private"),
      (e[(e.Public = 2)] = "Public"),
      (e[(e.Preview = 4)] = "Preview"),
      (e[(e.Released = 8)] = "Released"),
      (e[(e.FirstParty = 16)] = "FirstParty"),
      (e[(e.All = 31)] = "All");
  })((C0 = C.ExtensionPolicyFlags || (C.ExtensionPolicyFlags = {})));
  var j0;
  (function (e) {
    (e[(e.Tag = 1)] = "Tag"),
      (e[(e.DisplayName = 2)] = "DisplayName"),
      (e[(e.Private = 3)] = "Private"),
      (e[(e.Id = 4)] = "Id"),
      (e[(e.Category = 5)] = "Category"),
      (e[(e.ContributionType = 6)] = "ContributionType"),
      (e[(e.Name = 7)] = "Name"),
      (e[(e.InstallationTarget = 8)] = "InstallationTarget"),
      (e[(e.Featured = 9)] = "Featured"),
      (e[(e.SearchText = 10)] = "SearchText"),
      (e[(e.FeaturedInCategory = 11)] = "FeaturedInCategory"),
      (e[(e.ExcludeWithFlags = 12)] = "ExcludeWithFlags"),
      (e[(e.IncludeWithFlags = 13)] = "IncludeWithFlags"),
      (e[(e.Lcid = 14)] = "Lcid"),
      (e[(e.InstallationTargetVersion = 15)] = "InstallationTargetVersion"),
      (e[(e.InstallationTargetVersionRange = 16)] =
        "InstallationTargetVersionRange"),
      (e[(e.VsixMetadata = 17)] = "VsixMetadata"),
      (e[(e.PublisherName = 18)] = "PublisherName"),
      (e[(e.PublisherDisplayName = 19)] = "PublisherDisplayName"),
      (e[(e.IncludeWithPublisherFlags = 20)] = "IncludeWithPublisherFlags"),
      (e[(e.OrganizationSharedWith = 21)] = "OrganizationSharedWith"),
      (e[(e.ProductArchitecture = 22)] = "ProductArchitecture"),
      (e[(e.TargetPlatform = 23)] = "TargetPlatform"),
      (e[(e.ExtensionName = 24)] = "ExtensionName");
  })((j0 = C.ExtensionQueryFilterType || (C.ExtensionQueryFilterType = {})));
  var A0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.IncludeVersions = 1)] = "IncludeVersions"),
      (e[(e.IncludeFiles = 2)] = "IncludeFiles"),
      (e[(e.IncludeCategoryAndTags = 4)] = "IncludeCategoryAndTags"),
      (e[(e.IncludeSharedAccounts = 8)] = "IncludeSharedAccounts"),
      (e[(e.IncludeVersionProperties = 16)] = "IncludeVersionProperties"),
      (e[(e.ExcludeNonValidated = 32)] = "ExcludeNonValidated"),
      (e[(e.IncludeInstallationTargets = 64)] = "IncludeInstallationTargets"),
      (e[(e.IncludeAssetUri = 128)] = "IncludeAssetUri"),
      (e[(e.IncludeStatistics = 256)] = "IncludeStatistics"),
      (e[(e.IncludeLatestVersionOnly = 512)] = "IncludeLatestVersionOnly"),
      (e[(e.UseFallbackAssetUri = 1024)] = "UseFallbackAssetUri"),
      (e[(e.IncludeMetadata = 2048)] = "IncludeMetadata"),
      (e[(e.IncludeMinimalPayloadForVsIde = 4096)] =
        "IncludeMinimalPayloadForVsIde"),
      (e[(e.IncludeLcids = 8192)] = "IncludeLcids"),
      (e[(e.IncludeSharedOrganizations = 16384)] =
        "IncludeSharedOrganizations"),
      (e[(e.IncludeNameConflictInfo = 32768)] = "IncludeNameConflictInfo"),
      (e[(e.AllAttributes = 16863)] = "AllAttributes");
  })((A0 = C.ExtensionQueryFlags || (C.ExtensionQueryFlags = {})));
  var O0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Set = 1)] = "Set"),
      (e[(e.Increment = 2)] = "Increment"),
      (e[(e.Decrement = 3)] = "Decrement"),
      (e[(e.Delete = 4)] = "Delete");
  })(
    (O0 = C.ExtensionStatisticOperation || (C.ExtensionStatisticOperation = {}))
  );
  var U0;
  (function (e) {
    e[(e.Daily = 1)] = "Daily";
  })(
    (U0 = C.ExtensionStatsAggregateType || (C.ExtensionStatsAggregateType = {}))
  );
  var k0;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.Validated = 1)] = "Validated");
  })((k0 = C.ExtensionVersionFlags || (C.ExtensionVersionFlags = {})));
  var E0;
  (function (e) {
    (e[(e.ReviewNotification = 1)] = "ReviewNotification"),
      (e[(e.QnaNotification = 2)] = "QnaNotification"),
      (e[(e.CustomerContactNotification = 3)] = "CustomerContactNotification"),
      (e[(e.PublisherMemberUpdateNotification = 4)] =
        "PublisherMemberUpdateNotification");
  })((E0 = C.NotificationTemplateType || (C.NotificationTemplateType = {})));
  var S0;
  (function (e) {
    (e[(e.Backward = 1)] = "Backward"), (e[(e.Forward = 2)] = "Forward");
  })((S0 = C.PagingDirection || (C.PagingDirection = {})));
  var N0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Disabled = 1)] = "Disabled"),
      (e[(e.BuiltIn = 2)] = "BuiltIn"),
      (e[(e.Validated = 4)] = "Validated"),
      (e[(e.Trusted = 8)] = "Trusted"),
      (e[(e.Paid = 16)] = "Paid"),
      (e[(e.Public = 256)] = "Public"),
      (e[(e.MultiVersion = 512)] = "MultiVersion"),
      (e[(e.System = 1024)] = "System"),
      (e[(e.Preview = 2048)] = "Preview"),
      (e[(e.Unpublished = 4096)] = "Unpublished"),
      (e[(e.Trial = 8192)] = "Trial"),
      (e[(e.Locked = 16384)] = "Locked"),
      (e[(e.Hidden = 32768)] = "Hidden");
  })((N0 = C.PublishedExtensionFlags || (C.PublishedExtensionFlags = {})));
  var B0;
  (function (e) {
    (e[(e.UnChanged = 1073741824)] = "UnChanged"),
      (e[(e.None = 0)] = "None"),
      (e[(e.Disabled = 1)] = "Disabled"),
      (e[(e.Verified = 2)] = "Verified"),
      (e[(e.Certified = 4)] = "Certified"),
      (e[(e.ServiceFlags = 7)] = "ServiceFlags");
  })((B0 = C.PublisherFlags || (C.PublisherFlags = {})));
  var M0;
  (function (e) {
    (e[(e.Read = 1)] = "Read"),
      (e[(e.UpdateExtension = 2)] = "UpdateExtension"),
      (e[(e.CreatePublisher = 4)] = "CreatePublisher"),
      (e[(e.PublishExtension = 8)] = "PublishExtension"),
      (e[(e.Admin = 16)] = "Admin"),
      (e[(e.TrustedPartner = 32)] = "TrustedPartner"),
      (e[(e.PrivateRead = 64)] = "PrivateRead"),
      (e[(e.DeleteExtension = 128)] = "DeleteExtension"),
      (e[(e.EditSettings = 256)] = "EditSettings"),
      (e[(e.ViewPermissions = 512)] = "ViewPermissions"),
      (e[(e.ManagePermissions = 1024)] = "ManagePermissions"),
      (e[(e.DeletePublisher = 2048)] = "DeletePublisher");
  })((M0 = C.PublisherPermissions || (C.PublisherPermissions = {})));
  var x0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.IncludeExtensions = 1)] = "IncludeExtensions"),
      (e[(e.IncludeEmailAddress = 2)] = "IncludeEmailAddress");
  })((x0 = C.PublisherQueryFlags || (C.PublisherQueryFlags = {})));
  var _0;
  (function (e) {
    (e[(e.Assigned = 1)] = "Assigned"), (e[(e.Inherited = 2)] = "Inherited");
  })((_0 = C.PublisherRoleAccess || (C.PublisherRoleAccess = {})));
  var G0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.VerificationPending = 1)] = "VerificationPending"),
      (e[(e.CertificationPending = 2)] = "CertificationPending"),
      (e[(e.CertificationRejected = 4)] = "CertificationRejected"),
      (e[(e.CertificationRevoked = 8)] = "CertificationRevoked");
  })((G0 = C.PublisherState || (C.PublisherState = {})));
  var F0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.UserEditable = 1)] = "UserEditable"),
      (e[(e.PublisherCreated = 2)] = "PublisherCreated");
  })((F0 = C.QnAItemStatus || (C.QnAItemStatus = {})));
  var L0;
  (function (e) {
    (e[(e.Completed = 0)] = "Completed"),
      (e[(e.Failed = 1)] = "Failed"),
      (e[(e.Inprogress = 2)] = "Inprogress"),
      (e[(e.Skipped = 3)] = "Skipped");
  })((L0 = C.RestApiResponseStatus || (C.RestApiResponseStatus = {})));
  var W0;
  (function (e) {
    (e[(e.Create = 1)] = "Create"),
      (e[(e.Update = 2)] = "Update"),
      (e[(e.Delete = 3)] = "Delete");
  })((W0 = C.ReviewEventOperation || (C.ReviewEventOperation = {})));
  var $0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.FilterEmptyReviews = 1)] = "FilterEmptyReviews"),
      (e[(e.FilterEmptyUserNames = 2)] = "FilterEmptyUserNames");
  })(($0 = C.ReviewFilterOptions || (C.ReviewFilterOptions = {})));
  var H0;
  (function (e) {
    (e[(e.FlagReview = 1)] = "FlagReview"),
      (e[(e.UpdateReview = 2)] = "UpdateReview"),
      (e[(e.ReplyToReview = 3)] = "ReplyToReview"),
      (e[(e.AdminResponseForReview = 4)] = "AdminResponseForReview"),
      (e[(e.DeleteAdminReply = 5)] = "DeleteAdminReply"),
      (e[(e.DeletePublisherReply = 6)] = "DeletePublisherReply");
  })((H0 = C.ReviewPatchOperation || (C.ReviewPatchOperation = {})));
  var z0;
  (function (e) {
    (e[(e.Review = 1)] = "Review"),
      (e[(e.PublisherReply = 2)] = "PublisherReply"),
      (e[(e.AdminReply = 3)] = "AdminReply");
  })((z0 = C.ReviewResourceType || (C.ReviewResourceType = {})));
  var Q0;
  (function (e) {
    (e[(e.Relevance = 0)] = "Relevance"),
      (e[(e.LastUpdatedDate = 1)] = "LastUpdatedDate"),
      (e[(e.Title = 2)] = "Title"),
      (e[(e.Publisher = 3)] = "Publisher"),
      (e[(e.InstallCount = 4)] = "InstallCount"),
      (e[(e.PublishedDate = 5)] = "PublishedDate"),
      (e[(e.AverageRating = 6)] = "AverageRating"),
      (e[(e.TrendingDaily = 7)] = "TrendingDaily"),
      (e[(e.TrendingWeekly = 8)] = "TrendingWeekly"),
      (e[(e.TrendingMonthly = 9)] = "TrendingMonthly"),
      (e[(e.ReleaseDate = 10)] = "ReleaseDate"),
      (e[(e.Author = 11)] = "Author"),
      (e[(e.WeightedRating = 12)] = "WeightedRating");
  })((Q0 = C.SortByType || (C.SortByType = {})));
  var J0;
  (function (e) {
    (e[(e.Default = 0)] = "Default"),
      (e[(e.Ascending = 1)] = "Ascending"),
      (e[(e.Descending = 2)] = "Descending");
  })((J0 = C.SortOrderType || (C.SortOrderType = {})));
  var K0;
  (function (e) {
    (e[(e.Install = 1)] = "Install"),
      (e[(e.Update = 2)] = "Update"),
      (e[(e.Uninstall = 3)] = "Uninstall");
  })(
    (K0 =
      C.VSCodeWebExtensionStatisicsType ||
      (C.VSCodeWebExtensionStatisicsType = {}))
  );
  C.TypeInfo = {
    AcquisitionAssignmentType: { enumValues: { none: 0, me: 1, all: 2 } },
    AcquisitionOperation: {},
    AcquisitionOperationState: {
      enumValues: { disallow: 0, allow: 1, completed: 3 },
    },
    AcquisitionOperationType: {
      enumValues: {
        get: 0,
        install: 1,
        buy: 2,
        try: 3,
        request: 4,
        none: 5,
        purchaseRequest: 6,
      },
    },
    AcquisitionOptions: {},
    AzureRestApiResponseModel: {},
    Concern: {},
    ConcernCategory: { enumValues: { general: 1, abusive: 2, spam: 4 } },
    CustomerLastContact: {},
    CustomerSupportRequest: {},
    DraftPatchOperation: { enumValues: { publish: 1, cancel: 2 } },
    DraftStateType: {
      enumValues: { unpublished: 1, published: 2, cancelled: 3, error: 4 },
    },
    ExtensionAcquisitionRequest: {},
    ExtensionDailyStat: {},
    ExtensionDailyStats: {},
    ExtensionDeploymentTechnology: {
      enumValues: { exe: 1, msi: 2, vsix: 3, referralLink: 4 },
    },
    ExtensionDraft: {},
    ExtensionDraftPatch: {},
    ExtensionEvent: {},
    ExtensionEvents: {},
    ExtensionFilterResult: {},
    ExtensionLifecycleEventType: {
      enumValues: {
        uninstall: 1,
        install: 2,
        review: 3,
        acquisition: 4,
        sales: 5,
        other: 999,
      },
    },
    ExtensionPayload: {},
    ExtensionPolicy: {},
    ExtensionPolicyFlags: {
      enumValues: {
        none: 0,
        private: 1,
        public: 2,
        preview: 4,
        released: 8,
        firstParty: 16,
        all: 31,
      },
    },
    ExtensionQuery: {},
    ExtensionQueryFilterType: {
      enumValues: {
        tag: 1,
        displayName: 2,
        private: 3,
        id: 4,
        category: 5,
        contributionType: 6,
        name: 7,
        installationTarget: 8,
        featured: 9,
        searchText: 10,
        featuredInCategory: 11,
        excludeWithFlags: 12,
        includeWithFlags: 13,
        lcid: 14,
        installationTargetVersion: 15,
        installationTargetVersionRange: 16,
        vsixMetadata: 17,
        publisherName: 18,
        publisherDisplayName: 19,
        includeWithPublisherFlags: 20,
        organizationSharedWith: 21,
        productArchitecture: 22,
        targetPlatform: 23,
        extensionName: 24,
      },
    },
    ExtensionQueryFlags: {
      enumValues: {
        none: 0,
        includeVersions: 1,
        includeFiles: 2,
        includeCategoryAndTags: 4,
        includeSharedAccounts: 8,
        includeVersionProperties: 16,
        excludeNonValidated: 32,
        includeInstallationTargets: 64,
        includeAssetUri: 128,
        includeStatistics: 256,
        includeLatestVersionOnly: 512,
        useFallbackAssetUri: 1024,
        includeMetadata: 2048,
        includeMinimalPayloadForVsIde: 4096,
        includeLcids: 8192,
        includeSharedOrganizations: 16384,
        includeNameConflictInfo: 32768,
        allAttributes: 16863,
      },
    },
    ExtensionQueryResult: {},
    ExtensionStatisticOperation: {
      enumValues: { none: 0, set: 1, increment: 2, decrement: 3, delete: 4 },
    },
    ExtensionStatisticUpdate: {},
    ExtensionStatsAggregateType: { enumValues: { daily: 1 } },
    ExtensionVersion: {},
    ExtensionVersionFlags: { enumValues: { none: 0, validated: 1 } },
    NotificationsData: {},
    NotificationTemplateType: {
      enumValues: {
        reviewNotification: 1,
        qnaNotification: 2,
        customerContactNotification: 3,
        publisherMemberUpdateNotification: 4,
      },
    },
    PagingDirection: { enumValues: { backward: 1, forward: 2 } },
    PublishedExtension: {},
    PublishedExtensionFlags: {
      enumValues: {
        none: 0,
        disabled: 1,
        builtIn: 2,
        validated: 4,
        trusted: 8,
        paid: 16,
        public: 256,
        multiVersion: 512,
        system: 1024,
        preview: 2048,
        unpublished: 4096,
        trial: 8192,
        locked: 16384,
        hidden: 32768,
      },
    },
    Publisher: {},
    PublisherBase: {},
    PublisherFacts: {},
    PublisherFilterResult: {},
    PublisherFlags: {
      enumValues: {
        unChanged: 1073741824,
        none: 0,
        disabled: 1,
        verified: 2,
        certified: 4,
        serviceFlags: 7,
      },
    },
    PublisherPermissions: {
      enumValues: {
        read: 1,
        updateExtension: 2,
        createPublisher: 4,
        publishExtension: 8,
        admin: 16,
        trustedPartner: 32,
        privateRead: 64,
        deleteExtension: 128,
        editSettings: 256,
        viewPermissions: 512,
        managePermissions: 1024,
        deletePublisher: 2048,
      },
    },
    PublisherQuery: {},
    PublisherQueryFlags: {
      enumValues: { none: 0, includeExtensions: 1, includeEmailAddress: 2 },
    },
    PublisherQueryResult: {},
    PublisherRoleAccess: { enumValues: { assigned: 1, inherited: 2 } },
    PublisherRoleAssignment: {},
    PublisherState: {
      enumValues: {
        none: 0,
        verificationPending: 1,
        certificationPending: 2,
        certificationRejected: 4,
        certificationRevoked: 8,
      },
    },
    QnAItem: {},
    QnAItemStatus: {
      enumValues: { none: 0, userEditable: 1, publisherCreated: 2 },
    },
    QueryFilter: {},
    Question: {},
    QuestionsResult: {},
    Response: {},
    RestApiResponseStatus: {
      enumValues: { completed: 0, failed: 1, inprogress: 2, skipped: 3 },
    },
    RestApiResponseStatusModel: {},
    Review: {},
    ReviewEventOperation: { enumValues: { create: 1, update: 2, delete: 3 } },
    ReviewEventProperties: {},
    ReviewFilterOptions: {
      enumValues: { none: 0, filterEmptyReviews: 1, filterEmptyUserNames: 2 },
    },
    ReviewPatch: {},
    ReviewPatchOperation: {
      enumValues: {
        flagReview: 1,
        updateReview: 2,
        replyToReview: 3,
        adminResponseForReview: 4,
        deleteAdminReply: 5,
        deletePublisherReply: 6,
      },
    },
    ReviewReply: {},
    ReviewResourceType: {
      enumValues: { review: 1, publisherReply: 2, adminReply: 3 },
    },
    ReviewsResult: {},
    SortByType: {
      enumValues: {
        relevance: 0,
        lastUpdatedDate: 1,
        title: 2,
        publisher: 3,
        installCount: 4,
        publishedDate: 5,
        averageRating: 6,
        trendingDaily: 7,
        trendingWeekly: 8,
        trendingMonthly: 9,
        releaseDate: 10,
        author: 11,
        weightedRating: 12,
      },
    },
    SortOrderType: { enumValues: { default: 0, ascending: 1, descending: 2 } },
    UserExtensionPolicy: {},
    UserReportedConcern: {},
    VSCodeWebExtensionStatisicsType: {
      enumValues: { install: 1, update: 2, uninstall: 3 },
    },
  };
  C.TypeInfo.AcquisitionOperation.fields = {
    operationState: { enumType: C.TypeInfo.AcquisitionOperationState },
    operationType: { enumType: C.TypeInfo.AcquisitionOperationType },
  };
  C.TypeInfo.AcquisitionOptions.fields = {
    defaultOperation: { typeInfo: C.TypeInfo.AcquisitionOperation },
    operations: { isArray: !0, typeInfo: C.TypeInfo.AcquisitionOperation },
  };
  C.TypeInfo.AzureRestApiResponseModel.fields = {
    operationStatus: { typeInfo: C.TypeInfo.RestApiResponseStatusModel },
  };
  C.TypeInfo.Concern.fields = {
    category: { enumType: C.TypeInfo.ConcernCategory },
    createdDate: { isDate: !0 },
    status: { enumType: C.TypeInfo.QnAItemStatus },
    updatedDate: { isDate: !0 },
  };
  C.TypeInfo.CustomerLastContact.fields = { lastContactDate: { isDate: !0 } };
  C.TypeInfo.CustomerSupportRequest.fields = {
    review: { typeInfo: C.TypeInfo.Review },
  };
  C.TypeInfo.ExtensionAcquisitionRequest.fields = {
    assignmentType: { enumType: C.TypeInfo.AcquisitionAssignmentType },
    operationType: { enumType: C.TypeInfo.AcquisitionOperationType },
  };
  C.TypeInfo.ExtensionDailyStat.fields = { statisticDate: { isDate: !0 } };
  C.TypeInfo.ExtensionDailyStats.fields = {
    dailyStats: { isArray: !0, typeInfo: C.TypeInfo.ExtensionDailyStat },
  };
  C.TypeInfo.ExtensionDraft.fields = {
    createdDate: { isDate: !0 },
    draftState: { enumType: C.TypeInfo.DraftStateType },
    lastUpdated: { isDate: !0 },
    payload: { typeInfo: C.TypeInfo.ExtensionPayload },
  };
  C.TypeInfo.ExtensionDraftPatch.fields = {
    operation: { enumType: C.TypeInfo.DraftPatchOperation },
  };
  C.TypeInfo.ExtensionEvent.fields = { statisticDate: { isDate: !0 } };
  C.TypeInfo.ExtensionEvents.fields = {
    events: {
      isDictionary: !0,
      dictionaryValueFieldInfo: {
        isArray: !0,
        typeInfo: C.TypeInfo.ExtensionEvent,
      },
    },
  };
  C.TypeInfo.ExtensionFilterResult.fields = {
    extensions: { isArray: !0, typeInfo: C.TypeInfo.PublishedExtension },
  };
  C.TypeInfo.ExtensionPayload.fields = {
    type: { enumType: C.TypeInfo.ExtensionDeploymentTechnology },
  };
  C.TypeInfo.ExtensionPolicy.fields = {
    install: { enumType: C.TypeInfo.ExtensionPolicyFlags },
    request: { enumType: C.TypeInfo.ExtensionPolicyFlags },
  };
  C.TypeInfo.ExtensionQuery.fields = {
    filters: { isArray: !0, typeInfo: C.TypeInfo.QueryFilter },
    flags: { enumType: C.TypeInfo.ExtensionQueryFlags },
  };
  C.TypeInfo.ExtensionQueryResult.fields = {
    results: { isArray: !0, typeInfo: C.TypeInfo.ExtensionFilterResult },
  };
  C.TypeInfo.ExtensionStatisticUpdate.fields = {
    operation: { enumType: C.TypeInfo.ExtensionStatisticOperation },
  };
  C.TypeInfo.ExtensionVersion.fields = {
    flags: { enumType: C.TypeInfo.ExtensionVersionFlags },
    lastUpdated: { isDate: !0 },
  };
  C.TypeInfo.NotificationsData.fields = {
    type: { enumType: C.TypeInfo.NotificationTemplateType },
  };
  C.TypeInfo.PublishedExtension.fields = {
    deploymentType: { enumType: C.TypeInfo.ExtensionDeploymentTechnology },
    flags: { enumType: C.TypeInfo.PublishedExtensionFlags },
    lastUpdated: { isDate: !0 },
    publishedDate: { isDate: !0 },
    publisher: { typeInfo: C.TypeInfo.PublisherFacts },
    releaseDate: { isDate: !0 },
    versions: { isArray: !0, typeInfo: C.TypeInfo.ExtensionVersion },
  };
  C.TypeInfo.Publisher.fields = {
    extensions: { isArray: !0, typeInfo: C.TypeInfo.PublishedExtension },
    flags: { enumType: C.TypeInfo.PublisherFlags },
    lastUpdated: { isDate: !0 },
    state: { enumType: C.TypeInfo.PublisherState },
  };
  C.TypeInfo.PublisherBase.fields = {
    extensions: { isArray: !0, typeInfo: C.TypeInfo.PublishedExtension },
    flags: { enumType: C.TypeInfo.PublisherFlags },
    lastUpdated: { isDate: !0 },
    state: { enumType: C.TypeInfo.PublisherState },
  };
  C.TypeInfo.PublisherFacts.fields = {
    flags: { enumType: C.TypeInfo.PublisherFlags },
  };
  C.TypeInfo.PublisherFilterResult.fields = {
    publishers: { isArray: !0, typeInfo: C.TypeInfo.Publisher },
  };
  C.TypeInfo.PublisherQuery.fields = {
    filters: { isArray: !0, typeInfo: C.TypeInfo.QueryFilter },
    flags: { enumType: C.TypeInfo.PublisherQueryFlags },
  };
  C.TypeInfo.PublisherQueryResult.fields = {
    results: { isArray: !0, typeInfo: C.TypeInfo.PublisherFilterResult },
  };
  C.TypeInfo.PublisherRoleAssignment.fields = {
    access: { enumType: C.TypeInfo.PublisherRoleAccess },
  };
  C.TypeInfo.QnAItem.fields = {
    createdDate: { isDate: !0 },
    status: { enumType: C.TypeInfo.QnAItemStatus },
    updatedDate: { isDate: !0 },
  };
  C.TypeInfo.QueryFilter.fields = {
    direction: { enumType: C.TypeInfo.PagingDirection },
  };
  C.TypeInfo.Question.fields = {
    createdDate: { isDate: !0 },
    responses: { isArray: !0, typeInfo: C.TypeInfo.Response },
    status: { enumType: C.TypeInfo.QnAItemStatus },
    updatedDate: { isDate: !0 },
  };
  C.TypeInfo.QuestionsResult.fields = {
    questions: { isArray: !0, typeInfo: C.TypeInfo.Question },
  };
  C.TypeInfo.Response.fields = {
    createdDate: { isDate: !0 },
    status: { enumType: C.TypeInfo.QnAItemStatus },
    updatedDate: { isDate: !0 },
  };
  C.TypeInfo.RestApiResponseStatusModel.fields = {
    status: { enumType: C.TypeInfo.RestApiResponseStatus },
  };
  C.TypeInfo.Review.fields = {
    adminReply: { typeInfo: C.TypeInfo.ReviewReply },
    reply: { typeInfo: C.TypeInfo.ReviewReply },
    updatedDate: { isDate: !0 },
  };
  C.TypeInfo.ReviewEventProperties.fields = {
    eventOperation: { enumType: C.TypeInfo.ReviewEventOperation },
    replyDate: { isDate: !0 },
    resourceType: { enumType: C.TypeInfo.ReviewResourceType },
    reviewDate: { isDate: !0 },
  };
  C.TypeInfo.ReviewPatch.fields = {
    operation: { enumType: C.TypeInfo.ReviewPatchOperation },
    reportedConcern: { typeInfo: C.TypeInfo.UserReportedConcern },
    reviewItem: { typeInfo: C.TypeInfo.Review },
  };
  C.TypeInfo.ReviewReply.fields = { updatedDate: { isDate: !0 } };
  C.TypeInfo.ReviewsResult.fields = {
    reviews: { isArray: !0, typeInfo: C.TypeInfo.Review },
  };
  C.TypeInfo.UserExtensionPolicy.fields = {
    permissions: { typeInfo: C.TypeInfo.ExtensionPolicy },
  };
  C.TypeInfo.UserReportedConcern.fields = {
    category: { enumType: C.TypeInfo.ConcernCategory },
    submittedDate: { isDate: !0 },
  };
});
var wd = x((L) => {
  "use strict";
  Object.defineProperty(L, "__esModule", { value: !0 });
  var ba = Nr(),
    X0;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Me = 1)] = "Me"),
      (e[(e.All = 2)] = "All");
  })((X0 = L.AcquisitionAssignmentType || (L.AcquisitionAssignmentType = {})));
  var Z0;
  (function (e) {
    (e[(e.Disallow = 0)] = "Disallow"),
      (e[(e.Allow = 1)] = "Allow"),
      (e[(e.Completed = 3)] = "Completed");
  })((Z0 = L.AcquisitionOperationState || (L.AcquisitionOperationState = {})));
  var Y0;
  (function (e) {
    (e[(e.Get = 0)] = "Get"),
      (e[(e.Install = 1)] = "Install"),
      (e[(e.Buy = 2)] = "Buy"),
      (e[(e.Try = 3)] = "Try"),
      (e[(e.Request = 4)] = "Request"),
      (e[(e.None = 5)] = "None"),
      (e[(e.PurchaseRequest = 6)] = "PurchaseRequest");
  })((Y0 = L.AcquisitionOperationType || (L.AcquisitionOperationType = {})));
  var eg;
  (function (e) {
    (e[(e.OnlyIfLicensed = 0)] = "OnlyIfLicensed"),
      (e[(e.OnlyIfUnlicensed = 1)] = "OnlyIfUnlicensed"),
      (e[(e.AlwaysInclude = 2)] = "AlwaysInclude");
  })(
    (eg =
      L.ContributionLicensingBehaviorType ||
      (L.ContributionLicensingBehaviorType = {}))
  );
  var tg;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.String = 1)] = "String"),
      (e[(e.Uri = 2)] = "Uri"),
      (e[(e.Guid = 4)] = "Guid"),
      (e[(e.Boolean = 8)] = "Boolean"),
      (e[(e.Integer = 16)] = "Integer"),
      (e[(e.Double = 32)] = "Double"),
      (e[(e.DateTime = 64)] = "DateTime"),
      (e[(e.Dictionary = 128)] = "Dictionary"),
      (e[(e.Array = 256)] = "Array"),
      (e[(e.Object = 512)] = "Object");
  })((tg = L.ContributionPropertyType || (L.ContributionPropertyType = {})));
  var ig;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.IncludeSelf = 16)] = "IncludeSelf"),
      (e[(e.IncludeChildren = 32)] = "IncludeChildren"),
      (e[(e.IncludeSubTree = 96)] = "IncludeSubTree"),
      (e[(e.IncludeAll = 112)] = "IncludeAll"),
      (e[(e.IgnoreConstraints = 256)] = "IgnoreConstraints");
  })((ig = L.ContributionQueryOptions || (L.ContributionQueryOptions = {})));
  var rg;
  (function (e) {
    (e[(e.BuiltIn = 1)] = "BuiltIn"), (e[(e.Trusted = 2)] = "Trusted");
  })((rg = L.ExtensionFlags || (L.ExtensionFlags = {})));
  var ng;
  (function (e) {
    (e[(e.Open = 0)] = "Open"),
      (e[(e.Accepted = 1)] = "Accepted"),
      (e[(e.Rejected = 2)] = "Rejected");
  })((ng = L.ExtensionRequestState || (L.ExtensionRequestState = {})));
  var sg;
  (function (e) {
    (e[(e.Created = 1)] = "Created"),
      (e[(e.Approved = 2)] = "Approved"),
      (e[(e.Rejected = 3)] = "Rejected"),
      (e[(e.Deleted = 4)] = "Deleted");
  })(
    (sg = L.ExtensionRequestUpdateType || (L.ExtensionRequestUpdateType = {}))
  );
  var og;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Disabled = 1)] = "Disabled"),
      (e[(e.BuiltIn = 2)] = "BuiltIn"),
      (e[(e.MultiVersion = 4)] = "MultiVersion"),
      (e[(e.UnInstalled = 8)] = "UnInstalled"),
      (e[(e.VersionCheckError = 16)] = "VersionCheckError"),
      (e[(e.Trusted = 32)] = "Trusted"),
      (e[(e.Error = 64)] = "Error"),
      (e[(e.NeedsReauthorization = 128)] = "NeedsReauthorization"),
      (e[(e.AutoUpgradeError = 256)] = "AutoUpgradeError"),
      (e[(e.Warning = 512)] = "Warning");
  })((og = L.ExtensionStateFlags || (L.ExtensionStateFlags = {})));
  var ag;
  (function (e) {
    (e[(e.Installed = 1)] = "Installed"),
      (e[(e.Uninstalled = 2)] = "Uninstalled"),
      (e[(e.Enabled = 3)] = "Enabled"),
      (e[(e.Disabled = 4)] = "Disabled"),
      (e[(e.VersionUpdated = 5)] = "VersionUpdated"),
      (e[(e.ActionRequired = 6)] = "ActionRequired"),
      (e[(e.ActionResolved = 7)] = "ActionResolved");
  })((ag = L.ExtensionUpdateType || (L.ExtensionUpdateType = {})));
  var lg;
  (function (e) {
    (e[(e.Warning = 0)] = "Warning"), (e[(e.Error = 1)] = "Error");
  })(
    (lg =
      L.InstalledExtensionStateIssueType ||
      (L.InstalledExtensionStateIssueType = {}))
  );
  L.TypeInfo = {
    AcquisitionAssignmentType: { enumValues: { none: 0, me: 1, all: 2 } },
    AcquisitionOperation: {},
    AcquisitionOperationState: {
      enumValues: { disallow: 0, allow: 1, completed: 3 },
    },
    AcquisitionOperationType: {
      enumValues: {
        get: 0,
        install: 1,
        buy: 2,
        try: 3,
        request: 4,
        none: 5,
        purchaseRequest: 6,
      },
    },
    AcquisitionOptions: {},
    ContributionLicensingBehaviorType: {
      enumValues: { onlyIfLicensed: 0, onlyIfUnlicensed: 1, alwaysInclude: 2 },
    },
    ContributionNodeQuery: {},
    ContributionPropertyDescription: {},
    ContributionPropertyType: {
      enumValues: {
        unknown: 0,
        string: 1,
        uri: 2,
        guid: 4,
        boolean: 8,
        integer: 16,
        double: 32,
        dateTime: 64,
        dictionary: 128,
        array: 256,
        object: 512,
      },
    },
    ContributionQueryOptions: {
      enumValues: {
        none: 0,
        includeSelf: 16,
        includeChildren: 32,
        includeSubTree: 96,
        includeAll: 112,
        ignoreConstraints: 256,
      },
    },
    ContributionType: {},
    ExtensionAcquisitionRequest: {},
    ExtensionAuditLog: {},
    ExtensionAuditLogEntry: {},
    ExtensionEvent: {},
    ExtensionFlags: { enumValues: { builtIn: 1, trusted: 2 } },
    ExtensionLicensing: {},
    ExtensionManifest: {},
    ExtensionRequest: {},
    ExtensionRequestEvent: {},
    ExtensionRequestsEvent: {},
    ExtensionRequestState: {
      enumValues: { open: 0, accepted: 1, rejected: 2 },
    },
    ExtensionRequestUpdateType: {
      enumValues: { created: 1, approved: 2, rejected: 3, deleted: 4 },
    },
    ExtensionState: {},
    ExtensionStateFlags: {
      enumValues: {
        none: 0,
        disabled: 1,
        builtIn: 2,
        multiVersion: 4,
        unInstalled: 8,
        versionCheckError: 16,
        trusted: 32,
        error: 64,
        needsReauthorization: 128,
        autoUpgradeError: 256,
        warning: 512,
      },
    },
    ExtensionUpdateType: {
      enumValues: {
        installed: 1,
        uninstalled: 2,
        enabled: 3,
        disabled: 4,
        versionUpdated: 5,
        actionRequired: 6,
        actionResolved: 7,
      },
    },
    InstalledExtension: {},
    InstalledExtensionState: {},
    InstalledExtensionStateIssue: {},
    InstalledExtensionStateIssueType: { enumValues: { warning: 0, error: 1 } },
    LicensingOverride: {},
    RequestedExtension: {},
  };
  L.TypeInfo.AcquisitionOperation.fields = {
    operationState: { enumType: L.TypeInfo.AcquisitionOperationState },
    operationType: { enumType: L.TypeInfo.AcquisitionOperationType },
  };
  L.TypeInfo.AcquisitionOptions.fields = {
    defaultOperation: { typeInfo: L.TypeInfo.AcquisitionOperation },
    operations: { isArray: !0, typeInfo: L.TypeInfo.AcquisitionOperation },
  };
  L.TypeInfo.ContributionNodeQuery.fields = {
    queryOptions: { enumType: L.TypeInfo.ContributionQueryOptions },
  };
  L.TypeInfo.ContributionPropertyDescription.fields = {
    type: { enumType: L.TypeInfo.ContributionPropertyType },
  };
  L.TypeInfo.ContributionType.fields = {
    properties: {
      isDictionary: !0,
      dictionaryValueTypeInfo: L.TypeInfo.ContributionPropertyDescription,
    },
  };
  L.TypeInfo.ExtensionAcquisitionRequest.fields = {
    assignmentType: { enumType: L.TypeInfo.AcquisitionAssignmentType },
    operationType: { enumType: L.TypeInfo.AcquisitionOperationType },
  };
  L.TypeInfo.ExtensionAuditLog.fields = {
    entries: { isArray: !0, typeInfo: L.TypeInfo.ExtensionAuditLogEntry },
  };
  L.TypeInfo.ExtensionAuditLogEntry.fields = { auditDate: { isDate: !0 } };
  L.TypeInfo.ExtensionEvent.fields = {
    extension: { typeInfo: ba.TypeInfo.PublishedExtension },
    updateType: { enumType: L.TypeInfo.ExtensionUpdateType },
  };
  L.TypeInfo.ExtensionLicensing.fields = {
    overrides: { isArray: !0, typeInfo: L.TypeInfo.LicensingOverride },
  };
  L.TypeInfo.ExtensionManifest.fields = {
    contributionTypes: { isArray: !0, typeInfo: L.TypeInfo.ContributionType },
    licensing: { typeInfo: L.TypeInfo.ExtensionLicensing },
  };
  L.TypeInfo.ExtensionRequest.fields = {
    requestDate: { isDate: !0 },
    requestState: { enumType: L.TypeInfo.ExtensionRequestState },
    resolveDate: { isDate: !0 },
  };
  L.TypeInfo.ExtensionRequestEvent.fields = {
    extension: { typeInfo: ba.TypeInfo.PublishedExtension },
    request: { typeInfo: L.TypeInfo.ExtensionRequest },
    updateType: { enumType: L.TypeInfo.ExtensionRequestUpdateType },
  };
  L.TypeInfo.ExtensionRequestsEvent.fields = {
    extension: { typeInfo: ba.TypeInfo.PublishedExtension },
    requests: { isArray: !0, typeInfo: L.TypeInfo.ExtensionRequest },
    updateType: { enumType: L.TypeInfo.ExtensionRequestUpdateType },
  };
  L.TypeInfo.ExtensionState.fields = {
    flags: { enumType: L.TypeInfo.ExtensionStateFlags },
    installationIssues: {
      isArray: !0,
      typeInfo: L.TypeInfo.InstalledExtensionStateIssue,
    },
    lastUpdated: { isDate: !0 },
    lastVersionCheck: { isDate: !0 },
  };
  L.TypeInfo.InstalledExtension.fields = {
    contributionTypes: { isArray: !0, typeInfo: L.TypeInfo.ContributionType },
    flags: { enumType: L.TypeInfo.ExtensionFlags },
    installState: { typeInfo: L.TypeInfo.InstalledExtensionState },
    lastPublished: { isDate: !0 },
    licensing: { typeInfo: L.TypeInfo.ExtensionLicensing },
  };
  L.TypeInfo.InstalledExtensionState.fields = {
    flags: { enumType: L.TypeInfo.ExtensionStateFlags },
    installationIssues: {
      isArray: !0,
      typeInfo: L.TypeInfo.InstalledExtensionStateIssue,
    },
    lastUpdated: { isDate: !0 },
  };
  L.TypeInfo.InstalledExtensionStateIssue.fields = {
    type: { enumType: L.TypeInfo.InstalledExtensionStateIssueType },
  };
  L.TypeInfo.LicensingOverride.fields = {
    behavior: { enumType: L.TypeInfo.ContributionLicensingBehaviorType },
  };
  L.TypeInfo.RequestedExtension.fields = {
    extensionRequests: { isArray: !0, typeInfo: L.TypeInfo.ExtensionRequest },
  };
});
var qd = x((Br) => {
  "use strict";
  var Q =
    (Br && Br.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Br, "__esModule", { value: !0 });
  var ug = qe(),
    gt = wd(),
    pg = Nr(),
    ds = class extends ug.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-ExtensionManagement-api", a);
      }
      getAcquisitionOptions(t, i, a, u, l, r, s) {
        return Q(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("itemId can not be null or undefined");
          return new Promise((n, o) =>
            Q(this, void 0, void 0, function* () {
              let p = {},
                d = {
                  itemId: t,
                  testCommerce: i,
                  isFreeOrTrialInstall: a,
                  isAccountOwner: u,
                  isLinked: l,
                  isConnectedServer: r,
                  isBuyOperationValid: s,
                };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "288dff58-d13b-468e-9671-0fb754e9398c",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(
                  T.result,
                  gt.TypeInfo.AcquisitionOptions,
                  !1
                );
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      requestAcquisition(t) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Q(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "da616457-eed3-4672-92d7-18d21f5c1658",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  gt.TypeInfo.ExtensionAcquisitionRequest,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getAuditLog(t, i) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Q(this, void 0, void 0, function* () {
              let l = { publisherName: t, extensionName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "23a312e0-562d-42fb-a505-5a046b5635db",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  gt.TypeInfo.ExtensionAuditLog,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      registerAuthorization(t, i, a) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Q(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i, registrationId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "f21cfc80-d2d2-4248-98bb-7820c74c4606",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, null, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createDocumentByName(t, i, a, u, l, r) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            Q(this, void 0, void 0, function* () {
              let o = {
                publisherName: i,
                extensionName: a,
                scopeType: u,
                scopeValue: l,
                collectionName: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "bbe06c18-1c8b-4fcd-b9c6-1535aaab8749",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      deleteDocumentByName(t, i, a, u, l, r) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            Q(this, void 0, void 0, function* () {
              let o = {
                publisherName: t,
                extensionName: i,
                scopeType: a,
                scopeValue: u,
                collectionName: l,
                documentId: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "bbe06c18-1c8b-4fcd-b9c6-1535aaab8749",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.del(d, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      getDocumentByName(t, i, a, u, l, r) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            Q(this, void 0, void 0, function* () {
              let o = {
                publisherName: t,
                extensionName: i,
                scopeType: a,
                scopeValue: u,
                collectionName: l,
                documentId: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "bbe06c18-1c8b-4fcd-b9c6-1535aaab8749",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      getDocumentsByName(t, i, a, u, l) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            Q(this, void 0, void 0, function* () {
              let n = {
                publisherName: t,
                extensionName: i,
                scopeType: a,
                scopeValue: u,
                collectionName: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "bbe06c18-1c8b-4fcd-b9c6-1535aaab8749",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !0);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      setDocumentByName(t, i, a, u, l, r) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            Q(this, void 0, void 0, function* () {
              let o = {
                publisherName: i,
                extensionName: a,
                scopeType: u,
                scopeValue: l,
                collectionName: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "bbe06c18-1c8b-4fcd-b9c6-1535aaab8749",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.replace(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      updateDocumentByName(t, i, a, u, l, r) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            Q(this, void 0, void 0, function* () {
              let o = {
                publisherName: i,
                extensionName: a,
                scopeType: u,
                scopeValue: l,
                collectionName: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "bbe06c18-1c8b-4fcd-b9c6-1535aaab8749",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      queryCollectionsByName(t, i, a) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Q(this, void 0, void 0, function* () {
              let r = { publisherName: i, extensionName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "56c331f1-ce53-4318-adfd-4db5c52a7a2e",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getStates(t, i, a, u) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Q(this, void 0, void 0, function* () {
              let s = {},
                n = {
                  includeDisabled: t,
                  includeErrors: i,
                  includeInstallationIssues: a,
                  forceRefresh: u,
                };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "92755d3d-9a8a-42b3-8a4d-87359fe5aa93",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  gt.TypeInfo.ExtensionState,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      queryExtensions(t) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Q(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "046c980f-1345-4ce2-bf85-b46d10ff4cfd",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  gt.TypeInfo.InstalledExtension,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getInstalledExtensions(t, i, a, u) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Q(this, void 0, void 0, function* () {
              let s = {},
                n = {
                  includeDisabledExtensions: t,
                  includeErrors: i,
                  assetTypes: a && a.join(":"),
                  includeInstallationIssues: u,
                };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "275424d0-c844-4fe2-bda6-04933a1357d8",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  gt.TypeInfo.InstalledExtension,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      updateInstalledExtension(t) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Q(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "275424d0-c844-4fe2-bda6-04933a1357d8",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.update(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  gt.TypeInfo.InstalledExtension,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getInstalledExtensionByName(t, i, a) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Q(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i },
                s = { assetTypes: a && a.join(":") };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "fb0da285-f23e-4b56-8b53-3ef5f9f6de66",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  gt.TypeInfo.InstalledExtension,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      installExtensionByName(t, i, a) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Q(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i, version: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "fb0da285-f23e-4b56-8b53-3ef5f9f6de66",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, null, o);
                let d = this.formatResponse(
                  p.result,
                  gt.TypeInfo.InstalledExtension,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      uninstallExtensionByName(t, i, a, u) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Q(this, void 0, void 0, function* () {
              let s = { publisherName: t, extensionName: i },
                n = { reason: a, reasonCode: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "fb0da285-f23e-4b56-8b53-3ef5f9f6de66",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getPolicies(t) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Q(this, void 0, void 0, function* () {
              let u = { userId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "e5cc8c09-407b-4867-8319-2ae3338cbf6f",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  pg.TypeInfo.UserExtensionPolicy,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      resolveRequest(t, i, a, u, l) {
        return Q(this, void 0, void 0, function* () {
          if (l == null)
            throw new TypeError("state can not be null or undefined");
          return new Promise((r, s) =>
            Q(this, void 0, void 0, function* () {
              let n = { publisherName: i, extensionName: a, requesterId: u },
                o = { state: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "aa93e1f3-511c-4364-8b9c-eb98818f2e0b",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getRequests() {
        return Q(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            Q(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "216b978f-b164-424e-ada2-b77561e842b7",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(
                  s.result,
                  gt.TypeInfo.RequestedExtension,
                  !0
                );
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      resolveAllRequests(t, i, a, u) {
        return Q(this, void 0, void 0, function* () {
          if (u == null)
            throw new TypeError("state can not be null or undefined");
          return new Promise((l, r) =>
            Q(this, void 0, void 0, function* () {
              let s = { publisherName: i, extensionName: a },
                n = { state: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "ba93e1f3-511c-4364-8b9c-eb98818f2e0b",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      deleteRequest(t, i) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Q(this, void 0, void 0, function* () {
              let l = { publisherName: t, extensionName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "f5afca1e-a728-4294-aa2d-4af0173431b5",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      requestExtension(t, i, a) {
        return Q(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Q(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "f5afca1e-a728-4294-aa2d-4af0173431b5",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, a, o);
                let d = this.formatResponse(
                  p.result,
                  gt.TypeInfo.RequestedExtension,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getToken() {
        return Q(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            Q(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "ExtensionManagement",
                    "3a2e24ed-1d6f-4cb2-9f3b-45a96bbfaf50",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !1);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
    };
  ds.RESOURCE_AREA_ID = "6c2b0933-3600-42ae-bf8b-93d4f7e83594";
  Br.ExtensionManagementApi = ds;
});
var Pd = x((Et) => {
  "use strict";
  Object.defineProperty(Et, "__esModule", { value: !0 });
  var dg;
  (function (e) {
    (e[(e.Undefined = -1)] = "Undefined"),
      (e[(e.Disabled = 0)] = "Disabled"),
      (e[(e.Enabled = 1)] = "Enabled");
  })(
    (dg =
      Et.ContributedFeatureEnabledValue ||
      (Et.ContributedFeatureEnabledValue = {}))
  );
  Et.TypeInfo = {
    ContributedFeatureEnabledValue: {
      enumValues: { undefined: -1, disabled: 0, enabled: 1 },
    },
    ContributedFeatureState: {},
    ContributedFeatureStateQuery: {},
  };
  Et.TypeInfo.ContributedFeatureState.fields = {
    state: { enumType: Et.TypeInfo.ContributedFeatureEnabledValue },
  };
  Et.TypeInfo.ContributedFeatureStateQuery.fields = {
    featureStates: {
      isDictionary: !0,
      dictionaryValueTypeInfo: Et.TypeInfo.ContributedFeatureState,
    },
  };
});
var Cd = x((Mr) => {
  "use strict";
  var Ne =
    (Mr && Mr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Mr, "__esModule", { value: !0 });
  var cg = qe(),
    mi = Pd(),
    Da = class extends cg.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-FeatureManagement-api", a);
      }
      getFeature(t) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Ne(this, void 0, void 0, function* () {
              let u = { featureId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "c4209f25-7a27-41dd-9f04-06080c7b6afd",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getFeatures(t) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Ne(this, void 0, void 0, function* () {
              let u = {},
                l = { targetContributionId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "c4209f25-7a27-41dd-9f04-06080c7b6afd",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getFeatureState(t, i) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ne(this, void 0, void 0, function* () {
              let l = { featureId: t, userScope: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "98911314-3f9b-4eaf-80e8-83900d8e85d9",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  mi.TypeInfo.ContributedFeatureState,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      setFeatureState(t, i, a, u, l) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            Ne(this, void 0, void 0, function* () {
              let n = { featureId: i, userScope: a },
                o = { reason: u, reasonCode: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "98911314-3f9b-4eaf-80e8-83900d8e85d9",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(
                  f.result,
                  mi.TypeInfo.ContributedFeatureState,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getFeatureStateForScope(t, i, a, u) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Ne(this, void 0, void 0, function* () {
              let s = {
                featureId: t,
                userScope: i,
                scopeName: a,
                scopeValue: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "dd291e43-aa9f-4cee-8465-a93c78e414a4",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  mi.TypeInfo.ContributedFeatureState,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      setFeatureStateForScope(t, i, a, u, l, r, s) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            Ne(this, void 0, void 0, function* () {
              let p = {
                  featureId: i,
                  userScope: a,
                  scopeName: u,
                  scopeValue: l,
                },
                d = { reason: r, reasonCode: s };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "dd291e43-aa9f-4cee-8465-a93c78e414a4",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.update(f, t, h);
                let q = this.formatResponse(
                  T.result,
                  mi.TypeInfo.ContributedFeatureState,
                  !1
                );
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      queryFeatureStates(t) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Ne(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "2b4486ad-122b-400c-ae65-17b6672c1f9d",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  mi.TypeInfo.ContributedFeatureStateQuery,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      queryFeatureStatesForDefaultScope(t, i) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ne(this, void 0, void 0, function* () {
              let l = { userScope: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "3f810f28-03e2-4239-b0bc-788add3005e5",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  mi.TypeInfo.ContributedFeatureStateQuery,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      queryFeatureStatesForNamedScope(t, i, a, u) {
        return Ne(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Ne(this, void 0, void 0, function* () {
              let s = { userScope: i, scopeName: a, scopeValue: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "FeatureManagement",
                    "f29e997b-c2da-4d15-8380-765788a1a74c",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  mi.TypeInfo.ContributedFeatureStateQuery,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
    };
  Mr.FeatureManagementApi = Da;
});
var wa = x((Ue) => {
  "use strict";
  Object.defineProperty(Ue, "__esModule", { value: !0 });
  var fg;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.GZip = 1)] = "GZip");
  })((fg = Ue.BlobCompressionType || (Ue.BlobCompressionType = {})));
  var hg;
  (function (e) {
    (e[(e.Created = 1)] = "Created"),
      (e[(e.PendingUpload = 2)] = "PendingUpload");
  })((hg = Ue.ContainerItemStatus || (Ue.ContainerItemStatus = {})));
  var yg;
  (function (e) {
    (e[(e.Any = 0)] = "Any"),
      (e[(e.Folder = 1)] = "Folder"),
      (e[(e.File = 2)] = "File");
  })((yg = Ue.ContainerItemType || (Ue.ContainerItemType = {})));
  var vg;
  (function (e) {
    e[(e.None = 0)] = "None";
  })((vg = Ue.ContainerOptions || (Ue.ContainerOptions = {})));
  Ue.TypeInfo = {
    BlobCompressionType: { enumValues: { none: 0, gZip: 1 } },
    ContainerItemBlobReference: {},
    ContainerItemStatus: { enumValues: { created: 1, pendingUpload: 2 } },
    ContainerItemType: { enumValues: { any: 0, folder: 1, file: 2 } },
    ContainerOptions: { enumValues: { none: 0 } },
    FileContainer: {},
    FileContainerItem: {},
  };
  Ue.TypeInfo.ContainerItemBlobReference.fields = {
    compressionType: { enumType: Ue.TypeInfo.BlobCompressionType },
  };
  Ue.TypeInfo.FileContainer.fields = {
    dateCreated: { isDate: !0 },
    options: { enumType: Ue.TypeInfo.ContainerOptions },
  };
  Ue.TypeInfo.FileContainerItem.fields = {
    blobMetadata: { typeInfo: Ue.TypeInfo.ContainerItemBlobReference },
    dateCreated: { isDate: !0 },
    dateLastModified: { isDate: !0 },
    itemType: { enumType: Ue.TypeInfo.ContainerItemType },
    status: { enumType: Ue.TypeInfo.ContainerItemStatus },
  };
});
var jd = x((xr) => {
  "use strict";
  var Qt =
    (xr && xr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(xr, "__esModule", { value: !0 });
  var mg = qe(),
    qa = wa(),
    Pa = class extends mg.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-FileContainer-api", a);
      }
      createItems(t, i, a) {
        return Qt(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Qt(this, void 0, void 0, function* () {
              let r = { containerId: i },
                s = { scope: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Container",
                    "e4f5c81e-e250-447b-9fef-bd48471bea5e",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  qa.TypeInfo.FileContainerItem,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      deleteItem(t, i, a) {
        return Qt(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("itemPath can not be null or undefined");
          return new Promise((u, l) =>
            Qt(this, void 0, void 0, function* () {
              let r = { containerId: t },
                s = { itemPath: i, scope: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Container",
                    "e4f5c81e-e250-447b-9fef-bd48471bea5e",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getContainers(t, i) {
        return Qt(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Qt(this, void 0, void 0, function* () {
              let l = {},
                r = { scope: t, artifactUris: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Container",
                    "e4f5c81e-e250-447b-9fef-bd48471bea5e",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  qa.TypeInfo.FileContainer,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getItems(t, i, a, u, l, r, s, n, o, p, d) {
        return Qt(this, void 0, void 0, function* () {
          return new Promise((c, f) =>
            Qt(this, void 0, void 0, function* () {
              let h = { containerId: t },
                T = {
                  scope: i,
                  itemPath: a,
                  metadata: u,
                  $format: l,
                  downloadFileName: r,
                  includeDownloadTickets: s,
                  isShallow: n,
                  ignoreRequestedMediaType: o,
                  includeBlobMetadata: p,
                  saveAbsolutePath: d,
                };
              try {
                let q = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Container",
                    "e4f5c81e-e250-447b-9fef-bd48471bea5e",
                    h,
                    T
                  ),
                  j = q.requestUrl,
                  F = this.createRequestOptions(
                    "application/json",
                    q.apiVersion
                  ),
                  U;
                U = yield this.rest.get(j, F);
                let z = this.formatResponse(
                  U.result,
                  qa.TypeInfo.FileContainerItem,
                  !0
                );
                c(z);
              } catch (q) {
                f(q);
              }
            })
          );
        });
      }
    };
  xr.FileContainerApiBase = Pa;
});
var kd = x((_r) => {
  "use strict";
  var Ad =
    (_r && _r.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(_r, "__esModule", { value: !0 });
  var Ud = require("stream"),
    gg = require("zlib"),
    Ig = as(),
    Tg = jd(),
    Od = wa(),
    Ca = class extends Tg.FileContainerApiBase {
      constructor(t, i, a) {
        super(t, i, a);
      }
      getItem(t, i, a, u) {
        return Ad(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Ad(this, void 0, void 0, function* () {
              let s = { containerId: t },
                n = {
                  scope: i,
                  itemPath: a,
                  $format: "OctetStream",
                  downloadFileName: u,
                };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "4.0-preview.4",
                    "Container",
                    "e4f5c81e-e250-447b-9fef-bd48471bea5e",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/octet-stream",
                    o.apiVersion
                  ),
                  c = yield this.http.get(p),
                  f = {},
                  h = c.message.statusCode;
                if (
                  ((f.statusCode = h),
                  h == Ig.HttpCodes.NotFound && l(f),
                  h > 299)
                ) {
                  let T,
                    q = yield c.readBody(),
                    j;
                  q &&
                    q.length > 0 &&
                    ((j = JSON.parse(q)),
                    d && d.responseProcessor
                      ? (f.result = d.responseProcessor(j))
                      : (f.result = j)),
                    j && j.message
                      ? (T = j.message)
                      : (T = "Failed request: (" + h + ") " + c.message.url),
                    r(new Error(T));
                } else {
                  if (c.message.headers["content-encoding"] === "gzip") {
                    let T = gg.createGunzip();
                    c.message.pipe(T), (f.result = T);
                  } else f.result = c.message;
                  l(f);
                }
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createItem(t, i, a, u, l, r) {
        return new Promise((s, n) => {
          let o = new St(this, i, a, u, l, r);
          o.on("finish", () => {
            s(o.getItem());
          }),
            t.pipe(o);
        });
      }
      _createItem(t, i, a, u, l, r) {
        var s = { containerId: a },
          n = { itemPath: u, scope: l };
        (t = t || {}),
          (t["Content-Type"] = ""),
          this.vsoClient
            .getVersioningData(
              "4.0-preview.4",
              "Container",
              "e4f5c81e-e250-447b-9fef-bd48471bea5e",
              s,
              n
            )
            .then(
              (o) => {
                var p = o.requestUrl,
                  d = {
                    responseTypeMetadata: Od.TypeInfo.FileContainerItem,
                    responseIsCollection: !1,
                  };
                let c = this.createRequestOptions(
                  "application/octet-stream",
                  o.apiVersion
                );
                (c.additionalHeaders = t),
                  this.rest
                    .uploadStream("PUT", p, i, c)
                    .then((f) => {
                      let h = this.formatResponse(
                        f.result,
                        Od.TypeInfo.FileContainerItem,
                        !1
                      );
                      r(null, f.statusCode, h);
                    })
                    .catch((f) => {
                      r(f, f.statusCode, null);
                    });
              },
              (o) => {
                r(o, o.statusCode, null);
              }
            );
      }
    };
  _r.FileContainerApi = Ca;
  var St = class extends Ud.Writable {
    constructor(t, i, a, u, l, r) {
      super(),
        (this._buffer = new Buffer(St.ChunkSize)),
        (this._length = 0),
        (this._startRange = 0),
        (this._bytesToSend = 0),
        (this._totalReceived = 0),
        (this._api = t),
        (this._options = r || {}),
        (this._uncompressedLength = i),
        (this._containerId = a),
        (this._itemPath = u),
        (this._scope = l),
        (this._bytesToSend = this._options.isGzipped
          ? this._options.compressedLength
          : i);
    }
    _write(t, i, a) {
      let u = t;
      if (!u) {
        this._length == 0 ? a() : this._sendChunk(a);
        return;
      }
      let l = null;
      if (this._length + u.length > St.ChunkSize) {
        let r = u.length - (St.ChunkSize - this._length);
        u.copy(this._buffer, this._length, 0, r),
          (this._length += r),
          (l = u.slice(r));
      } else
        u.copy(this._buffer, this._length, 0, u.length),
          (this._length += u.length);
      (this._totalReceived += u.length),
        this._length >= St.ChunkSize || this._totalReceived >= this._bytesToSend
          ? this._sendChunk(a, l)
          : a();
    }
    _sendChunk(t, i) {
      let a = this._startRange + this._length,
        u = {
          "Content-Range":
            "bytes " +
            this._startRange +
            "-" +
            (a - 1) +
            "/" +
            this._bytesToSend,
          "Content-Length": this._length,
        };
      this._options.isGzipped &&
        ((u["Accept-Encoding"] = "gzip"),
        (u["Content-Encoding"] = "gzip"),
        (u["x-tfs-filelength"] = this._uncompressedLength)),
        (this._startRange = a),
        this._api._createItem(
          u,
          new ja(this._buffer, this._length),
          this._containerId,
          this._itemPath,
          this._scope,
          (l, r, s) => {
            i
              ? ((this._length = i.length), i.copy(this._buffer))
              : (this._length = 0),
              (this._item = s),
              t(l);
          }
        );
    }
    getItem() {
      return this._item;
    }
  };
  St.ChunkSize = 16 * 1024 * 1024;
  var ja = class extends Ud.Readable {
    constructor(t, i) {
      super(),
        (this._position = 0),
        (this._length = 0),
        (this._buffer = t),
        (this._length = i);
    }
    _read(t) {
      if (this._position >= this._length) {
        this.push(null);
        return;
      }
      let i = Math.min(this._position + t, this._length);
      this.push(this._buffer.slice(this._position, i)), (this._position = i);
    }
  };
});
var Ed = x((Gr) => {
  "use strict";
  var cs =
    (Gr && Gr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Gr, "__esModule", { value: !0 });
  var Rg = qe(),
    fs = Nr(),
    Aa = class extends Rg.ClientApiBase {
      constructor(t, i, a, u) {
        super(t, i, a, u);
      }
      createExtensionJson(t) {
        return new Promise((i, a) =>
          cs(this, void 0, void 0, function* () {
            let u = {};
            try {
              let l = yield this.vsoClient.getVersioningData(
                  "3.1-preview.1",
                  "gallery",
                  "a41192c8-9525-4b58-bc86-179fa549d80d",
                  u
                ),
                r = l.requestUrl,
                s = this.createRequestOptions("application/json", l.apiVersion),
                n;
              n = yield this.rest.create(r, t, s);
              let o = this.formatResponse(
                n.result,
                fs.TypeInfo.PublishedExtension,
                !1
              );
              i(o);
            } catch (l) {
              a(l);
            }
          })
        );
      }
      updateExtensionByIdJson(t, i) {
        return new Promise((a, u) =>
          cs(this, void 0, void 0, function* () {
            let l = { extensionId: i };
            try {
              let r = yield this.vsoClient.getVersioningData(
                  "3.1-preview.1",
                  "gallery",
                  "a41192c8-9525-4b58-bc86-179fa549d80d",
                  l
                ),
                s = r.requestUrl,
                n = this.createRequestOptions("application/json", r.apiVersion),
                o;
              o = yield this.rest.replace(s, t, n);
              let p = this.formatResponse(
                o.result,
                fs.TypeInfo.PublishedExtension,
                !1
              );
              a(p);
            } catch (r) {
              u(r);
            }
          })
        );
      }
      createExtensionWithPublisherJson(t, i) {
        return new Promise((a, u) =>
          cs(this, void 0, void 0, function* () {
            let l = { publisherName: i };
            try {
              let r = yield this.vsoClient.getVersioningData(
                  "3.1-preview.1",
                  "gallery",
                  "e11ea35a-16fe-4b80-ab11-c4cab88a0966",
                  l
                ),
                s = r.requestUrl,
                n = this.createRequestOptions("application/json", r.apiVersion),
                o;
              o = yield this.rest.create(s, t, n);
              let p = this.formatResponse(
                o.result,
                fs.TypeInfo.PublishedExtension,
                !1
              );
              a(p);
            } catch (r) {
              u(r);
            }
          })
        );
      }
      updateExtensionJson(t, i, a) {
        return new Promise((u, l) =>
          cs(this, void 0, void 0, function* () {
            let r = { publisherName: i, extensionName: a };
            try {
              let s = yield this.vsoClient.getVersioningData(
                  "3.1-preview.1",
                  "gallery",
                  "e11ea35a-16fe-4b80-ab11-c4cab88a0966",
                  r
                ),
                n = s.requestUrl,
                o = this.createRequestOptions("application/json", s.apiVersion),
                p;
              p = yield this.rest.replace(n, t, o);
              let d = this.formatResponse(
                p.result,
                fs.TypeInfo.PublishedExtension,
                !1
              );
              u(d);
            } catch (s) {
              l(s);
            }
          })
        );
      }
    };
  Gr.GalleryCompatHttpClientBase = Aa;
});
var Sd = x((Fr) => {
  "use strict";
  var P =
    (Fr && Fr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Fr, "__esModule", { value: !0 });
  var Vg = Ed(),
    le = Nr(),
    hs = class extends Vg.GalleryCompatHttpClientBase {
      constructor(t, i, a) {
        super(t, i, "node-Gallery-api", a);
      }
      shareExtensionById(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { extensionId: t, accountName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "1f19631b-a0b4-4a03-89c2-d79785d24360",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, null, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      unshareExtensionById(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { extensionId: t, accountName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "1f19631b-a0b4-4a03-89c2-d79785d24360",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      shareExtension(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i, accountName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "a1e66d8f-f5de-4d16-8309-91a4e015ee46",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, null, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      unshareExtension(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i, accountName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "a1e66d8f-f5de-4d16-8309-91a4e015ee46",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getAcquisitionOptions(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError(
              "installationTarget can not be null or undefined"
            );
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { itemId: t },
                n = {
                  installationTarget: i,
                  testCommerce: a,
                  isFreeOrTrialInstall: u,
                };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "9d0a0105-075e-4760-aa15-8bcf54d1bd7d",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  le.TypeInfo.AcquisitionOptions,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      requestAcquisition(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "3adb1f2d-e328-446e-be73-9f6d98071c45",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  le.TypeInfo.ExtensionAcquisitionRequest,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getAssetByName(t, i, a, u, l, r, s, n) {
        return P(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            P(this, void 0, void 0, function* () {
              let d = {
                  publisherName: i,
                  extensionName: a,
                  version: u,
                  assetType: l,
                },
                c = { accountToken: r, acceptDefault: s };
              (t = t || {}),
                (t["X-Market-AccountToken"] = "accountTokenHeader");
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "7529171f-a002-4180-93ba-685f358a0482",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = f.apiVersion,
                  q = this.createAcceptHeader("application/octet-stream", T);
                o((yield this.http.get(h, { Accept: q })).message);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getAsset(t, i, a, u, l, r, s) {
        return P(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            P(this, void 0, void 0, function* () {
              let p = { extensionId: i, version: a, assetType: u },
                d = { accountToken: l, acceptDefault: r };
              (t = t || {}),
                (t["X-Market-AccountToken"] = "accountTokenHeader");
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "5d545f3d-ef47-488b-8be3-f5ee1517856c",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = c.apiVersion,
                  T = this.createAcceptHeader("application/octet-stream", h);
                n((yield this.http.get(f, { Accept: T })).message);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      getAssetAuthenticated(t, i, a, u, l, r, s) {
        return P(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            P(this, void 0, void 0, function* () {
              let p = {
                  publisherName: i,
                  extensionName: a,
                  version: u,
                  assetType: l,
                },
                d = { accountToken: r };
              (t = t || {}),
                (t["X-Market-AccountToken"] = "accountTokenHeader");
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "506aff36-2622-4f70-8063-77cce6366d20",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = c.apiVersion,
                  T = this.createAcceptHeader("application/octet-stream", h);
                n((yield this.http.get(f, { Accept: T })).message);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      associateAzurePublisher(t, i) {
        return P(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError(
              "azurePublisherId can not be null or undefined"
            );
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { publisherName: t },
                r = { azurePublisherId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "efd202a6-9d87-4ebc-9229-d2b8ae2fdb6d",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, null, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      queryAssociatedAzurePublisher(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = { publisherName: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "efd202a6-9d87-4ebc-9229-d2b8ae2fdb6d",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getCategories(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {},
                l = { languages: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "e0a5a71e-3ac3-43a0-ae7d-0bb5c3046a2a",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getCategoryDetails(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { categoryName: t },
                s = { languages: i, product: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "75d3c04d-84d2-4973-acd2-22627587dabc",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getCategoryTree(t, i, a, u, l, r, s, n) {
        return P(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            P(this, void 0, void 0, function* () {
              let d = { product: t, categoryId: i },
                c = {
                  lcid: a,
                  source: u,
                  productVersion: l,
                  skus: r,
                  subSkus: s,
                  productArchitecture: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "1102bb42-82b0-4955-8d8a-435d6b4cedd3",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(q.result, null, !1);
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getRootCategories(t, i, a, u, l, r) {
        return P(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            P(this, void 0, void 0, function* () {
              let o = { product: t },
                p = {
                  lcid: i,
                  source: a,
                  productVersion: u,
                  skus: l,
                  subSkus: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "31fba831-35b2-46f6-a641-d05de5a877d8",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getCertificate(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i, version: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "e905ad6a-3f1f-4d08-9f6d-7d357ff8b7d0",
                    r
                  ),
                  n = s.requestUrl,
                  o = s.apiVersion,
                  p = this.createAcceptHeader("application/octet-stream", o);
                u((yield this.http.get(n, { Accept: p })).message);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getContentVerificationLog(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { publisherName: t, extensionName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "c0f1c7c4-3557-4ffb-b774-1e48c4865e99",
                    l
                  ),
                  s = r.requestUrl,
                  n = r.apiVersion,
                  o = this.createAcceptHeader("application/octet-stream", n);
                a((yield this.http.get(s, { Accept: o })).message);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      createSupportRequest(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "8eded385-026a-4c15-b810-b8eb402771f1",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      createDraftForEditExtension(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { publisherName: t, extensionName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "02b33873-4e61-496e-83a2-59d1df46b7d8",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, null, n);
                let p = this.formatResponse(
                  o.result,
                  le.TypeInfo.ExtensionDraft,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      performEditExtensionDraftOperation(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { publisherName: i, extensionName: a, draftId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "02b33873-4e61-496e-83a2-59d1df46b7d8",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  le.TypeInfo.ExtensionDraft,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updatePayloadInDraftForEditExtension(t, i, a, u, l, r) {
        return P(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            P(this, void 0, void 0, function* () {
              let o = { publisherName: a, extensionName: u, draftId: l };
              (t = t || {}),
                (t["Content-Type"] = "application/octet-stream"),
                (t["X-Market-UploadFileName"] = "fileName");
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "02b33873-4e61-496e-83a2-59d1df46b7d8",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  );
                c.additionalHeaders = t;
                let f;
                f = yield this.rest.uploadStream("PUT", d, i, c);
                let h = this.formatResponse(
                  f.result,
                  le.TypeInfo.ExtensionDraft,
                  !1
                );
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      addAssetForEditExtensionDraft(t, i, a, u, l, r) {
        return P(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            P(this, void 0, void 0, function* () {
              let o = {
                publisherName: a,
                extensionName: u,
                draftId: l,
                assetType: r,
              };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "f1db9c47-6619-4998-a7e5-d7f9f41a4617",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  );
                c.additionalHeaders = t;
                let f;
                f = yield this.rest.uploadStream("PUT", d, i, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      createDraftForNewExtension(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: a };
              (t = t || {}),
                (t["Content-Type"] = "application/octet-stream"),
                (t["X-Market-UploadFileProduct"] = "product"),
                (t["X-Market-UploadFileName"] = "fileName");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "b3ab127d-ebb9-4d22-b611-4e09593c8d79",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                c = yield this.rest.uploadStream("POST", p, i, d);
                let f = this.formatResponse(
                  c.result,
                  le.TypeInfo.ExtensionDraft,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      performNewExtensionDraftOperation(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: i, draftId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "b3ab127d-ebb9-4d22-b611-4e09593c8d79",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  le.TypeInfo.ExtensionDraft,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updatePayloadInDraftForNewExtension(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: a, draftId: u };
              (t = t || {}),
                (t["Content-Type"] = "application/octet-stream"),
                (t["X-Market-UploadFileName"] = "fileName");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "b3ab127d-ebb9-4d22-b611-4e09593c8d79",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                c = yield this.rest.uploadStream("PUT", p, i, d);
                let f = this.formatResponse(
                  c.result,
                  le.TypeInfo.ExtensionDraft,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      addAssetForNewExtensionDraft(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: a, draftId: u, assetType: l };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "88c0b1c8-b4f1-498a-9b2a-8446ef9f32e7",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                c = yield this.rest.uploadStream("PUT", p, i, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getAssetFromEditExtensionDraft(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          if (u == null)
            throw new TypeError("extensionName can not be null or undefined");
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { publisherName: t, draftId: i, assetType: a },
                n = { extensionName: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "88c0b1c8-b4f1-498a-9b2a-8446ef9f32e7",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = o.apiVersion,
                  c = this.createAcceptHeader("application/octet-stream", d);
                l((yield this.http.get(p, { Accept: c })).message);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getAssetFromNewExtensionDraft(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: t, draftId: i, assetType: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "88c0b1c8-b4f1-498a-9b2a-8446ef9f32e7",
                    r
                  ),
                  n = s.requestUrl,
                  o = s.apiVersion,
                  p = this.createAcceptHeader("application/octet-stream", o);
                u((yield this.http.get(n, { Accept: p })).message);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getExtensionEvents(t, i, a, u, l, r) {
        return P(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            P(this, void 0, void 0, function* () {
              let o = { publisherName: t, extensionName: i },
                p = { count: a, afterDate: u, include: l, includeProperty: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "3d13c499-2168-4d06-bef4-14aba185dcd5",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  le.TypeInfo.ExtensionEvents,
                  !1
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      publishExtensionEvents(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "0bf2bd3a-70e0-4d5d-8bf7-bd4a9c2ab6e7",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      queryExtensions(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = {},
                n = { accountToken: a };
              (t = t || {}),
                (t["X-Market-AccountToken"] = "accountTokenHeader");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "eb9d5ee1-6d43-456b-b80e-8a96fbc014b6",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                c = yield this.rest.create(p, i, d);
                let f = this.formatResponse(
                  c.result,
                  le.TypeInfo.ExtensionQueryResult,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createExtension(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = {},
                n = { extensionType: a, reCaptchaToken: u };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "a41192c8-9525-4b58-bc86-179fa549d80d",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                c = yield this.rest.uploadStream("POST", p, i, d);
                let f = this.formatResponse(
                  c.result,
                  le.TypeInfo.PublishedExtension,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      deleteExtensionById(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { extensionId: t },
                r = { version: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "a41192c8-9525-4b58-bc86-179fa549d80d",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getExtensionById(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { extensionId: t },
                s = { version: i, flags: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "a41192c8-9525-4b58-bc86-179fa549d80d",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  le.TypeInfo.PublishedExtension,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateExtensionById(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { extensionId: t },
                r = { reCaptchaToken: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "a41192c8-9525-4b58-bc86-179fa549d80d",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, null, o);
                let d = this.formatResponse(
                  p.result,
                  le.TypeInfo.PublishedExtension,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      createExtensionWithPublisher(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: a },
                o = { extensionType: u, reCaptchaToken: l };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "e11ea35a-16fe-4b80-ab11-c4cab88a0966",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  );
                c.additionalHeaders = t;
                let f;
                f = yield this.rest.uploadStream("POST", d, i, c);
                let h = this.formatResponse(
                  f.result,
                  le.TypeInfo.PublishedExtension,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      deleteExtension(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i },
                s = { version: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "e11ea35a-16fe-4b80-ab11-c4cab88a0966",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getExtension(t, i, a, u, l, r, s) {
        return P(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            P(this, void 0, void 0, function* () {
              let p = { publisherName: i, extensionName: a },
                d = { version: u, flags: l, accountToken: r };
              (t = t || {}),
                (t["X-Market-AccountToken"] = "accountTokenHeader");
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "e11ea35a-16fe-4b80-ab11-c4cab88a0966",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  );
                h.additionalHeaders = t;
                let T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(
                  T.result,
                  le.TypeInfo.PublishedExtension,
                  !1
                );
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      updateExtension(t, i, a, u, l, r, s) {
        return P(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            P(this, void 0, void 0, function* () {
              let p = { publisherName: a, extensionName: u },
                d = {
                  extensionType: l,
                  reCaptchaToken: r,
                  bypassScopeCheck: s,
                };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "e11ea35a-16fe-4b80-ab11-c4cab88a0966",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  );
                h.additionalHeaders = t;
                let T;
                T = yield this.rest.uploadStream("PUT", f, i, h);
                let q = this.formatResponse(
                  T.result,
                  le.TypeInfo.PublishedExtension,
                  !1
                );
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      updateExtensionProperties(t, i, a) {
        return P(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("flags can not be null or undefined");
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i },
                s = { flags: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "gallery",
                    "e11ea35a-16fe-4b80-ab11-c4cab88a0966",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, null, p);
                let c = this.formatResponse(
                  d.result,
                  le.TypeInfo.PublishedExtension,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      shareExtensionWithHost(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = {
                publisherName: t,
                extensionName: i,
                hostType: a,
                hostName: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "328a3af8-d124-46e9-9483-01690cd415b9",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, null, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      unshareExtensionWithHost(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = {
                publisherName: t,
                extensionName: i,
                hostType: a,
                hostName: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "328a3af8-d124-46e9-9483-01690cd415b9",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      extensionValidator(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "05e8a5e1-8c59-4c2c-8856-0ff087d1a844",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      sendNotifications(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "eab39817-413c-4602-a49f-07ad00844980",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getPackage(t, i, a, u, l, r, s) {
        return P(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            P(this, void 0, void 0, function* () {
              let p = { publisherName: i, extensionName: a, version: u },
                d = { accountToken: l, acceptDefault: r };
              (t = t || {}),
                (t["X-Market-AccountToken"] = "accountTokenHeader");
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "7cb576f8-1cae-4c4b-b7b1-e4af5759e965",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = c.apiVersion,
                  T = this.createAcceptHeader("application/octet-stream", h);
                n((yield this.http.get(f, { Accept: T })).message);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      getAssetWithToken(t, i, a, u, l, r, s, n, o) {
        return P(this, void 0, void 0, function* () {
          return new Promise((p, d) =>
            P(this, void 0, void 0, function* () {
              let c = {
                  publisherName: i,
                  extensionName: a,
                  version: u,
                  assetType: l,
                  assetToken: r,
                },
                f = { accountToken: s, acceptDefault: n };
              (t = t || {}),
                (t["X-Market-AccountToken"] = "accountTokenHeader");
              try {
                let h = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "364415a1-0077-4a41-a7a0-06edd4497492",
                    c,
                    f
                  ),
                  T = h.requestUrl,
                  q = h.apiVersion,
                  j = this.createAcceptHeader("application/octet-stream", q);
                p((yield this.http.get(T, { Accept: j })).message);
              } catch (h) {
                d(h);
              }
            })
          );
        });
      }
      deletePublisherAsset(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { publisherName: t },
                r = { assetType: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "21143299-34f9-4c62-8ca8-53da691192f9",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getPublisherAsset(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { publisherName: t },
                r = { assetType: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "21143299-34f9-4c62-8ca8-53da691192f9",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = s.apiVersion,
                  p = this.createAcceptHeader("application/octet-stream", o);
                a((yield this.http.get(n, { Accept: p })).message);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      updatePublisherAsset(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: a },
                o = { assetType: u };
              (t = t || {}),
                (t["Content-Type"] = "application/octet-stream"),
                (t["X-Market-UploadFileName"] = "fileName");
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "21143299-34f9-4c62-8ca8-53da691192f9",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  );
                c.additionalHeaders = t;
                let f;
                f = yield this.rest.uploadStream("PUT", d, i, c);
                let h = this.formatResponse(f.result, null, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      fetchDomainToken(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = { publisherName: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "67a609ef-fa74-4b52-8664-78d76f7b3634",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      verifyDomainToken(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = { publisherName: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "67a609ef-fa74-4b52-8664-78d76f7b3634",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.replace(r, null, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      queryPublishers(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "2ad6ee0a-b53f-4034-9d1d-d009fda1212e",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  le.TypeInfo.PublisherQueryResult,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      createPublisher(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "4ddec66a-e4f6-4f5d-999e-9e77710d7ff4",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  le.TypeInfo.Publisher,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deletePublisher(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = { publisherName: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "4ddec66a-e4f6-4f5d-999e-9e77710d7ff4",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getPublisher(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { publisherName: t },
                r = { flags: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "4ddec66a-e4f6-4f5d-999e-9e77710d7ff4",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  le.TypeInfo.Publisher,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      updatePublisher(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { publisherName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "4ddec66a-e4f6-4f5d-999e-9e77710d7ff4",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  le.TypeInfo.Publisher,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updatePublisherMembers(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: i },
                s = { limitToCallerIdentityDomain: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "4ddec66a-e4f6-4f5d-999e-9e77710d7ff4",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  le.TypeInfo.PublisherRoleAssignment,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getPublisherWithoutToken(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = { publisherName: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "215a2ed8-458a-4850-ad5a-45f1dabc3461",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  le.TypeInfo.Publisher,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getQuestions(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: t, extensionName: i },
                o = { count: a, page: u, afterDate: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "c010d03d-812c-4ade-ae07-c1862475eda5",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  le.TypeInfo.QuestionsResult,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      reportQuestion(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { pubName: i, extName: a, questionId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "784910cd-254a-494d-898b-0728549b2f10",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, le.TypeInfo.Concern, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createQuestion(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: i, extensionName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "6d1d9741-eca8-4701-a3a5-235afc82dfa4",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, le.TypeInfo.Question, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteQuestion(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i, questionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "6d1d9741-eca8-4701-a3a5-235afc82dfa4",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateQuestion(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { publisherName: i, extensionName: a, questionId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "6d1d9741-eca8-4701-a3a5-235afc82dfa4",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, le.TypeInfo.Question, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createResponse(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { publisherName: i, extensionName: a, questionId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "7f8ae5e0-46b0-438f-b2e8-13e8513517bd",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, le.TypeInfo.Response, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      deleteResponse(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = {
                publisherName: t,
                extensionName: i,
                questionId: a,
                responseId: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "7f8ae5e0-46b0-438f-b2e8-13e8513517bd",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateResponse(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = {
                publisherName: i,
                extensionName: a,
                questionId: u,
                responseId: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "7f8ae5e0-46b0-438f-b2e8-13e8513517bd",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, le.TypeInfo.Response, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getExtensionReports(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: t, extensionName: i },
                o = { days: a, count: u, afterDate: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "79e0c74f-157f-437e-845f-74fbb4121d4c",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getReviews(t, i, a, u, l, r) {
        return P(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            P(this, void 0, void 0, function* () {
              let o = { publisherName: t, extensionName: i },
                p = { count: a, filterOptions: u, beforeDate: l, afterDate: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "5b3f819f-f247-42ad-8c00-dd9ab9ab246d",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  le.TypeInfo.ReviewsResult,
                  !1
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getReviewsSummary(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { pubName: t, extName: i },
                n = { beforeDate: a, afterDate: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "b7b44e21-209e-48f0-ae78-04727fc37d77",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createReview(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { pubName: i, extName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "e6e85b9d-aa70-40e6-aa28-d0fbf40b91a3",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, le.TypeInfo.Review, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteReview(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { pubName: t, extName: i, reviewId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "e6e85b9d-aa70-40e6-aa28-d0fbf40b91a3",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateReview(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { pubName: i, extName: a, reviewId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "e6e85b9d-aa70-40e6-aa28-d0fbf40b91a3",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  le.TypeInfo.ReviewPatch,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createCategory(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "476531a3-7024-4516-a76a-ed64d3008ad6",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getGalleryUserSettings(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { userScope: t, key: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "9b75ece3-7960-401c-848b-148ac01ca350",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      setGalleryUserSettings(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { userScope: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "9b75ece3-7960-401c-848b-148ac01ca350",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      generateKey(t, i) {
        return P(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            P(this, void 0, void 0, function* () {
              let l = { keyType: t },
                r = { expireCurrentSeconds: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "92ed5cf4-c38b-465a-9059-2f2fb7c624b5",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, null, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getSigningKey(t) {
        return P(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            P(this, void 0, void 0, function* () {
              let u = { keyType: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "92ed5cf4-c38b-465a-9059-2f2fb7c624b5",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateExtensionStatistics(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: i, extensionName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "a0ea3204-11e9-422d-a9ca-45851cc41400",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getExtensionDailyStats(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: t, extensionName: i },
                o = { days: a, aggregate: u, afterDate: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "ae06047e-51c5-4fb4-ab65-7be488544416",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  le.TypeInfo.ExtensionDailyStats,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getExtensionDailyStatsAnonymous(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { publisherName: t, extensionName: i, version: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "4fa7adb6-ca65-4075-a232-5f28323288ea",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  le.TypeInfo.ExtensionDailyStats,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      incrementExtensionDailyStat(t, i, a, u, l) {
        return P(this, void 0, void 0, function* () {
          if (u == null)
            throw new TypeError("statType can not be null or undefined");
          return new Promise((r, s) =>
            P(this, void 0, void 0, function* () {
              let n = { publisherName: t, extensionName: i, version: a },
                o = { statType: u, targetPlatform: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "4fa7adb6-ca65-4075-a232-5f28323288ea",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, null, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getVerificationLog(t, i, a, u) {
        return P(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            P(this, void 0, void 0, function* () {
              let s = { publisherName: t, extensionName: i, version: a },
                n = { targetPlatform: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "c5523abe-b843-437f-875b-5833064efe4d",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = o.apiVersion,
                  c = this.createAcceptHeader("application/octet-stream", d);
                l((yield this.http.get(p, { Accept: c })).message);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      updateVSCodeWebExtensionStatistics(t, i, a) {
        return P(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            P(this, void 0, void 0, function* () {
              let r = { itemName: t, version: i, statType: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "gallery",
                    "205c91a8-7841-4fd3-ae4f-5a745d5a8df5",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, null, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
    };
  hs.RESOURCE_AREA_ID = "69d21c00-f135-441b-b5ce-3626378e0819";
  Fr.GalleryApi = hs;
});
var Oa = x((Nt) => {
  "use strict";
  Object.defineProperty(Nt, "__esModule", { value: !0 });
  var bg;
  (function (e) {
    (e[(e.Queued = 0)] = "Queued"),
      (e[(e.Running = 1)] = "Running"),
      (e[(e.Approved = 2)] = "Approved"),
      (e[(e.Rejected = 3)] = "Rejected"),
      (e[(e.NotApplicable = 4)] = "NotApplicable"),
      (e[(e.Broken = 5)] = "Broken");
  })((bg = Nt.PolicyEvaluationStatus || (Nt.PolicyEvaluationStatus = {})));
  Nt.TypeInfo = {
    PolicyConfiguration: {},
    PolicyEvaluationRecord: {},
    PolicyEvaluationStatus: {
      enumValues: {
        queued: 0,
        running: 1,
        approved: 2,
        rejected: 3,
        notApplicable: 4,
        broken: 5,
      },
    },
  };
  Nt.TypeInfo.PolicyConfiguration.fields = { createdDate: { isDate: !0 } };
  Nt.TypeInfo.PolicyEvaluationRecord.fields = {
    completedDate: { isDate: !0 },
    configuration: { typeInfo: Nt.TypeInfo.PolicyConfiguration },
    startedDate: { isDate: !0 },
    status: { enumType: Nt.TypeInfo.PolicyEvaluationStatus },
  };
});
var Ua = x((y) => {
  "use strict";
  Object.defineProperty(y, "__esModule", { value: !0 });
  var Dg = Oa(),
    Jt = zi(),
    wg;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.Active = 1)] = "Active"),
      (e[(e.Fixed = 2)] = "Fixed"),
      (e[(e.WontFix = 3)] = "WontFix"),
      (e[(e.Closed = 4)] = "Closed"),
      (e[(e.ByDesign = 5)] = "ByDesign"),
      (e[(e.Pending = 6)] = "Pending");
  })((wg = y.CommentThreadStatus || (y.CommentThreadStatus = {})));
  var qg;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.Text = 1)] = "Text"),
      (e[(e.CodeChange = 2)] = "CodeChange"),
      (e[(e.System = 3)] = "System");
  })((qg = y.CommentType || (y.CommentType = {})));
  var Pg;
  (function (e) {
    (e[(e.Queued = 1)] = "Queued"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Completed = 3)] = "Completed"),
      (e[(e.Failed = 4)] = "Failed"),
      (e[(e.Abandoned = 5)] = "Abandoned");
  })((Pg = y.GitAsyncOperationStatus || (y.GitAsyncOperationStatus = {})));
  var Cg;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.InvalidRefName = 1)] = "InvalidRefName"),
      (e[(e.RefNameConflict = 2)] = "RefNameConflict"),
      (e[(e.CreateBranchPermissionRequired = 3)] =
        "CreateBranchPermissionRequired"),
      (e[(e.WritePermissionRequired = 4)] = "WritePermissionRequired"),
      (e[(e.TargetBranchDeleted = 5)] = "TargetBranchDeleted"),
      (e[(e.GitObjectTooLarge = 6)] = "GitObjectTooLarge"),
      (e[(e.OperationIndentityNotFound = 7)] = "OperationIndentityNotFound"),
      (e[(e.AsyncOperationNotFound = 8)] = "AsyncOperationNotFound"),
      (e[(e.Other = 9)] = "Other"),
      (e[(e.EmptyCommitterSignature = 10)] = "EmptyCommitterSignature");
  })(
    (Cg =
      y.GitAsyncRefOperationFailureStatus ||
      (y.GitAsyncRefOperationFailureStatus = {}))
  );
  var jg;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.AddAdd = 1)] = "AddAdd"),
      (e[(e.AddRename = 2)] = "AddRename"),
      (e[(e.DeleteEdit = 3)] = "DeleteEdit"),
      (e[(e.DeleteRename = 4)] = "DeleteRename"),
      (e[(e.DirectoryFile = 5)] = "DirectoryFile"),
      (e[(e.DirectoryChild = 6)] = "DirectoryChild"),
      (e[(e.EditDelete = 7)] = "EditDelete"),
      (e[(e.EditEdit = 8)] = "EditEdit"),
      (e[(e.FileDirectory = 9)] = "FileDirectory"),
      (e[(e.Rename1to2 = 10)] = "Rename1to2"),
      (e[(e.Rename2to1 = 11)] = "Rename2to1"),
      (e[(e.RenameAdd = 12)] = "RenameAdd"),
      (e[(e.RenameDelete = 13)] = "RenameDelete"),
      (e[(e.RenameRename = 14)] = "RenameRename");
  })((jg = y.GitConflictType || (y.GitConflictType = {})));
  var Ag;
  (function (e) {
    (e[(e.Succeeded = 0)] = "Succeeded"),
      (e[(e.BadRequest = 1)] = "BadRequest"),
      (e[(e.InvalidResolution = 2)] = "InvalidResolution"),
      (e[(e.UnsupportedConflictType = 3)] = "UnsupportedConflictType"),
      (e[(e.NotFound = 4)] = "NotFound");
  })((Ag = y.GitConflictUpdateStatus || (y.GitConflictUpdateStatus = {})));
  var Og;
  (function (e) {
    (e[(e.SimplifiedHistory = 0)] = "SimplifiedHistory"),
      (e[(e.FirstParent = 1)] = "FirstParent"),
      (e[(e.FullHistory = 2)] = "FullHistory"),
      (e[(e.FullHistorySimplifyMerges = 3)] = "FullHistorySimplifyMerges");
  })((Og = y.GitHistoryMode || (y.GitHistoryMode = {})));
  var Ug;
  (function (e) {
    (e[(e.Bad = 0)] = "Bad"),
      (e[(e.Commit = 1)] = "Commit"),
      (e[(e.Tree = 2)] = "Tree"),
      (e[(e.Blob = 3)] = "Blob"),
      (e[(e.Tag = 4)] = "Tag"),
      (e[(e.Ext2 = 5)] = "Ext2"),
      (e[(e.OfsDelta = 6)] = "OfsDelta"),
      (e[(e.RefDelta = 7)] = "RefDelta");
  })((Ug = y.GitObjectType || (y.GitObjectType = {})));
  var kg;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Edit = 1)] = "Edit"),
      (e[(e.Delete = 2)] = "Delete"),
      (e[(e.Add = 3)] = "Add"),
      (e[(e.Rename = 4)] = "Rename");
  })((kg = y.GitPathActions || (y.GitPathActions = {})));
  var Eg;
  (function (e) {
    (e[(e.NoFastForward = 1)] = "NoFastForward"),
      (e[(e.Squash = 2)] = "Squash"),
      (e[(e.Rebase = 3)] = "Rebase"),
      (e[(e.RebaseMerge = 4)] = "RebaseMerge");
  })(
    (Eg = y.GitPullRequestMergeStrategy || (y.GitPullRequestMergeStrategy = {}))
  );
  var Sg;
  (function (e) {
    (e[(e.NotSet = 0)] = "NotSet"),
      (e[(e.LastMergeCommit = 1)] = "LastMergeCommit"),
      (e[(e.Commit = 2)] = "Commit");
  })((Sg = y.GitPullRequestQueryType || (y.GitPullRequestQueryType = {})));
  var Ng;
  (function (e) {
    (e[(e.ChangeEntry = 0)] = "ChangeEntry"),
      (e[(e.Attachment = 1)] = "Attachment");
  })(
    (Ng =
      y.GitPullRequestReviewFileType || (y.GitPullRequestReviewFileType = {}))
  );
  var Bg;
  (function (e) {
    (e[(e.Exact = 0)] = "Exact"),
      (e[(e.StartsWith = 1)] = "StartsWith"),
      (e[(e.Contains = 2)] = "Contains");
  })((Bg = y.GitRefSearchType || (y.GitRefSearchType = {})));
  var Mg;
  (function (e) {
    (e[(e.BestEffort = 0)] = "BestEffort"),
      (e[(e.AllOrNone = 1)] = "AllOrNone");
  })((Mg = y.GitRefUpdateMode || (y.GitRefUpdateMode = {})));
  var xg;
  (function (e) {
    (e[(e.Succeeded = 0)] = "Succeeded"),
      (e[(e.ForcePushRequired = 1)] = "ForcePushRequired"),
      (e[(e.StaleOldObjectId = 2)] = "StaleOldObjectId"),
      (e[(e.InvalidRefName = 3)] = "InvalidRefName"),
      (e[(e.Unprocessed = 4)] = "Unprocessed"),
      (e[(e.UnresolvableToCommit = 5)] = "UnresolvableToCommit"),
      (e[(e.WritePermissionRequired = 6)] = "WritePermissionRequired"),
      (e[(e.ManageNotePermissionRequired = 7)] =
        "ManageNotePermissionRequired"),
      (e[(e.CreateBranchPermissionRequired = 8)] =
        "CreateBranchPermissionRequired"),
      (e[(e.CreateTagPermissionRequired = 9)] = "CreateTagPermissionRequired"),
      (e[(e.RejectedByPlugin = 10)] = "RejectedByPlugin"),
      (e[(e.Locked = 11)] = "Locked"),
      (e[(e.RefNameConflict = 12)] = "RefNameConflict"),
      (e[(e.RejectedByPolicy = 13)] = "RejectedByPolicy"),
      (e[(e.SucceededNonExistentRef = 14)] = "SucceededNonExistentRef"),
      (e[(e.SucceededCorruptRef = 15)] = "SucceededCorruptRef");
  })((xg = y.GitRefUpdateStatus || (y.GitRefUpdateStatus = {})));
  var _g;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.MergeContentNotFound = 1)] = "MergeContentNotFound"),
      (e[(e.PathInUse = 2)] = "PathInUse"),
      (e[(e.InvalidPath = 3)] = "InvalidPath"),
      (e[(e.UnknownAction = 4)] = "UnknownAction"),
      (e[(e.UnknownMergeType = 5)] = "UnknownMergeType"),
      (e[(e.OtherError = 255)] = "OtherError");
  })((_g = y.GitResolutionError || (y.GitResolutionError = {})));
  var Gg;
  (function (e) {
    (e[(e.Undecided = 0)] = "Undecided"),
      (e[(e.TakeSourceContent = 1)] = "TakeSourceContent"),
      (e[(e.TakeTargetContent = 2)] = "TakeTargetContent"),
      (e[(e.AutoMerged = 3)] = "AutoMerged"),
      (e[(e.UserMerged = 4)] = "UserMerged");
  })((Gg = y.GitResolutionMergeType || (y.GitResolutionMergeType = {})));
  var Fg;
  (function (e) {
    (e[(e.Undecided = 0)] = "Undecided"),
      (e[(e.KeepSourceRenameTarget = 1)] = "KeepSourceRenameTarget"),
      (e[(e.KeepSourceDeleteTarget = 2)] = "KeepSourceDeleteTarget"),
      (e[(e.KeepTargetRenameSource = 3)] = "KeepTargetRenameSource"),
      (e[(e.KeepTargetDeleteSource = 4)] = "KeepTargetDeleteSource");
  })(
    (Fg =
      y.GitResolutionPathConflictAction ||
      (y.GitResolutionPathConflictAction = {}))
  );
  var Lg;
  (function (e) {
    (e[(e.Undecided = 0)] = "Undecided"),
      (e[(e.KeepSourcePath = 1)] = "KeepSourcePath"),
      (e[(e.KeepTargetPath = 2)] = "KeepTargetPath"),
      (e[(e.KeepBothFiles = 3)] = "KeepBothFiles");
  })(
    (Lg =
      y.GitResolutionRename1to2Action || (y.GitResolutionRename1to2Action = {}))
  );
  var Wg;
  (function (e) {
    (e[(e.Unresolved = 0)] = "Unresolved"),
      (e[(e.PartiallyResolved = 1)] = "PartiallyResolved"),
      (e[(e.Resolved = 2)] = "Resolved");
  })((Wg = y.GitResolutionStatus || (y.GitResolutionStatus = {})));
  var $g;
  (function (e) {
    (e[(e.Undecided = 0)] = "Undecided"),
      (e[(e.PickSourceAction = 1)] = "PickSourceAction"),
      (e[(e.PickTargetAction = 2)] = "PickTargetAction");
  })(($g = y.GitResolutionWhichAction || (y.GitResolutionWhichAction = {})));
  var Hg;
  (function (e) {
    (e[(e.NotSet = 0)] = "NotSet"),
      (e[(e.Pending = 1)] = "Pending"),
      (e[(e.Succeeded = 2)] = "Succeeded"),
      (e[(e.Failed = 3)] = "Failed"),
      (e[(e.Error = 4)] = "Error"),
      (e[(e.NotApplicable = 5)] = "NotApplicable");
  })((Hg = y.GitStatusState || (y.GitStatusState = {})));
  var zg;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.PreviousChange = 1)] = "PreviousChange"),
      (e[(e.FirstParent = 2)] = "FirstParent");
  })((zg = y.GitVersionOptions || (y.GitVersionOptions = {})));
  var Qg;
  (function (e) {
    (e[(e.Branch = 0)] = "Branch"),
      (e[(e.Tag = 1)] = "Tag"),
      (e[(e.Commit = 2)] = "Commit");
  })((Qg = y.GitVersionType || (y.GitVersionType = {})));
  var Jg;
  (function (e) {
    (e[(e.RawText = 0)] = "RawText"),
      (e[(e.Base64Encoded = 1)] = "Base64Encoded");
  })((Jg = y.ItemContentType || (y.ItemContentType = {})));
  var Kg;
  (function (e) {
    (e[(e.Push = 0)] = "Push"),
      (e[(e.ForcePush = 1)] = "ForcePush"),
      (e[(e.Create = 2)] = "Create"),
      (e[(e.Rebase = 4)] = "Rebase"),
      (e[(e.Unknown = 8)] = "Unknown"),
      (e[(e.Retarget = 16)] = "Retarget"),
      (e[(e.ResolveConflicts = 32)] = "ResolveConflicts");
  })((Kg = y.IterationReason || (y.IterationReason = {})));
  var Xg;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Add = 1)] = "Add"),
      (e[(e.Delete = 2)] = "Delete"),
      (e[(e.Edit = 3)] = "Edit");
  })((Xg = y.LineDiffBlockChangeType || (y.LineDiffBlockChangeType = {})));
  var Zg;
  (function (e) {
    (e[(e.NotSet = 0)] = "NotSet"),
      (e[(e.Queued = 1)] = "Queued"),
      (e[(e.Conflicts = 2)] = "Conflicts"),
      (e[(e.Succeeded = 3)] = "Succeeded"),
      (e[(e.RejectedByPolicy = 4)] = "RejectedByPolicy"),
      (e[(e.Failure = 5)] = "Failure");
  })((Zg = y.PullRequestAsyncStatus || (y.PullRequestAsyncStatus = {})));
  var Yg;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Unknown = 1)] = "Unknown"),
      (e[(e.CaseSensitive = 2)] = "CaseSensitive"),
      (e[(e.ObjectTooLarge = 3)] = "ObjectTooLarge");
  })(
    (Yg = y.PullRequestMergeFailureType || (y.PullRequestMergeFailureType = {}))
  );
  var eI;
  (function (e) {
    (e[(e.NotSet = 0)] = "NotSet"),
      (e[(e.Active = 1)] = "Active"),
      (e[(e.Abandoned = 2)] = "Abandoned"),
      (e[(e.Completed = 3)] = "Completed"),
      (e[(e.All = 4)] = "All");
  })((eI = y.PullRequestStatus || (y.PullRequestStatus = {})));
  var tI;
  (function (e) {
    (e[(e.Invalid = 0)] = "Invalid"),
      (e[(e.Folder = 1)] = "Folder"),
      (e[(e.Ref = 2)] = "Ref");
  })((tI = y.RefFavoriteType || (y.RefFavoriteType = {})));
  var iI;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.AndroidStudio = 1)] = "AndroidStudio"),
      (e[(e.AppCode = 2)] = "AppCode"),
      (e[(e.CLion = 3)] = "CLion"),
      (e[(e.DataGrip = 4)] = "DataGrip"),
      (e[(e.Eclipse = 13)] = "Eclipse"),
      (e[(e.IntelliJ = 5)] = "IntelliJ"),
      (e[(e.MPS = 6)] = "MPS"),
      (e[(e.PhpStorm = 7)] = "PhpStorm"),
      (e[(e.PyCharm = 8)] = "PyCharm"),
      (e[(e.RubyMine = 9)] = "RubyMine"),
      (e[(e.Tower = 10)] = "Tower"),
      (e[(e.VisualStudio = 11)] = "VisualStudio"),
      (e[(e.VSCode = 14)] = "VSCode"),
      (e[(e.WebStorm = 12)] = "WebStorm");
  })((iI = y.SupportedIdeType || (y.SupportedIdeType = {})));
  var rI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Previous = 1)] = "Previous"),
      (e[(e.UseRename = 2)] = "UseRename");
  })((rI = y.TfvcVersionOption || (y.TfvcVersionOption = {})));
  var nI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Changeset = 1)] = "Changeset"),
      (e[(e.Shelveset = 2)] = "Shelveset"),
      (e[(e.Change = 3)] = "Change"),
      (e[(e.Date = 4)] = "Date"),
      (e[(e.Latest = 5)] = "Latest"),
      (e[(e.Tip = 6)] = "Tip"),
      (e[(e.MergeSource = 7)] = "MergeSource");
  })((nI = y.TfvcVersionType || (y.TfvcVersionType = {})));
  var sI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Add = 1)] = "Add"),
      (e[(e.Edit = 2)] = "Edit"),
      (e[(e.Encoding = 4)] = "Encoding"),
      (e[(e.Rename = 8)] = "Rename"),
      (e[(e.Delete = 16)] = "Delete"),
      (e[(e.Undelete = 32)] = "Undelete"),
      (e[(e.Branch = 64)] = "Branch"),
      (e[(e.Merge = 128)] = "Merge"),
      (e[(e.Lock = 256)] = "Lock"),
      (e[(e.Rollback = 512)] = "Rollback"),
      (e[(e.SourceRename = 1024)] = "SourceRename"),
      (e[(e.TargetRename = 2048)] = "TargetRename"),
      (e[(e.Property = 4096)] = "Property"),
      (e[(e.All = 8191)] = "All");
  })((sI = y.VersionControlChangeType || (y.VersionControlChangeType = {})));
  var oI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.OneLevel = 1)] = "OneLevel"),
      (e[(e.OneLevelPlusNestedEmptyFolders = 4)] =
        "OneLevelPlusNestedEmptyFolders"),
      (e[(e.Full = 120)] = "Full");
  })(
    (oI = y.VersionControlRecursionType || (y.VersionControlRecursionType = {}))
  );
  y.TypeInfo = {
    Attachment: {},
    Change: {},
    ChangeList: {},
    Comment: {},
    CommentThread: {},
    CommentThreadStatus: {
      enumValues: {
        unknown: 0,
        active: 1,
        fixed: 2,
        wontFix: 3,
        closed: 4,
        byDesign: 5,
        pending: 6,
      },
    },
    CommentType: {
      enumValues: { unknown: 0, text: 1, codeChange: 2, system: 3 },
    },
    FileDiff: {},
    GitAnnotatedTag: {},
    GitAsyncOperationStatus: {
      enumValues: {
        queued: 1,
        inProgress: 2,
        completed: 3,
        failed: 4,
        abandoned: 5,
      },
    },
    GitAsyncRefOperation: {},
    GitAsyncRefOperationDetail: {},
    GitAsyncRefOperationFailureStatus: {
      enumValues: {
        none: 0,
        invalidRefName: 1,
        refNameConflict: 2,
        createBranchPermissionRequired: 3,
        writePermissionRequired: 4,
        targetBranchDeleted: 5,
        gitObjectTooLarge: 6,
        operationIndentityNotFound: 7,
        asyncOperationNotFound: 8,
        other: 9,
        emptyCommitterSignature: 10,
      },
    },
    GitAsyncRefOperationParameters: {},
    GitAsyncRefOperationSource: {},
    GitBaseVersionDescriptor: {},
    GitBranchStats: {},
    GitChange: {},
    GitCherryPick: {},
    GitCommit: {},
    GitCommitChanges: {},
    GitCommitDiffs: {},
    GitCommitRef: {},
    GitCommitToCreate: {},
    GitConflict: {},
    GitConflictAddAdd: {},
    GitConflictAddRename: {},
    GitConflictDeleteEdit: {},
    GitConflictDeleteRename: {},
    GitConflictDirectoryFile: {},
    GitConflictEditDelete: {},
    GitConflictEditEdit: {},
    GitConflictFileDirectory: {},
    GitConflictRename1to2: {},
    GitConflictRename2to1: {},
    GitConflictRenameAdd: {},
    GitConflictRenameDelete: {},
    GitConflictRenameRename: {},
    GitConflictType: {
      enumValues: {
        none: 0,
        addAdd: 1,
        addRename: 2,
        deleteEdit: 3,
        deleteRename: 4,
        directoryFile: 5,
        directoryChild: 6,
        editDelete: 7,
        editEdit: 8,
        fileDirectory: 9,
        rename1to2: 10,
        rename2to1: 11,
        renameAdd: 12,
        renameDelete: 13,
        renameRename: 14,
      },
    },
    GitConflictUpdateResult: {},
    GitConflictUpdateStatus: {
      enumValues: {
        succeeded: 0,
        badRequest: 1,
        invalidResolution: 2,
        unsupportedConflictType: 3,
        notFound: 4,
      },
    },
    GitDeletedRepository: {},
    GitForkRef: {},
    GitForkSyncRequest: {},
    GitForkTeamProjectReference: {},
    GitHistoryMode: {
      enumValues: {
        simplifiedHistory: 0,
        firstParent: 1,
        fullHistory: 2,
        fullHistorySimplifyMerges: 3,
      },
    },
    GitImportFailedEvent: {},
    GitImportRequest: {},
    GitImportSucceededEvent: {},
    GitItem: {},
    GitItemDescriptor: {},
    GitItemRequestData: {},
    GitLastChangeTreeItems: {},
    GitMerge: {},
    GitObject: {},
    GitObjectType: {
      enumValues: {
        bad: 0,
        commit: 1,
        tree: 2,
        blob: 3,
        tag: 4,
        ext2: 5,
        ofsDelta: 6,
        refDelta: 7,
      },
    },
    GitPathAction: {},
    GitPathActions: {
      enumValues: { none: 0, edit: 1, delete: 2, add: 3, rename: 4 },
    },
    GitPathToItemsCollection: {},
    GitPolicyConfigurationResponse: {},
    GitPullRequest: {},
    GitPullRequestChange: {},
    GitPullRequestCommentThread: {},
    GitPullRequestCompletionOptions: {},
    GitPullRequestIteration: {},
    GitPullRequestIterationChanges: {},
    GitPullRequestMergeStrategy: {
      enumValues: { noFastForward: 1, squash: 2, rebase: 3, rebaseMerge: 4 },
    },
    GitPullRequestQuery: {},
    GitPullRequestQueryInput: {},
    GitPullRequestQueryType: {
      enumValues: { notSet: 0, lastMergeCommit: 1, commit: 2 },
    },
    GitPullRequestReviewFileType: {
      enumValues: { changeEntry: 0, attachment: 1 },
    },
    GitPullRequestSearchCriteria: {},
    GitPullRequestStatus: {},
    GitPush: {},
    GitPushEventData: {},
    GitPushRef: {},
    GitPushSearchCriteria: {},
    GitQueryBranchStatsCriteria: {},
    GitQueryCommitsCriteria: {},
    GitQueryRefsCriteria: {},
    GitRef: {},
    GitRefFavorite: {},
    GitRefSearchType: { enumValues: { exact: 0, startsWith: 1, contains: 2 } },
    GitRefUpdateMode: { enumValues: { bestEffort: 0, allOrNone: 1 } },
    GitRefUpdateResult: {},
    GitRefUpdateStatus: {
      enumValues: {
        succeeded: 0,
        forcePushRequired: 1,
        staleOldObjectId: 2,
        invalidRefName: 3,
        unprocessed: 4,
        unresolvableToCommit: 5,
        writePermissionRequired: 6,
        manageNotePermissionRequired: 7,
        createBranchPermissionRequired: 8,
        createTagPermissionRequired: 9,
        rejectedByPlugin: 10,
        locked: 11,
        refNameConflict: 12,
        rejectedByPolicy: 13,
        succeededNonExistentRef: 14,
        succeededCorruptRef: 15,
      },
    },
    GitRepository: {},
    GitRepositoryCreateOptions: {},
    GitRepositoryRef: {},
    GitResolutionError: {
      enumValues: {
        none: 0,
        mergeContentNotFound: 1,
        pathInUse: 2,
        invalidPath: 3,
        unknownAction: 4,
        unknownMergeType: 5,
        otherError: 255,
      },
    },
    GitResolutionMergeContent: {},
    GitResolutionMergeType: {
      enumValues: {
        undecided: 0,
        takeSourceContent: 1,
        takeTargetContent: 2,
        autoMerged: 3,
        userMerged: 4,
      },
    },
    GitResolutionPathConflict: {},
    GitResolutionPathConflictAction: {
      enumValues: {
        undecided: 0,
        keepSourceRenameTarget: 1,
        keepSourceDeleteTarget: 2,
        keepTargetRenameSource: 3,
        keepTargetDeleteSource: 4,
      },
    },
    GitResolutionPickOneAction: {},
    GitResolutionRename1to2: {},
    GitResolutionRename1to2Action: {
      enumValues: {
        undecided: 0,
        keepSourcePath: 1,
        keepTargetPath: 2,
        keepBothFiles: 3,
      },
    },
    GitResolutionStatus: {
      enumValues: { unresolved: 0, partiallyResolved: 1, resolved: 2 },
    },
    GitResolutionWhichAction: {
      enumValues: { undecided: 0, pickSourceAction: 1, pickTargetAction: 2 },
    },
    GitRevert: {},
    GitStatus: {},
    GitStatusState: {
      enumValues: {
        notSet: 0,
        pending: 1,
        succeeded: 2,
        failed: 3,
        error: 4,
        notApplicable: 5,
      },
    },
    GitTargetVersionDescriptor: {},
    GitTreeDiff: {},
    GitTreeDiffEntry: {},
    GitTreeDiffResponse: {},
    GitTreeEntryRef: {},
    GitTreeRef: {},
    GitUserDate: {},
    GitVersionDescriptor: {},
    GitVersionOptions: {
      enumValues: { none: 0, previousChange: 1, firstParent: 2 },
    },
    GitVersionType: { enumValues: { branch: 0, tag: 1, commit: 2 } },
    HistoryEntry: {},
    IncludedGitCommit: {},
    ItemContent: {},
    ItemContentType: { enumValues: { rawText: 0, base64Encoded: 1 } },
    ItemDetailsOptions: {},
    IterationReason: {
      enumValues: {
        push: 0,
        forcePush: 1,
        create: 2,
        rebase: 4,
        unknown: 8,
        retarget: 16,
        resolveConflicts: 32,
      },
    },
    LineDiffBlock: {},
    LineDiffBlockChangeType: {
      enumValues: { none: 0, add: 1, delete: 2, edit: 3 },
    },
    PullRequestAsyncStatus: {
      enumValues: {
        notSet: 0,
        queued: 1,
        conflicts: 2,
        succeeded: 3,
        rejectedByPolicy: 4,
        failure: 5,
      },
    },
    PullRequestMergeFailureType: {
      enumValues: { none: 0, unknown: 1, caseSensitive: 2, objectTooLarge: 3 },
    },
    PullRequestStatus: {
      enumValues: { notSet: 0, active: 1, abandoned: 2, completed: 3, all: 4 },
    },
    RefFavoriteType: { enumValues: { invalid: 0, folder: 1, ref: 2 } },
    SupportedIde: {},
    SupportedIdeType: {
      enumValues: {
        unknown: 0,
        androidStudio: 1,
        appCode: 2,
        cLion: 3,
        dataGrip: 4,
        eclipse: 13,
        intelliJ: 5,
        mps: 6,
        phpStorm: 7,
        pyCharm: 8,
        rubyMine: 9,
        tower: 10,
        visualStudio: 11,
        vsCode: 14,
        webStorm: 12,
      },
    },
    TfvcBranch: {},
    TfvcBranchRef: {},
    TfvcChange: {},
    TfvcChangeset: {},
    TfvcChangesetRef: {},
    TfvcCheckinEventData: {},
    TfvcHistoryEntry: {},
    TfvcItem: {},
    TfvcItemDescriptor: {},
    TfvcItemPreviousHash: {},
    TfvcItemRequestData: {},
    TfvcLabel: {},
    TfvcLabelRef: {},
    TfvcShelveset: {},
    TfvcShelvesetRef: {},
    TfvcVersionDescriptor: {},
    TfvcVersionOption: { enumValues: { none: 0, previous: 1, useRename: 2 } },
    TfvcVersionType: {
      enumValues: {
        none: 0,
        changeset: 1,
        shelveset: 2,
        change: 3,
        date: 4,
        latest: 5,
        tip: 6,
        mergeSource: 7,
      },
    },
    UpdateRefsRequest: {},
    VersionControlChangeType: {
      enumValues: {
        none: 0,
        add: 1,
        edit: 2,
        encoding: 4,
        rename: 8,
        delete: 16,
        undelete: 32,
        branch: 64,
        merge: 128,
        lock: 256,
        rollback: 512,
        sourceRename: 1024,
        targetRename: 2048,
        property: 4096,
        all: 8191,
      },
    },
    VersionControlProjectInfo: {},
    VersionControlRecursionType: {
      enumValues: {
        none: 0,
        oneLevel: 1,
        oneLevelPlusNestedEmptyFolders: 4,
        full: 120,
      },
    },
  };
  y.TypeInfo.Attachment.fields = { createdDate: { isDate: !0 } };
  y.TypeInfo.Change.fields = {
    changeType: { enumType: y.TypeInfo.VersionControlChangeType },
    newContent: { typeInfo: y.TypeInfo.ItemContent },
  };
  y.TypeInfo.ChangeList.fields = {
    changeCounts: {
      isDictionary: !0,
      dictionaryKeyEnumType: y.TypeInfo.VersionControlChangeType,
    },
    creationDate: { isDate: !0 },
    sortDate: { isDate: !0 },
  };
  y.TypeInfo.Comment.fields = {
    commentType: { enumType: y.TypeInfo.CommentType },
    lastContentUpdatedDate: { isDate: !0 },
    lastUpdatedDate: { isDate: !0 },
    publishedDate: { isDate: !0 },
  };
  y.TypeInfo.CommentThread.fields = {
    comments: { isArray: !0, typeInfo: y.TypeInfo.Comment },
    lastUpdatedDate: { isDate: !0 },
    publishedDate: { isDate: !0 },
    status: { enumType: y.TypeInfo.CommentThreadStatus },
  };
  y.TypeInfo.FileDiff.fields = {
    lineDiffBlocks: { isArray: !0, typeInfo: y.TypeInfo.LineDiffBlock },
  };
  y.TypeInfo.GitAnnotatedTag.fields = {
    taggedBy: { typeInfo: y.TypeInfo.GitUserDate },
    taggedObject: { typeInfo: y.TypeInfo.GitObject },
  };
  y.TypeInfo.GitAsyncRefOperation.fields = {
    detailedStatus: { typeInfo: y.TypeInfo.GitAsyncRefOperationDetail },
    parameters: { typeInfo: y.TypeInfo.GitAsyncRefOperationParameters },
    status: { enumType: y.TypeInfo.GitAsyncOperationStatus },
  };
  y.TypeInfo.GitAsyncRefOperationDetail.fields = {
    status: { enumType: y.TypeInfo.GitAsyncRefOperationFailureStatus },
  };
  y.TypeInfo.GitAsyncRefOperationParameters.fields = {
    repository: { typeInfo: y.TypeInfo.GitRepository },
    source: { typeInfo: y.TypeInfo.GitAsyncRefOperationSource },
  };
  y.TypeInfo.GitAsyncRefOperationSource.fields = {
    commitList: { isArray: !0, typeInfo: y.TypeInfo.GitCommitRef },
  };
  y.TypeInfo.GitBaseVersionDescriptor.fields = {
    baseVersionOptions: { enumType: y.TypeInfo.GitVersionOptions },
    baseVersionType: { enumType: y.TypeInfo.GitVersionType },
    versionOptions: { enumType: y.TypeInfo.GitVersionOptions },
    versionType: { enumType: y.TypeInfo.GitVersionType },
  };
  y.TypeInfo.GitBranchStats.fields = {
    commit: { typeInfo: y.TypeInfo.GitCommitRef },
  };
  y.TypeInfo.GitChange.fields = {
    changeType: { enumType: y.TypeInfo.VersionControlChangeType },
    newContent: { typeInfo: y.TypeInfo.ItemContent },
  };
  y.TypeInfo.GitCherryPick.fields = {
    detailedStatus: { typeInfo: y.TypeInfo.GitAsyncRefOperationDetail },
    parameters: { typeInfo: y.TypeInfo.GitAsyncRefOperationParameters },
    status: { enumType: y.TypeInfo.GitAsyncOperationStatus },
  };
  y.TypeInfo.GitCommit.fields = {
    author: { typeInfo: y.TypeInfo.GitUserDate },
    changes: { isArray: !0, typeInfo: y.TypeInfo.GitChange },
    committer: { typeInfo: y.TypeInfo.GitUserDate },
    push: { typeInfo: y.TypeInfo.GitPushRef },
    statuses: { isArray: !0, typeInfo: y.TypeInfo.GitStatus },
  };
  y.TypeInfo.GitCommitChanges.fields = {
    changes: { isArray: !0, typeInfo: y.TypeInfo.GitChange },
  };
  y.TypeInfo.GitCommitDiffs.fields = {
    changeCounts: {
      isDictionary: !0,
      dictionaryKeyEnumType: y.TypeInfo.VersionControlChangeType,
    },
    changes: { isArray: !0, typeInfo: y.TypeInfo.GitChange },
  };
  y.TypeInfo.GitCommitRef.fields = {
    author: { typeInfo: y.TypeInfo.GitUserDate },
    changes: { isArray: !0, typeInfo: y.TypeInfo.GitChange },
    committer: { typeInfo: y.TypeInfo.GitUserDate },
    push: { typeInfo: y.TypeInfo.GitPushRef },
    statuses: { isArray: !0, typeInfo: y.TypeInfo.GitStatus },
  };
  y.TypeInfo.GitCommitToCreate.fields = {
    baseRef: { typeInfo: y.TypeInfo.GitRef },
    pathActions: { isArray: !0, typeInfo: y.TypeInfo.GitPathAction },
  };
  y.TypeInfo.GitConflict.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictAddAdd.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionMergeContent },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictAddRename.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPathConflict },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictDeleteEdit.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPickOneAction },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictDeleteRename.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPickOneAction },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictDirectoryFile.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPathConflict },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
    sourceTree: { typeInfo: y.TypeInfo.GitTreeRef },
  };
  y.TypeInfo.GitConflictEditDelete.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPickOneAction },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictEditEdit.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionMergeContent },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictFileDirectory.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPathConflict },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
    targetTree: { typeInfo: y.TypeInfo.GitTreeRef },
  };
  y.TypeInfo.GitConflictRename1to2.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionRename1to2 },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictRename2to1.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPathConflict },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictRenameAdd.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPathConflict },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictRenameDelete.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionPickOneAction },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictRenameRename.fields = {
    conflictType: { enumType: y.TypeInfo.GitConflictType },
    mergeBaseCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    resolution: { typeInfo: y.TypeInfo.GitResolutionMergeContent },
    resolutionError: { enumType: y.TypeInfo.GitResolutionError },
    resolutionStatus: { enumType: y.TypeInfo.GitResolutionStatus },
    resolvedDate: { isDate: !0 },
  };
  y.TypeInfo.GitConflictUpdateResult.fields = {
    updatedConflict: { typeInfo: y.TypeInfo.GitConflict },
    updateStatus: { enumType: y.TypeInfo.GitConflictUpdateStatus },
  };
  y.TypeInfo.GitDeletedRepository.fields = {
    createdDate: { isDate: !0 },
    deletedDate: { isDate: !0 },
    project: { typeInfo: Jt.TypeInfo.TeamProjectReference },
  };
  y.TypeInfo.GitForkRef.fields = {
    repository: { typeInfo: y.TypeInfo.GitRepository },
    statuses: { isArray: !0, typeInfo: y.TypeInfo.GitStatus },
  };
  y.TypeInfo.GitForkSyncRequest.fields = {
    status: { enumType: y.TypeInfo.GitAsyncOperationStatus },
  };
  y.TypeInfo.GitForkTeamProjectReference.fields = {
    lastUpdateTime: { isDate: !0 },
    visibility: { enumType: Jt.TypeInfo.ProjectVisibility },
  };
  y.TypeInfo.GitImportFailedEvent.fields = {
    targetRepository: { typeInfo: y.TypeInfo.GitRepository },
  };
  y.TypeInfo.GitImportRequest.fields = {
    repository: { typeInfo: y.TypeInfo.GitRepository },
    status: { enumType: y.TypeInfo.GitAsyncOperationStatus },
  };
  y.TypeInfo.GitImportSucceededEvent.fields = {
    targetRepository: { typeInfo: y.TypeInfo.GitRepository },
  };
  y.TypeInfo.GitItem.fields = {
    gitObjectType: { enumType: y.TypeInfo.GitObjectType },
    latestProcessedChange: { typeInfo: y.TypeInfo.GitCommitRef },
  };
  y.TypeInfo.GitItemDescriptor.fields = {
    recursionLevel: { enumType: y.TypeInfo.VersionControlRecursionType },
    versionOptions: { enumType: y.TypeInfo.GitVersionOptions },
    versionType: { enumType: y.TypeInfo.GitVersionType },
  };
  y.TypeInfo.GitItemRequestData.fields = {
    itemDescriptors: { isArray: !0, typeInfo: y.TypeInfo.GitItemDescriptor },
  };
  y.TypeInfo.GitLastChangeTreeItems.fields = {
    commits: { isArray: !0, typeInfo: y.TypeInfo.GitCommitRef },
    lastExploredTime: { isDate: !0 },
  };
  y.TypeInfo.GitMerge.fields = {
    status: { enumType: y.TypeInfo.GitAsyncOperationStatus },
  };
  y.TypeInfo.GitObject.fields = {
    objectType: { enumType: y.TypeInfo.GitObjectType },
  };
  y.TypeInfo.GitPathAction.fields = {
    action: { enumType: y.TypeInfo.GitPathActions },
  };
  y.TypeInfo.GitPathToItemsCollection.fields = {
    items: {
      isDictionary: !0,
      dictionaryValueFieldInfo: { isArray: !0, typeInfo: y.TypeInfo.GitItem },
    },
  };
  y.TypeInfo.GitPolicyConfigurationResponse.fields = {
    policyConfigurations: {
      isArray: !0,
      typeInfo: Dg.TypeInfo.PolicyConfiguration,
    },
  };
  y.TypeInfo.GitPullRequest.fields = {
    closedDate: { isDate: !0 },
    commits: { isArray: !0, typeInfo: y.TypeInfo.GitCommitRef },
    completionOptions: { typeInfo: y.TypeInfo.GitPullRequestCompletionOptions },
    completionQueueTime: { isDate: !0 },
    creationDate: { isDate: !0 },
    forkSource: { typeInfo: y.TypeInfo.GitForkRef },
    lastMergeCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    lastMergeSourceCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    lastMergeTargetCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    mergeFailureType: { enumType: y.TypeInfo.PullRequestMergeFailureType },
    mergeStatus: { enumType: y.TypeInfo.PullRequestAsyncStatus },
    repository: { typeInfo: y.TypeInfo.GitRepository },
    status: { enumType: y.TypeInfo.PullRequestStatus },
  };
  y.TypeInfo.GitPullRequestChange.fields = {
    changeType: { enumType: y.TypeInfo.VersionControlChangeType },
    newContent: { typeInfo: y.TypeInfo.ItemContent },
  };
  y.TypeInfo.GitPullRequestCommentThread.fields = {
    comments: { isArray: !0, typeInfo: y.TypeInfo.Comment },
    lastUpdatedDate: { isDate: !0 },
    publishedDate: { isDate: !0 },
    status: { enumType: y.TypeInfo.CommentThreadStatus },
  };
  y.TypeInfo.GitPullRequestCompletionOptions.fields = {
    mergeStrategy: { enumType: y.TypeInfo.GitPullRequestMergeStrategy },
  };
  y.TypeInfo.GitPullRequestIteration.fields = {
    changeList: { isArray: !0, typeInfo: y.TypeInfo.GitPullRequestChange },
    commits: { isArray: !0, typeInfo: y.TypeInfo.GitCommitRef },
    commonRefCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    createdDate: { isDate: !0 },
    push: { typeInfo: y.TypeInfo.GitPushRef },
    reason: { enumType: y.TypeInfo.IterationReason },
    sourceRefCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    targetRefCommit: { typeInfo: y.TypeInfo.GitCommitRef },
    updatedDate: { isDate: !0 },
  };
  y.TypeInfo.GitPullRequestIterationChanges.fields = {
    changeEntries: { isArray: !0, typeInfo: y.TypeInfo.GitPullRequestChange },
  };
  y.TypeInfo.GitPullRequestQuery.fields = {
    queries: { isArray: !0, typeInfo: y.TypeInfo.GitPullRequestQueryInput },
  };
  y.TypeInfo.GitPullRequestQueryInput.fields = {
    type: { enumType: y.TypeInfo.GitPullRequestQueryType },
  };
  y.TypeInfo.GitPullRequestSearchCriteria.fields = {
    status: { enumType: y.TypeInfo.PullRequestStatus },
  };
  y.TypeInfo.GitPullRequestStatus.fields = {
    creationDate: { isDate: !0 },
    state: { enumType: y.TypeInfo.GitStatusState },
    updatedDate: { isDate: !0 },
  };
  y.TypeInfo.GitPush.fields = {
    commits: { isArray: !0, typeInfo: y.TypeInfo.GitCommitRef },
    date: { isDate: !0 },
    repository: { typeInfo: y.TypeInfo.GitRepository },
  };
  y.TypeInfo.GitPushEventData.fields = {
    commits: { isArray: !0, typeInfo: y.TypeInfo.GitCommit },
    repository: { typeInfo: y.TypeInfo.GitRepository },
  };
  y.TypeInfo.GitPushRef.fields = { date: { isDate: !0 } };
  y.TypeInfo.GitPushSearchCriteria.fields = {
    fromDate: { isDate: !0 },
    toDate: { isDate: !0 },
  };
  y.TypeInfo.GitQueryBranchStatsCriteria.fields = {
    baseCommit: { typeInfo: y.TypeInfo.GitVersionDescriptor },
    targetCommits: { isArray: !0, typeInfo: y.TypeInfo.GitVersionDescriptor },
  };
  y.TypeInfo.GitQueryCommitsCriteria.fields = {
    compareVersion: { typeInfo: y.TypeInfo.GitVersionDescriptor },
    historyMode: { enumType: y.TypeInfo.GitHistoryMode },
    itemVersion: { typeInfo: y.TypeInfo.GitVersionDescriptor },
  };
  y.TypeInfo.GitQueryRefsCriteria.fields = {
    searchType: { enumType: y.TypeInfo.GitRefSearchType },
  };
  y.TypeInfo.GitRef.fields = {
    statuses: { isArray: !0, typeInfo: y.TypeInfo.GitStatus },
  };
  y.TypeInfo.GitRefFavorite.fields = {
    type: { enumType: y.TypeInfo.RefFavoriteType },
  };
  y.TypeInfo.GitRefUpdateResult.fields = {
    updateStatus: { enumType: y.TypeInfo.GitRefUpdateStatus },
  };
  y.TypeInfo.GitRepository.fields = {
    parentRepository: { typeInfo: y.TypeInfo.GitRepositoryRef },
    project: { typeInfo: Jt.TypeInfo.TeamProjectReference },
  };
  y.TypeInfo.GitRepositoryCreateOptions.fields = {
    parentRepository: { typeInfo: y.TypeInfo.GitRepositoryRef },
    project: { typeInfo: Jt.TypeInfo.TeamProjectReference },
  };
  y.TypeInfo.GitRepositoryRef.fields = {
    project: { typeInfo: Jt.TypeInfo.TeamProjectReference },
  };
  y.TypeInfo.GitResolutionMergeContent.fields = {
    mergeType: { enumType: y.TypeInfo.GitResolutionMergeType },
  };
  y.TypeInfo.GitResolutionPathConflict.fields = {
    action: { enumType: y.TypeInfo.GitResolutionPathConflictAction },
  };
  y.TypeInfo.GitResolutionPickOneAction.fields = {
    action: { enumType: y.TypeInfo.GitResolutionWhichAction },
  };
  y.TypeInfo.GitResolutionRename1to2.fields = {
    action: { enumType: y.TypeInfo.GitResolutionRename1to2Action },
    mergeType: { enumType: y.TypeInfo.GitResolutionMergeType },
  };
  y.TypeInfo.GitRevert.fields = {
    detailedStatus: { typeInfo: y.TypeInfo.GitAsyncRefOperationDetail },
    parameters: { typeInfo: y.TypeInfo.GitAsyncRefOperationParameters },
    status: { enumType: y.TypeInfo.GitAsyncOperationStatus },
  };
  y.TypeInfo.GitStatus.fields = {
    creationDate: { isDate: !0 },
    state: { enumType: y.TypeInfo.GitStatusState },
    updatedDate: { isDate: !0 },
  };
  y.TypeInfo.GitTargetVersionDescriptor.fields = {
    targetVersionOptions: { enumType: y.TypeInfo.GitVersionOptions },
    targetVersionType: { enumType: y.TypeInfo.GitVersionType },
    versionOptions: { enumType: y.TypeInfo.GitVersionOptions },
    versionType: { enumType: y.TypeInfo.GitVersionType },
  };
  y.TypeInfo.GitTreeDiff.fields = {
    diffEntries: { isArray: !0, typeInfo: y.TypeInfo.GitTreeDiffEntry },
  };
  y.TypeInfo.GitTreeDiffEntry.fields = {
    changeType: { enumType: y.TypeInfo.VersionControlChangeType },
    objectType: { enumType: y.TypeInfo.GitObjectType },
  };
  y.TypeInfo.GitTreeDiffResponse.fields = {
    treeDiff: { typeInfo: y.TypeInfo.GitTreeDiff },
  };
  y.TypeInfo.GitTreeEntryRef.fields = {
    gitObjectType: { enumType: y.TypeInfo.GitObjectType },
  };
  y.TypeInfo.GitTreeRef.fields = {
    treeEntries: { isArray: !0, typeInfo: y.TypeInfo.GitTreeEntryRef },
  };
  y.TypeInfo.GitUserDate.fields = { date: { isDate: !0 } };
  y.TypeInfo.GitVersionDescriptor.fields = {
    versionOptions: { enumType: y.TypeInfo.GitVersionOptions },
    versionType: { enumType: y.TypeInfo.GitVersionType },
  };
  y.TypeInfo.HistoryEntry.fields = {
    itemChangeType: { enumType: y.TypeInfo.VersionControlChangeType },
  };
  y.TypeInfo.IncludedGitCommit.fields = { commitTime: { isDate: !0 } };
  y.TypeInfo.ItemContent.fields = {
    contentType: { enumType: y.TypeInfo.ItemContentType },
  };
  y.TypeInfo.ItemDetailsOptions.fields = {
    recursionLevel: { enumType: y.TypeInfo.VersionControlRecursionType },
  };
  y.TypeInfo.LineDiffBlock.fields = {
    changeType: { enumType: y.TypeInfo.LineDiffBlockChangeType },
  };
  y.TypeInfo.SupportedIde.fields = {
    ideType: { enumType: y.TypeInfo.SupportedIdeType },
  };
  y.TypeInfo.TfvcBranch.fields = {
    children: { isArray: !0, typeInfo: y.TypeInfo.TfvcBranch },
    createdDate: { isDate: !0 },
  };
  y.TypeInfo.TfvcBranchRef.fields = { createdDate: { isDate: !0 } };
  y.TypeInfo.TfvcChange.fields = {
    changeType: { enumType: y.TypeInfo.VersionControlChangeType },
    newContent: { typeInfo: y.TypeInfo.ItemContent },
  };
  y.TypeInfo.TfvcChangeset.fields = {
    changes: { isArray: !0, typeInfo: y.TypeInfo.TfvcChange },
    createdDate: { isDate: !0 },
  };
  y.TypeInfo.TfvcChangesetRef.fields = { createdDate: { isDate: !0 } };
  y.TypeInfo.TfvcCheckinEventData.fields = {
    changeset: { typeInfo: y.TypeInfo.TfvcChangeset },
    project: { typeInfo: Jt.TypeInfo.TeamProjectReference },
  };
  y.TypeInfo.TfvcHistoryEntry.fields = {
    itemChangeType: { enumType: y.TypeInfo.VersionControlChangeType },
  };
  y.TypeInfo.TfvcItem.fields = { changeDate: { isDate: !0 } };
  y.TypeInfo.TfvcItemDescriptor.fields = {
    recursionLevel: { enumType: y.TypeInfo.VersionControlRecursionType },
    versionOption: { enumType: y.TypeInfo.TfvcVersionOption },
    versionType: { enumType: y.TypeInfo.TfvcVersionType },
  };
  y.TypeInfo.TfvcItemPreviousHash.fields = { changeDate: { isDate: !0 } };
  y.TypeInfo.TfvcItemRequestData.fields = {
    itemDescriptors: { isArray: !0, typeInfo: y.TypeInfo.TfvcItemDescriptor },
  };
  y.TypeInfo.TfvcLabel.fields = {
    items: { isArray: !0, typeInfo: y.TypeInfo.TfvcItem },
    modifiedDate: { isDate: !0 },
  };
  y.TypeInfo.TfvcLabelRef.fields = { modifiedDate: { isDate: !0 } };
  y.TypeInfo.TfvcShelveset.fields = {
    changes: { isArray: !0, typeInfo: y.TypeInfo.TfvcChange },
    createdDate: { isDate: !0 },
  };
  y.TypeInfo.TfvcShelvesetRef.fields = { createdDate: { isDate: !0 } };
  y.TypeInfo.TfvcVersionDescriptor.fields = {
    versionOption: { enumType: y.TypeInfo.TfvcVersionOption },
    versionType: { enumType: y.TypeInfo.TfvcVersionType },
  };
  y.TypeInfo.UpdateRefsRequest.fields = {
    updateMode: { enumType: y.TypeInfo.GitRefUpdateMode },
  };
  y.TypeInfo.VersionControlProjectInfo.fields = {
    defaultSourceControlType: { enumType: Jt.TypeInfo.SourceControlTypes },
    project: { typeInfo: Jt.TypeInfo.TeamProjectReference },
  };
});
var Nd = x((Lr) => {
  "use strict";
  var R =
    (Lr && Lr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Lr, "__esModule", { value: !0 });
  var aI = qe(),
    _ = Ua(),
    ys = class extends aI.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Git-api", a);
      }
      createAnnotatedTag(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: i, repositoryId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "5e8a8081-3851-4626-b677-9891cc04102e",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitAnnotatedTag,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getAnnotatedTag(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: t, repositoryId: i, objectId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "5e8a8081-3851-4626-b677-9891cc04102e",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitAnnotatedTag,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBlob(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, repositoryId: t, sha1: i },
                p = { download: u, fileName: l, resolveLfs: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "7b28e929-2c99-405d-9c5c-6167a06e6816",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getBlobContent(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, repositoryId: t, sha1: i },
                p = { download: u, fileName: l, resolveLfs: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "7b28e929-2c99-405d-9c5c-6167a06e6816",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = d.apiVersion,
                  h = this.createAcceptHeader("application/octet-stream", f);
                s((yield this.http.get(c, { Accept: h })).message);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getBlobsZip(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryId: i },
                n = { filename: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "7b28e929-2c99-405d-9c5c-6167a06e6816",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = o.apiVersion,
                  c = this.createAcceptHeader("application/zip", d);
                l((yield this.http.get(p, { Accept: c })).message);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getBlobZip(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, repositoryId: t, sha1: i },
                p = { download: u, fileName: l, resolveLfs: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "7b28e929-2c99-405d-9c5c-6167a06e6816",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = d.apiVersion,
                  h = this.createAcceptHeader("application/zip", f);
                s((yield this.http.get(c, { Accept: h })).message);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getBranch(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("name can not be null or undefined");
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryId: t },
                n = { name: i, baseVersionDescriptor: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "d5b216de-d8d5-4d32-ae76-51df755b16d3",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitBranchStats,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getBranches(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: i, repositoryId: t },
                s = { baseVersionDescriptor: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "d5b216de-d8d5-4d32-ae76-51df755b16d3",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitBranchStats,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getBranchStatsBatch(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "d5b216de-d8d5-4d32-ae76-51df755b16d3",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitBranchStats,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getChanges(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: a, commitId: t, repositoryId: i },
                o = { top: u, skip: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "5bf884f5-3e07-42e9-afb8-1b872267bf16",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  _.TypeInfo.GitCommitChanges,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getCherryPickConflict(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                cherryPickId: i,
                conflictId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "1fe5aab2-d4c0-4b2f-a030-f3831e7aca26",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitConflict,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getCherryPickConflicts(t, i, a, u, l, r, s, n) {
        return R(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            R(this, void 0, void 0, function* () {
              let d = { project: a, repositoryId: t, cherryPickId: i },
                c = {
                  continuationToken: u,
                  $top: l,
                  excludeResolved: r,
                  onlyResolved: s,
                  includeObsolete: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "1fe5aab2-d4c0-4b2f-a030-f3831e7aca26",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(
                  q.result,
                  _.TypeInfo.GitConflict,
                  !0
                );
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      updateCherryPickConflict(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: i,
                cherryPickId: a,
                conflictId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "1fe5aab2-d4c0-4b2f-a030-f3831e7aca26",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitConflict,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      updateCherryPickConflicts(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, cherryPickId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "1fe5aab2-d4c0-4b2f-a030-f3831e7aca26",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitConflictUpdateResult,
                  !0
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getCherryPickRelationships(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryNameOrId: t, commitId: i },
                n = { includeLinks: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "8af142a4-27c2-4168-9e82-46b8629aaa0d",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitCommitRef,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createCherryPick(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: i, repositoryId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "033bad68-9a14-43d1-90e0-59cb8856fef6",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitCherryPick,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getCherryPick(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: t, cherryPickId: i, repositoryId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "033bad68-9a14-43d1-90e0-59cb8856fef6",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitCherryPick,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getCherryPickForRefName(t, i, a) {
        return R(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("refName can not be null or undefined");
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: t, repositoryId: i },
                s = { refName: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "033bad68-9a14-43d1-90e0-59cb8856fef6",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitCherryPick,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getCommitDiffs(t, i, a, u, l, r, s) {
        return R(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            R(this, void 0, void 0, function* () {
              let p = { project: i, repositoryId: t },
                d = { diffCommonCommit: a, $top: u, $skip: l };
              r &&
                ((d.baseVersionType = r.versionType),
                (d.baseVersion = r.version),
                (d.baseVersionOptions = r.versionOptions)),
                s &&
                  ((d.targetVersionType = s.versionType),
                  (d.targetVersion = s.version),
                  (d.targetVersionOptions = s.versionOptions));
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "615588d5-c0c7-4b88-88f8-e625306446e8",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(
                  T.result,
                  _.TypeInfo.GitCommitDiffs,
                  !1
                );
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      getCommit(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, commitId: t, repositoryId: i },
                n = { changeCount: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "c2570c3b-5b3f-41b8-98bf-5407bfde8d58",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, _.TypeInfo.GitCommit, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getCommits(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("searchCriteria can not be null or undefined");
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: a, repositoryId: t },
                o = { searchCriteria: i, $skip: u, $top: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "c2570c3b-5b3f-41b8-98bf-5407bfde8d58",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  _.TypeInfo.GitCommitRef,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getPushCommits(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("pushId can not be null or undefined");
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, repositoryId: t },
                p = { pushId: i, top: u, skip: l, includeLinks: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "c2570c3b-5b3f-41b8-98bf-5407bfde8d58",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  _.TypeInfo.GitCommitRef,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getCommitsBatch(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, repositoryId: i },
                p = { $skip: u, $top: l, includeStatuses: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "6400dfb2-0bcb-462b-b992-5a57f8f1416c",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.create(c, t, f);
                let T = this.formatResponse(
                  h.result,
                  _.TypeInfo.GitCommitRef,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getDeletedRepositories(t) {
        return R(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            R(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "2b6869c4-cb25-42b5-b7a3-0d3e6be0a11a",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  _.TypeInfo.GitDeletedRepository,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getFileDiffs(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: i, repositoryId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "c4c5a7e6-e9f3-4730-a92b-84baacff694b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, _.TypeInfo.FileDiff, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getForks(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryNameOrId: t, collectionId: i },
                n = { includeLinks: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "158c0340-bf6f-489c-9625-d572a1480d57",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitRepositoryRef,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createForkSyncRequest(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryNameOrId: i },
                n = { includeLinks: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "1703f858-b9d1-46af-ab62-483e9e1055b5",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitForkSyncRequest,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getForkSyncRequest(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                  project: a,
                  repositoryNameOrId: t,
                  forkSyncOperationId: i,
                },
                n = { includeLinks: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "1703f858-b9d1-46af-ab62-483e9e1055b5",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitForkSyncRequest,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getForkSyncRequests(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: i, repositoryNameOrId: t },
                n = { includeAbandoned: a, includeLinks: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "1703f858-b9d1-46af-ab62-483e9e1055b5",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitForkSyncRequest,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createImportRequest(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: i, repositoryId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "01828ddc-3600-4a41-8633-99b3a73a0eb3",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitImportRequest,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getImportRequest(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: t, repositoryId: i, importRequestId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "01828ddc-3600-4a41-8633-99b3a73a0eb3",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitImportRequest,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      queryImportRequests(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: t, repositoryId: i },
                s = { includeAbandoned: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "01828ddc-3600-4a41-8633-99b3a73a0eb3",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitImportRequest,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateImportRequest(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: i, repositoryId: a, importRequestId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "01828ddc-3600-4a41-8633-99b3a73a0eb3",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitImportRequest,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getItem(t, i, a, u, l, r, s, n, o, p, d, c) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((f, h) =>
            R(this, void 0, void 0, function* () {
              let T = { project: a, repositoryId: t },
                q = {
                  path: i,
                  scopePath: u,
                  recursionLevel: l,
                  includeContentMetadata: r,
                  latestProcessedChange: s,
                  download: n,
                  versionDescriptor: o,
                  includeContent: p,
                  resolveLfs: d,
                  sanitize: c,
                };
              try {
                let j = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "fb93c0db-47ed-4a31-8c20-47552878fb44",
                    T,
                    q
                  ),
                  F = j.requestUrl,
                  U = this.createRequestOptions(
                    "application/json",
                    j.apiVersion
                  ),
                  z;
                z = yield this.rest.get(F, U);
                let W = this.formatResponse(z.result, _.TypeInfo.GitItem, !1);
                f(W);
              } catch (j) {
                h(j);
              }
            })
          );
        });
      }
      getItemContent(t, i, a, u, l, r, s, n, o, p, d, c) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((f, h) =>
            R(this, void 0, void 0, function* () {
              let T = { project: a, repositoryId: t },
                q = {
                  path: i,
                  scopePath: u,
                  recursionLevel: l,
                  includeContentMetadata: r,
                  latestProcessedChange: s,
                  download: n,
                  versionDescriptor: o,
                  includeContent: p,
                  resolveLfs: d,
                  sanitize: c,
                };
              try {
                let j = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "fb93c0db-47ed-4a31-8c20-47552878fb44",
                    T,
                    q
                  ),
                  F = j.requestUrl,
                  U = j.apiVersion,
                  z = this.createAcceptHeader("application/octet-stream", U);
                f((yield this.http.get(F, { Accept: z })).message);
              } catch (j) {
                h(j);
              }
            })
          );
        });
      }
      getItems(t, i, a, u, l, r, s, n, o, p) {
        return R(this, void 0, void 0, function* () {
          return new Promise((d, c) =>
            R(this, void 0, void 0, function* () {
              let f = { project: i, repositoryId: t },
                h = {
                  scopePath: a,
                  recursionLevel: u,
                  includeContentMetadata: l,
                  latestProcessedChange: r,
                  download: s,
                  includeLinks: n,
                  versionDescriptor: o,
                  zipForUnix: p,
                };
              try {
                let T = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "fb93c0db-47ed-4a31-8c20-47552878fb44",
                    f,
                    h
                  ),
                  q = T.requestUrl,
                  j = this.createRequestOptions(
                    "application/json",
                    T.apiVersion
                  ),
                  F;
                F = yield this.rest.get(q, j);
                let U = this.formatResponse(F.result, _.TypeInfo.GitItem, !0);
                d(U);
              } catch (T) {
                c(T);
              }
            })
          );
        });
      }
      getItemText(t, i, a, u, l, r, s, n, o, p, d, c) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((f, h) =>
            R(this, void 0, void 0, function* () {
              let T = { project: a, repositoryId: t },
                q = {
                  path: i,
                  scopePath: u,
                  recursionLevel: l,
                  includeContentMetadata: r,
                  latestProcessedChange: s,
                  download: n,
                  versionDescriptor: o,
                  includeContent: p,
                  resolveLfs: d,
                  sanitize: c,
                };
              try {
                let j = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "fb93c0db-47ed-4a31-8c20-47552878fb44",
                    T,
                    q
                  ),
                  F = j.requestUrl,
                  U = j.apiVersion,
                  z = this.createAcceptHeader("text/plain", U);
                f((yield this.http.get(F, { Accept: z })).message);
              } catch (j) {
                h(j);
              }
            })
          );
        });
      }
      getItemZip(t, i, a, u, l, r, s, n, o, p, d, c) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((f, h) =>
            R(this, void 0, void 0, function* () {
              let T = { project: a, repositoryId: t },
                q = {
                  path: i,
                  scopePath: u,
                  recursionLevel: l,
                  includeContentMetadata: r,
                  latestProcessedChange: s,
                  download: n,
                  versionDescriptor: o,
                  includeContent: p,
                  resolveLfs: d,
                  sanitize: c,
                };
              try {
                let j = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "fb93c0db-47ed-4a31-8c20-47552878fb44",
                    T,
                    q
                  ),
                  F = j.requestUrl,
                  U = j.apiVersion,
                  z = this.createAcceptHeader("application/zip", U);
                f((yield this.http.get(F, { Accept: z })).message);
              } catch (j) {
                h(j);
              }
            })
          );
        });
      }
      getItemsBatch(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "630fd2e4-fb88-4f85-ad21-13f3fd1fbca9",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, _.TypeInfo.GitItem, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getMergeBases(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("otherCommitId can not be null or undefined");
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: u, repositoryNameOrId: t, commitId: i },
                p = {
                  otherCommitId: a,
                  otherCollectionId: l,
                  otherRepositoryId: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "7cf2abb6-c964-4f7e-9872-f78c66e72e9c",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  _.TypeInfo.GitCommitRef,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      createMergeRequest(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: i, repositoryNameOrId: a },
                n = { includeLinks: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "985f7ae9-844f-4906-9897-7ef41516c0e2",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(c.result, _.TypeInfo.GitMerge, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getMergeRequest(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                  project: t,
                  repositoryNameOrId: i,
                  mergeOperationId: a,
                },
                n = { includeLinks: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "985f7ae9-844f-4906-9897-7ef41516c0e2",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, _.TypeInfo.GitMerge, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createAttachment(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = {
                project: r,
                fileName: a,
                repositoryId: u,
                pullRequestId: l,
              };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965d9361-878b-413b-a494-45d5b5fd8ab7",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  );
                c.additionalHeaders = t;
                let f;
                f = yield this.rest.uploadStream("POST", d, i, c);
                let h = this.formatResponse(
                  f.result,
                  _.TypeInfo.Attachment,
                  !1
                );
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      deleteAttachment(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                fileName: t,
                repositoryId: i,
                pullRequestId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965d9361-878b-413b-a494-45d5b5fd8ab7",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getAttachmentContent(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                fileName: t,
                repositoryId: i,
                pullRequestId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965d9361-878b-413b-a494-45d5b5fd8ab7",
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("application/octet-stream", p);
                l((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getAttachments(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: t, pullRequestId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965d9361-878b-413b-a494-45d5b5fd8ab7",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.Attachment,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getAttachmentZip(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                fileName: t,
                repositoryId: i,
                pullRequestId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965d9361-878b-413b-a494-45d5b5fd8ab7",
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("application/zip", p);
                l((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createLike(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: t,
                pullRequestId: i,
                threadId: a,
                commentId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "5f2e2851-1389-425b-a00b-fb2adb3ef31b",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, null, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      deleteLike(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: t,
                pullRequestId: i,
                threadId: a,
                commentId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "5f2e2851-1389-425b-a00b-fb2adb3ef31b",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getLikes(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: t,
                pullRequestId: i,
                threadId: a,
                commentId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "5f2e2851-1389-425b-a00b-fb2adb3ef31b",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !0);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getPullRequestIterationCommits(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = {
                  project: u,
                  repositoryId: t,
                  pullRequestId: i,
                  iterationId: a,
                },
                p = { top: l, skip: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "e7ea0883-095f-4926-b5fb-f24691c26fb9",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  _.TypeInfo.GitCommitRef,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getPullRequestCommits(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: t, pullRequestId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "52823034-34a8-4576-922c-8d8b77e9e4c4",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitCommitRef,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getPullRequestConflict(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                pullRequestId: i,
                conflictId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "d840fb74-bbef-42d3-b250-564604c054a4",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitConflict,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestConflicts(t, i, a, u, l, r, s, n) {
        return R(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            R(this, void 0, void 0, function* () {
              let d = { project: a, repositoryId: t, pullRequestId: i },
                c = {
                  $skip: u,
                  $top: l,
                  includeObsolete: r,
                  excludeResolved: s,
                  onlyResolved: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "d840fb74-bbef-42d3-b250-564604c054a4",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(
                  q.result,
                  _.TypeInfo.GitConflict,
                  !0
                );
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      updatePullRequestConflict(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: i,
                pullRequestId: a,
                conflictId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "d840fb74-bbef-42d3-b250-564604c054a4",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitConflict,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      updatePullRequestConflicts(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, pullRequestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "d840fb74-bbef-42d3-b250-564604c054a4",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitConflictUpdateResult,
                  !0
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestIterationChanges(t, i, a, u, l, r, s) {
        return R(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            R(this, void 0, void 0, function* () {
              let p = {
                  project: u,
                  repositoryId: t,
                  pullRequestId: i,
                  iterationId: a,
                },
                d = { $top: l, $skip: r, $compareTo: s };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4216bdcf-b6b1-4d59-8b82-c34cc183fc8b",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(
                  T.result,
                  _.TypeInfo.GitPullRequestIterationChanges,
                  !1
                );
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      getPullRequestIteration(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                pullRequestId: i,
                iterationId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "git",
                    "d43911ee-6958-46b0-a42b-8445b8a0d004",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitPullRequestIteration,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestIterations(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryId: t, pullRequestId: i },
                n = { includeCommits: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "git",
                    "d43911ee-6958-46b0-a42b-8445b8a0d004",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitPullRequestIteration,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createPullRequestIterationStatus(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: i,
                pullRequestId: a,
                iterationId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "75cf11c5-979f-4038-a76e-058a06adf2bf",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitPullRequestStatus,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      deletePullRequestIterationStatus(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: t,
                pullRequestId: i,
                iterationId: a,
                statusId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "75cf11c5-979f-4038-a76e-058a06adf2bf",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getPullRequestIterationStatus(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: t,
                pullRequestId: i,
                iterationId: a,
                statusId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "75cf11c5-979f-4038-a76e-058a06adf2bf",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitPullRequestStatus,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getPullRequestIterationStatuses(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                pullRequestId: i,
                iterationId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "75cf11c5-979f-4038-a76e-058a06adf2bf",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitPullRequestStatus,
                  !0
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updatePullRequestIterationStatuses(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = {
                project: r,
                repositoryId: a,
                pullRequestId: u,
                iterationId: l,
              };
              (t = t || {}),
                (t["Content-Type"] = "application/json-patch+json");
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "75cf11c5-979f-4038-a76e-058a06adf2bf",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  );
                c.additionalHeaders = t;
                let f;
                f = yield this.rest.update(d, i, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      createPullRequestLabel(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: u, repositoryId: i, pullRequestId: a },
                o = { projectId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "f22387e3-984e-4c52-9c6d-fbb8f14c812d",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      deletePullRequestLabels(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                  project: u,
                  repositoryId: t,
                  pullRequestId: i,
                  labelIdOrName: a,
                },
                o = { projectId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "f22387e3-984e-4c52-9c6d-fbb8f14c812d",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.del(d, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getPullRequestLabel(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                  project: u,
                  repositoryId: t,
                  pullRequestId: i,
                  labelIdOrName: a,
                },
                o = { projectId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "f22387e3-984e-4c52-9c6d-fbb8f14c812d",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getPullRequestLabels(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryId: t, pullRequestId: i },
                n = { projectId: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "f22387e3-984e-4c52-9c6d-fbb8f14c812d",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !0);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getPullRequestProperties(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: t, pullRequestId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "48a52185-5b9e-4736-9dc1-bb1e2feac80b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updatePullRequestProperties(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: l, repositoryId: a, pullRequestId: u };
              (t = t || {}),
                (t["Content-Type"] = "application/json-patch+json");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "48a52185-5b9e-4736-9dc1-bb1e2feac80b",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                c = yield this.rest.update(p, i, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getPullRequestQuery(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "b3a6eebe-9cf0-49ea-b6cb-1a4c5f5007b0",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitPullRequestQuery,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createPullRequestReviewer(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: i,
                pullRequestId: a,
                reviewerId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4b6702c7-aa35-4b89-9c96-b9abf6d3e540",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      createPullRequestReviewers(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, pullRequestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4b6702c7-aa35-4b89-9c96-b9abf6d3e540",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, null, !0);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createUnmaterializedPullRequestReviewer(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, pullRequestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4b6702c7-aa35-4b89-9c96-b9abf6d3e540",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      deletePullRequestReviewer(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                pullRequestId: i,
                reviewerId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4b6702c7-aa35-4b89-9c96-b9abf6d3e540",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestReviewer(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                pullRequestId: i,
                reviewerId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4b6702c7-aa35-4b89-9c96-b9abf6d3e540",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestReviewers(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: t, pullRequestId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4b6702c7-aa35-4b89-9c96-b9abf6d3e540",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updatePullRequestReviewer(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: i,
                pullRequestId: a,
                reviewerId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4b6702c7-aa35-4b89-9c96-b9abf6d3e540",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      updatePullRequestReviewers(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, pullRequestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "4b6702c7-aa35-4b89-9c96-b9abf6d3e540",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestById(t, i) {
        return R(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            R(this, void 0, void 0, function* () {
              let l = { project: i, pullRequestId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "01a46dea-7d46-4d40-bc84-319e7c260d99",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  _.TypeInfo.GitPullRequest,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getPullRequestsByProject(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("searchCriteria can not be null or undefined");
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: t },
                o = {
                  searchCriteria: i,
                  maxCommentLength: a,
                  $skip: u,
                  $top: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "a5d28130-9cd2-40fa-9f08-902e7daa9efb",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  _.TypeInfo.GitPullRequest,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      createPullRequest(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryId: i },
                n = { supportsIterations: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "9946fd70-0d40-406e-b686-b4744cbbcc37",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitPullRequest,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getPullRequest(t, i, a, u, l, r, s, n) {
        return R(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            R(this, void 0, void 0, function* () {
              let d = { project: a, repositoryId: t, pullRequestId: i },
                c = {
                  maxCommentLength: u,
                  $skip: l,
                  $top: r,
                  includeCommits: s,
                  includeWorkItemRefs: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "9946fd70-0d40-406e-b686-b4744cbbcc37",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(
                  q.result,
                  _.TypeInfo.GitPullRequest,
                  !1
                );
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getPullRequests(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("searchCriteria can not be null or undefined");
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, repositoryId: t },
                p = {
                  searchCriteria: i,
                  maxCommentLength: u,
                  $skip: l,
                  $top: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "9946fd70-0d40-406e-b686-b4744cbbcc37",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  _.TypeInfo.GitPullRequest,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      updatePullRequest(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, pullRequestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "9946fd70-0d40-406e-b686-b4744cbbcc37",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitPullRequest,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      sharePullRequest(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, pullRequestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "696f3a82-47c9-487f-9117-b9d00972ca84",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createPullRequestStatus(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, pullRequestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitPullRequestStatus,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      deletePullRequestStatus(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                pullRequestId: i,
                statusId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestStatus(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                pullRequestId: i,
                statusId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitPullRequestStatus,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestStatuses(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: t, pullRequestId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitPullRequestStatus,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updatePullRequestStatuses(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: l, repositoryId: a, pullRequestId: u };
              (t = t || {}),
                (t["Content-Type"] = "application/json-patch+json");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "b5f6bb4f-8d1e-4d79-8d11-4c9172c99c35",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                c = yield this.rest.update(p, i, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      createComment(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: i,
                pullRequestId: a,
                threadId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(c.result, _.TypeInfo.Comment, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      deleteComment(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: t,
                pullRequestId: i,
                threadId: a,
                commentId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getComment(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: t,
                pullRequestId: i,
                threadId: a,
                commentId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, _.TypeInfo.Comment, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getComments(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                pullRequestId: i,
                threadId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, _.TypeInfo.Comment, !0);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateComment(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = {
                project: r,
                repositoryId: i,
                pullRequestId: a,
                threadId: u,
                commentId: l,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "965a3ec7-5ed8-455a-bdcb-835a5ea7fe7b",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, _.TypeInfo.Comment, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      createThread(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, pullRequestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "ab6e2e5d-a0b7-4153-b64a-a4efe0d49449",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitPullRequestCommentThread,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getPullRequestThread(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = {
                  project: u,
                  repositoryId: t,
                  pullRequestId: i,
                  threadId: a,
                },
                p = { $iteration: l, $baseIteration: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "ab6e2e5d-a0b7-4153-b64a-a4efe0d49449",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  _.TypeInfo.GitPullRequestCommentThread,
                  !1
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getThreads(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: a, repositoryId: t, pullRequestId: i },
                o = { $iteration: u, $baseIteration: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "ab6e2e5d-a0b7-4153-b64a-a4efe0d49449",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  _.TypeInfo.GitPullRequestCommentThread,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      updateThread(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: i,
                pullRequestId: a,
                threadId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "ab6e2e5d-a0b7-4153-b64a-a4efe0d49449",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitPullRequestCommentThread,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getPullRequestWorkItemRefs(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: t, pullRequestId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "0a637fcc-5370-4ce8-b0e8-98091f5f9482",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createPush(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "git",
                    "ea98d07b-3c87-4971-8ede-a613694ffb55",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, _.TypeInfo.GitPush, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getPush(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: a, repositoryId: t, pushId: i },
                o = { includeCommits: u, includeRefUpdates: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "git",
                    "ea98d07b-3c87-4971-8ede-a613694ffb55",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, _.TypeInfo.GitPush, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getPushes(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: i, repositoryId: t },
                o = { $skip: a, $top: u, searchCriteria: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "git",
                    "ea98d07b-3c87-4971-8ede-a613694ffb55",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, _.TypeInfo.GitPush, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      deleteRepositoryFromRecycleBin(t, i) {
        return R(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            R(this, void 0, void 0, function* () {
              let l = { project: t, repositoryId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "a663da97-81db-4eb3-8b83-287670f63073",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getRecycleBinRepositories(t) {
        return R(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            R(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "a663da97-81db-4eb3-8b83-287670f63073",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  _.TypeInfo.GitDeletedRepository,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      restoreRepositoryFromRecycleBin(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: i, repositoryId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "a663da97-81db-4eb3-8b83-287670f63073",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitRepository,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getRefs(t, i, a, u, l, r, s, n, o) {
        return R(this, void 0, void 0, function* () {
          return new Promise((p, d) =>
            R(this, void 0, void 0, function* () {
              let c = { project: i, repositoryId: t },
                f = {
                  filter: a,
                  includeLinks: u,
                  includeStatuses: l,
                  includeMyBranches: r,
                  latestStatusesOnly: s,
                  peelTags: n,
                  filterContains: o,
                };
              try {
                let h = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "2d874a60-a811-4f62-9c9f-963a6ea0a55b",
                    c,
                    f
                  ),
                  T = h.requestUrl,
                  q = this.createRequestOptions(
                    "application/json",
                    h.apiVersion
                  ),
                  j;
                j = yield this.rest.get(T, q);
                let F = this.formatResponse(j.result, _.TypeInfo.GitRef, !0);
                p(F);
              } catch (h) {
                d(h);
              }
            })
          );
        });
      }
      updateRef(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("filter can not be null or undefined");
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = { project: u, repositoryId: i },
                o = { filter: a, projectId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "2d874a60-a811-4f62-9c9f-963a6ea0a55b",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, _.TypeInfo.GitRef, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      updateRefs(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: a, repositoryId: i },
                n = { projectId: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "2d874a60-a811-4f62-9c9f-963a6ea0a55b",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitRefUpdateResult,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createFavorite(t, i) {
        return R(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            R(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "876f70af-5792-485a-a1c7-d0a7b2f42bbb",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  _.TypeInfo.GitRefFavorite,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteRefFavorite(t, i) {
        return R(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            R(this, void 0, void 0, function* () {
              let l = { project: t, favoriteId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "876f70af-5792-485a-a1c7-d0a7b2f42bbb",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getRefFavorite(t, i) {
        return R(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            R(this, void 0, void 0, function* () {
              let l = { project: t, favoriteId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "876f70af-5792-485a-a1c7-d0a7b2f42bbb",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  _.TypeInfo.GitRefFavorite,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getRefFavorites(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { repositoryId: i, identityId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "876f70af-5792-485a-a1c7-d0a7b2f42bbb",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitRefFavorite,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      createRepository(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { sourceRef: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "225f7195-f9c7-4d14-ab28-a83f7ff77e1f",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitRepository,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      deleteRepository(t, i) {
        return R(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            R(this, void 0, void 0, function* () {
              let l = { project: i, repositoryId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "225f7195-f9c7-4d14-ab28-a83f7ff77e1f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getRepositories(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { includeLinks: i, includeAllUrls: a, includeHidden: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "225f7195-f9c7-4d14-ab28-a83f7ff77e1f",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitRepository,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getRepository(t, i) {
        return R(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            R(this, void 0, void 0, function* () {
              let l = { project: i, repositoryId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "225f7195-f9c7-4d14-ab28-a83f7ff77e1f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  _.TypeInfo.GitRepository,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getRepositoryWithParent(t, i, a) {
        return R(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("includeParent can not be null or undefined");
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: t },
                s = { includeParent: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "225f7195-f9c7-4d14-ab28-a83f7ff77e1f",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitRepository,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateRepository(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: a, repositoryId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "225f7195-f9c7-4d14-ab28-a83f7ff77e1f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  _.TypeInfo.GitRepository,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getRevertConflict(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = {
                project: u,
                repositoryId: t,
                revertId: i,
                conflictId: a,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "10d7ae6d-1050-446d-852a-bd5d99f834bf",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitConflict,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getRevertConflicts(t, i, a, u, l, r, s, n) {
        return R(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            R(this, void 0, void 0, function* () {
              let d = { project: a, repositoryId: t, revertId: i },
                c = {
                  continuationToken: u,
                  $top: l,
                  excludeResolved: r,
                  onlyResolved: s,
                  includeObsolete: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "10d7ae6d-1050-446d-852a-bd5d99f834bf",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(
                  q.result,
                  _.TypeInfo.GitConflict,
                  !0
                );
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      updateRevertConflict(t, i, a, u, l) {
        return R(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            R(this, void 0, void 0, function* () {
              let n = {
                project: l,
                repositoryId: i,
                revertId: a,
                conflictId: u,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "10d7ae6d-1050-446d-852a-bd5d99f834bf",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  _.TypeInfo.GitConflict,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      updateRevertConflicts(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, repositoryId: i, revertId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "10d7ae6d-1050-446d-852a-bd5d99f834bf",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  _.TypeInfo.GitConflictUpdateResult,
                  !0
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createRevert(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: i, repositoryId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "bc866058-5449-4715-9cf1-a510b6ff193c",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, _.TypeInfo.GitRevert, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getRevert(t, i, a) {
        return R(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: t, revertId: i, repositoryId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "bc866058-5449-4715-9cf1-a510b6ff193c",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, _.TypeInfo.GitRevert, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getRevertForRefName(t, i, a) {
        return R(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("refName can not be null or undefined");
          return new Promise((u, l) =>
            R(this, void 0, void 0, function* () {
              let r = { project: t, repositoryId: i },
                s = { refName: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "bc866058-5449-4715-9cf1-a510b6ff193c",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, _.TypeInfo.GitRevert, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      createCommitStatus(t, i, a, u) {
        return R(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            R(this, void 0, void 0, function* () {
              let s = { project: u, commitId: i, repositoryId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "428dd4fb-fda5-4722-af02-9313b80305da",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, _.TypeInfo.GitStatus, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getStatuses(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, commitId: t, repositoryId: i },
                p = { top: u, skip: l, latestOnly: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "428dd4fb-fda5-4722-af02-9313b80305da",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, _.TypeInfo.GitStatus, !0);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getSuggestions(t, i) {
        return R(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            R(this, void 0, void 0, function* () {
              let l = { project: i, repositoryId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "9393b4fb-4445-4919-972b-9ad16f442d83",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTree(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, repositoryId: t, sha1: i },
                p = { projectId: u, recursive: l, fileName: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "729f6437-6f92-44ec-8bee-273a7111063c",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  _.TypeInfo.GitTreeRef,
                  !1
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getTreeZip(t, i, a, u, l, r) {
        return R(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            R(this, void 0, void 0, function* () {
              let o = { project: a, repositoryId: t, sha1: i },
                p = { projectId: u, recursive: l, fileName: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "git",
                    "729f6437-6f92-44ec-8bee-273a7111063c",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = d.apiVersion,
                  h = this.createAcceptHeader("application/zip", f);
                s((yield this.http.get(c, { Accept: h })).message);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
    };
  ys.RESOURCE_AREA_ID = "4e080c62-fa21-4fbc-8fef-2a10a2b38049";
  Lr.GitApi = ys;
});
var ka = x((Ke) => {
  "use strict";
  Object.defineProperty(Ke, "__esModule", { value: !0 });
  var lI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.IncludeServices = 1)] = "IncludeServices"),
      (e[(e.IncludeLastUserAccess = 2)] = "IncludeLastUserAccess"),
      (e[(e.IncludeInheritedDefinitionsOnly = 4)] =
        "IncludeInheritedDefinitionsOnly"),
      (e[(e.IncludeNonInheritedDefinitionsOnly = 8)] =
        "IncludeNonInheritedDefinitionsOnly");
  })((lI = Ke.ConnectOptions || (Ke.ConnectOptions = {})));
  var uI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Hosted = 1)] = "Hosted"),
      (e[(e.OnPremises = 2)] = "OnPremises");
  })((uI = Ke.DeploymentFlags || (Ke.DeploymentFlags = {})));
  var pI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.HS256 = 1)] = "HS256"),
      (e[(e.RS256 = 2)] = "RS256");
  })((pI = Ke.JWTAlgorithm || (Ke.JWTAlgorithm = {})));
  var dI;
  (function (e) {
    (e[(e.Add = 0)] = "Add"),
      (e[(e.Remove = 1)] = "Remove"),
      (e[(e.Replace = 2)] = "Replace"),
      (e[(e.Move = 3)] = "Move"),
      (e[(e.Copy = 4)] = "Copy"),
      (e[(e.Test = 5)] = "Test");
  })((dI = Ke.Operation || (Ke.Operation = {})));
  Ke.TypeInfo = {
    ConnectOptions: {
      enumValues: {
        none: 0,
        includeServices: 1,
        includeLastUserAccess: 2,
        includeInheritedDefinitionsOnly: 4,
        includeNonInheritedDefinitionsOnly: 8,
      },
    },
    DeploymentFlags: { enumValues: { none: 0, hosted: 1, onPremises: 2 } },
    JsonPatchOperation: {},
    JWTAlgorithm: { enumValues: { none: 0, hS256: 1, rS256: 2 } },
    Operation: {
      enumValues: { add: 0, remove: 1, replace: 2, move: 3, copy: 4, test: 5 },
    },
    SignedUrl: {},
    TraceFilter: {},
    VssNotificationEvent: {},
  };
  Ke.TypeInfo.JsonPatchOperation.fields = {
    op: { enumType: Ke.TypeInfo.Operation },
  };
  Ke.TypeInfo.SignedUrl.fields = { signatureExpires: { isDate: !0 } };
  Ke.TypeInfo.TraceFilter.fields = { timeCreated: { isDate: !0 } };
  Ke.TypeInfo.VssNotificationEvent.fields = {
    sourceEventCreatedTime: { isDate: !0 },
  };
});
var Bd = x((Fe) => {
  "use strict";
  Object.defineProperty(Fe, "__esModule", { value: !0 });
  var cI = ka(),
    fI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Deployment = 1)] = "Deployment"),
      (e[(e.Account = 2)] = "Account"),
      (e[(e.Collection = 4)] = "Collection"),
      (e[(e.All = 7)] = "All");
  })((fI = Fe.InheritLevel || (Fe.InheritLevel = {})));
  var hI;
  (function (e) {
    (e[(e.Context = 0)] = "Context"),
      (e[(e.WebApplication = 2)] = "WebApplication"),
      (e[(e.FullyQualified = 3)] = "FullyQualified");
  })((hI = Fe.RelativeToSetting || (Fe.RelativeToSetting = {})));
  var yI;
  (function (e) {
    (e[(e.Assigned = 0)] = "Assigned"),
      (e[(e.Active = 1)] = "Active"),
      (e[(e.Moving = 2)] = "Moving");
  })((yI = Fe.ServiceStatus || (Fe.ServiceStatus = {})));
  Fe.TypeInfo = {
    ConnectionData: {},
    InheritLevel: {
      enumValues: { none: 0, deployment: 1, account: 2, collection: 4, all: 7 },
    },
    LocationServiceData: {},
    RelativeToSetting: {
      enumValues: { context: 0, webApplication: 2, fullyQualified: 3 },
    },
    ServiceDefinition: {},
    ServiceStatus: { enumValues: { assigned: 0, active: 1, moving: 2 } },
  };
  Fe.TypeInfo.ConnectionData.fields = {
    deploymentType: { enumType: cI.TypeInfo.DeploymentFlags },
    lastUserAccess: { isDate: !0 },
    locationServiceData: { typeInfo: Fe.TypeInfo.LocationServiceData },
  };
  Fe.TypeInfo.LocationServiceData.fields = {
    serviceDefinitions: {
      isArray: !0,
      typeInfo: Fe.TypeInfo.ServiceDefinition,
    },
  };
  Fe.TypeInfo.ServiceDefinition.fields = {
    inheritLevel: { enumType: Fe.TypeInfo.InheritLevel },
    relativeToSetting: { enumType: Fe.TypeInfo.RelativeToSetting },
    status: { enumType: Fe.TypeInfo.ServiceStatus },
  };
});
var Md = x((Wr) => {
  "use strict";
  var Be =
    (Wr && Wr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Wr, "__esModule", { value: !0 });
  var vI = qe(),
    Ea = Bd(),
    Sa = class extends vI.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Locations-api", a);
      }
      getConnectionData(t, i, a) {
        return Be(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Be(this, void 0, void 0, function* () {
              let r = {},
                s = { connectOptions: t, lastChangeId: i, lastChangeId64: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "00d9565f-ed9c-4a06-9a50-00e7896ccab4",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Ea.TypeInfo.ConnectionData,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getResourceArea(t, i, a) {
        return Be(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Be(this, void 0, void 0, function* () {
              let r = { areaId: t },
                s = { enterpriseName: i, organizationName: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "e81700f7-3be2-46de-8624-2eb35882fcaa",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getResourceAreaByHost(t, i) {
        return Be(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("hostId can not be null or undefined");
          return new Promise((a, u) =>
            Be(this, void 0, void 0, function* () {
              let l = { areaId: t },
                r = { hostId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "e81700f7-3be2-46de-8624-2eb35882fcaa",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getResourceAreas(t, i) {
        return Be(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Be(this, void 0, void 0, function* () {
              let l = {},
                r = { enterpriseName: t, organizationName: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "e81700f7-3be2-46de-8624-2eb35882fcaa",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getResourceAreasByHost(t) {
        return Be(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("hostId can not be null or undefined");
          return new Promise((i, a) =>
            Be(this, void 0, void 0, function* () {
              let u = {},
                l = { hostId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "e81700f7-3be2-46de-8624-2eb35882fcaa",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      deleteServiceDefinition(t, i) {
        return Be(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Be(this, void 0, void 0, function* () {
              let l = { serviceType: t, identifier: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "d810a47d-f4f4-4a62-a03f-fa1860585c4c",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getServiceDefinition(t, i, a, u) {
        return Be(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Be(this, void 0, void 0, function* () {
              let s = { serviceType: t, identifier: i },
                n = { allowFaultIn: a, previewFaultIn: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "d810a47d-f4f4-4a62-a03f-fa1860585c4c",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Ea.TypeInfo.ServiceDefinition,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getServiceDefinitions(t) {
        return Be(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Be(this, void 0, void 0, function* () {
              let u = { serviceType: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "d810a47d-f4f4-4a62-a03f-fa1860585c4c",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  Ea.TypeInfo.ServiceDefinition,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateServiceDefinitions(t) {
        return Be(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Be(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Location",
                    "d810a47d-f4f4-4a62-a03f-fa1860585c4c",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.update(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
    };
  Wr.LocationsApi = Sa;
});
var xd = x((B) => {
  "use strict";
  Object.defineProperty(B, "__esModule", { value: !0 });
  var mI;
  (function (e) {
    (e[(e.NoDelivery = -1)] = "NoDelivery"),
      (e[(e.EachMember = 2)] = "EachMember");
  })(
    (mI =
      B.DefaultGroupDeliveryPreference ||
      (B.DefaultGroupDeliveryPreference = {}))
  );
  var gI;
  (function (e) {
    (e[(e.NotSet = 0)] = "NotSet"),
      (e[(e.Queued = 1)] = "Queued"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Cancelled = 3)] = "Cancelled"),
      (e[(e.Succeeded = 4)] = "Succeeded"),
      (e[(e.Failed = 5)] = "Failed"),
      (e[(e.TimedOut = 6)] = "TimedOut"),
      (e[(e.NotFound = 7)] = "NotFound");
  })((gI = B.EvaluationOperationStatus || (B.EvaluationOperationStatus = {})));
  var II;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.IncludeRemoteServices = 2)] = "IncludeRemoteServices");
  })((II = B.EventPublisherQueryFlags || (B.EventPublisherQueryFlags = {})));
  var TI;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.IncludeFields = 1)] = "IncludeFields");
  })((TI = B.EventTypeQueryFlags || (B.EventTypeQueryFlags = {})));
  var RI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.SuspendUnprocessed = 1)] = "SuspendUnprocessed");
  })((RI = B.NotificationOperation || (B.NotificationOperation = {})));
  var VI;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.Follows = 1)] = "Follows"),
      (e[(e.Personal = 2)] = "Personal"),
      (e[(e.PersonalAlias = 3)] = "PersonalAlias"),
      (e[(e.DirectMember = 4)] = "DirectMember"),
      (e[(e.IndirectMember = 5)] = "IndirectMember"),
      (e[(e.GroupAlias = 6)] = "GroupAlias"),
      (e[(e.SubscriptionAlias = 7)] = "SubscriptionAlias"),
      (e[(e.SingleRole = 8)] = "SingleRole"),
      (e[(e.DirectMemberGroupRole = 9)] = "DirectMemberGroupRole"),
      (e[(e.InDirectMemberGroupRole = 10)] = "InDirectMemberGroupRole"),
      (e[(e.AliasMemberGroupRole = 11)] = "AliasMemberGroupRole");
  })((VI = B.NotificationReasonType || (B.NotificationReasonType = {})));
  var bI;
  (function (e) {
    (e[(e.NotificationBySubscription = 0)] = "NotificationBySubscription"),
      (e[(e.EventsByEventType = 1)] = "EventsByEventType"),
      (e[(e.NotificationByEventType = 2)] = "NotificationByEventType"),
      (e[(e.EventsByEventTypePerUser = 3)] = "EventsByEventTypePerUser"),
      (e[(e.NotificationByEventTypePerUser = 4)] =
        "NotificationByEventTypePerUser"),
      (e[(e.Events = 5)] = "Events"),
      (e[(e.Notifications = 6)] = "Notifications"),
      (e[(e.NotificationFailureBySubscription = 7)] =
        "NotificationFailureBySubscription"),
      (e[(e.UnprocessedRangeStart = 100)] = "UnprocessedRangeStart"),
      (e[(e.UnprocessedEventsByPublisher = 101)] =
        "UnprocessedEventsByPublisher"),
      (e[(e.UnprocessedEventDelayByPublisher = 102)] =
        "UnprocessedEventDelayByPublisher"),
      (e[(e.UnprocessedNotificationsByChannelByPublisher = 103)] =
        "UnprocessedNotificationsByChannelByPublisher"),
      (e[(e.UnprocessedNotificationDelayByChannelByPublisher = 104)] =
        "UnprocessedNotificationDelayByChannelByPublisher"),
      (e[(e.DelayRangeStart = 200)] = "DelayRangeStart"),
      (e[(e.TotalPipelineTime = 201)] = "TotalPipelineTime"),
      (e[(e.NotificationPipelineTime = 202)] = "NotificationPipelineTime"),
      (e[(e.EventPipelineTime = 203)] = "EventPipelineTime"),
      (e[(e.HourlyRangeStart = 1e3)] = "HourlyRangeStart"),
      (e[(e.HourlyNotificationBySubscription = 1001)] =
        "HourlyNotificationBySubscription"),
      (e[(e.HourlyEventsByEventTypePerUser = 1002)] =
        "HourlyEventsByEventTypePerUser"),
      (e[(e.HourlyEvents = 1003)] = "HourlyEvents"),
      (e[(e.HourlyNotifications = 1004)] = "HourlyNotifications"),
      (e[(e.HourlyUnprocessedEventsByPublisher = 1101)] =
        "HourlyUnprocessedEventsByPublisher"),
      (e[(e.HourlyUnprocessedEventDelayByPublisher = 1102)] =
        "HourlyUnprocessedEventDelayByPublisher"),
      (e[(e.HourlyUnprocessedNotificationsByChannelByPublisher = 1103)] =
        "HourlyUnprocessedNotificationsByChannelByPublisher"),
      (e[(e.HourlyUnprocessedNotificationDelayByChannelByPublisher = 1104)] =
        "HourlyUnprocessedNotificationDelayByChannelByPublisher"),
      (e[(e.HourlyTotalPipelineTime = 1201)] = "HourlyTotalPipelineTime"),
      (e[(e.HourlyNotificationPipelineTime = 1202)] =
        "HourlyNotificationPipelineTime"),
      (e[(e.HourlyEventPipelineTime = 1203)] = "HourlyEventPipelineTime");
  })((bI = B.NotificationStatisticType || (B.NotificationStatisticType = {})));
  var DI;
  (function (e) {
    (e[(e.NoDelivery = -1)] = "NoDelivery"),
      (e[(e.PreferredEmailAddress = 1)] = "PreferredEmailAddress"),
      (e[(e.EachMember = 2)] = "EachMember"),
      (e[(e.UseDefault = 3)] = "UseDefault");
  })(
    (DI =
      B.NotificationSubscriberDeliveryPreference ||
      (B.NotificationSubscriberDeliveryPreference = {}))
  );
  var wI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.DeliveryPreferencesEditable = 2)] = "DeliveryPreferencesEditable"),
      (e[(e.SupportsPreferredEmailAddressDelivery = 4)] =
        "SupportsPreferredEmailAddressDelivery"),
      (e[(e.SupportsEachMemberDelivery = 8)] = "SupportsEachMemberDelivery"),
      (e[(e.SupportsNoDelivery = 16)] = "SupportsNoDelivery"),
      (e[(e.IsUser = 32)] = "IsUser"),
      (e[(e.IsGroup = 64)] = "IsGroup"),
      (e[(e.IsTeam = 128)] = "IsTeam");
  })((wI = B.SubscriberFlags || (B.SubscriberFlags = {})));
  var qI;
  (function (e) {
    (e[(e.String = 1)] = "String"),
      (e[(e.Integer = 2)] = "Integer"),
      (e[(e.DateTime = 3)] = "DateTime"),
      (e[(e.PlainText = 5)] = "PlainText"),
      (e[(e.Html = 7)] = "Html"),
      (e[(e.TreePath = 8)] = "TreePath"),
      (e[(e.History = 9)] = "History"),
      (e[(e.Double = 10)] = "Double"),
      (e[(e.Guid = 11)] = "Guid"),
      (e[(e.Boolean = 12)] = "Boolean"),
      (e[(e.Identity = 13)] = "Identity"),
      (e[(e.PicklistInteger = 14)] = "PicklistInteger"),
      (e[(e.PicklistString = 15)] = "PicklistString"),
      (e[(e.PicklistDouble = 16)] = "PicklistDouble"),
      (e[(e.TeamProject = 17)] = "TeamProject");
  })((qI = B.SubscriptionFieldType || (B.SubscriptionFieldType = {})));
  var PI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.GroupSubscription = 1)] = "GroupSubscription"),
      (e[(e.ContributedSubscription = 2)] = "ContributedSubscription"),
      (e[(e.CanOptOut = 4)] = "CanOptOut"),
      (e[(e.TeamSubscription = 8)] = "TeamSubscription"),
      (e[(e.OneActorMatches = 16)] = "OneActorMatches");
  })((PI = B.SubscriptionFlags || (B.SubscriptionFlags = {})));
  var CI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.View = 1)] = "View"),
      (e[(e.Edit = 2)] = "Edit"),
      (e[(e.Delete = 4)] = "Delete");
  })((CI = B.SubscriptionPermissions || (B.SubscriptionPermissions = {})));
  var jI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.IncludeInvalidSubscriptions = 2)] = "IncludeInvalidSubscriptions"),
      (e[(e.IncludeDeletedSubscriptions = 4)] = "IncludeDeletedSubscriptions"),
      (e[(e.IncludeFilterDetails = 8)] = "IncludeFilterDetails"),
      (e[(e.AlwaysReturnBasicInformation = 16)] =
        "AlwaysReturnBasicInformation"),
      (e[(e.IncludeSystemSubscriptions = 32)] = "IncludeSystemSubscriptions");
  })((jI = B.SubscriptionQueryFlags || (B.SubscriptionQueryFlags = {})));
  var AI;
  (function (e) {
    (e[(e.JailedByNotificationsVolume = -200)] = "JailedByNotificationsVolume"),
      (e[(e.PendingDeletion = -100)] = "PendingDeletion"),
      (e[(e.DisabledArgumentException = -12)] = "DisabledArgumentException"),
      (e[(e.DisabledProjectInvalid = -11)] = "DisabledProjectInvalid"),
      (e[(e.DisabledMissingPermissions = -10)] = "DisabledMissingPermissions"),
      (e[(e.DisabledFromProbation = -9)] = "DisabledFromProbation"),
      (e[(e.DisabledInactiveIdentity = -8)] = "DisabledInactiveIdentity"),
      (e[(e.DisabledMessageQueueNotSupported = -7)] =
        "DisabledMessageQueueNotSupported"),
      (e[(e.DisabledMissingIdentity = -6)] = "DisabledMissingIdentity"),
      (e[(e.DisabledInvalidRoleExpression = -5)] =
        "DisabledInvalidRoleExpression"),
      (e[(e.DisabledInvalidPathClause = -4)] = "DisabledInvalidPathClause"),
      (e[(e.DisabledAsDuplicateOfDefault = -3)] =
        "DisabledAsDuplicateOfDefault"),
      (e[(e.DisabledByAdmin = -2)] = "DisabledByAdmin"),
      (e[(e.Disabled = -1)] = "Disabled"),
      (e[(e.Enabled = 0)] = "Enabled"),
      (e[(e.EnabledOnProbation = 1)] = "EnabledOnProbation");
  })((AI = B.SubscriptionStatus || (B.SubscriptionStatus = {})));
  var OI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.IncludeUser = 1)] = "IncludeUser"),
      (e[(e.IncludeGroup = 2)] = "IncludeGroup"),
      (e[(e.IncludeUserAndGroup = 4)] = "IncludeUserAndGroup"),
      (e[(e.IncludeEventTypeInformation = 22)] = "IncludeEventTypeInformation");
  })(
    (OI =
      B.SubscriptionTemplateQueryFlags ||
      (B.SubscriptionTemplateQueryFlags = {}))
  );
  var UI;
  (function (e) {
    (e[(e.User = 0)] = "User"),
      (e[(e.Team = 1)] = "Team"),
      (e[(e.Both = 2)] = "Both"),
      (e[(e.None = 3)] = "None");
  })((UI = B.SubscriptionTemplateType || (B.SubscriptionTemplateType = {})));
  B.TypeInfo = {
    ActorNotificationReason: {},
    BatchNotificationOperation: {},
    DefaultGroupDeliveryPreference: {
      enumValues: { noDelivery: -1, eachMember: 2 },
    },
    EvaluationOperationStatus: {
      enumValues: {
        notSet: 0,
        queued: 1,
        inProgress: 2,
        cancelled: 3,
        succeeded: 4,
        failed: 5,
        timedOut: 6,
        notFound: 7,
      },
    },
    EventBacklogStatus: {},
    EventProcessingLog: {},
    EventPublisherQueryFlags: {
      enumValues: { none: 0, includeRemoteServices: 2 },
    },
    EventTypeQueryFlags: { enumValues: { none: 0, includeFields: 1 } },
    INotificationDiagnosticLog: {},
    NotificationAdminSettings: {},
    NotificationAdminSettingsUpdateParameters: {},
    NotificationBacklogStatus: {},
    NotificationDeliveryLog: {},
    NotificationDiagnosticLog: {},
    NotificationEventBacklogStatus: {},
    NotificationEventField: {},
    NotificationEventFieldType: {},
    NotificationEventType: {},
    NotificationJobDiagnosticLog: {},
    NotificationOperation: { enumValues: { none: 0, suspendUnprocessed: 1 } },
    NotificationReason: {},
    NotificationReasonType: {
      enumValues: {
        unknown: 0,
        follows: 1,
        personal: 2,
        personalAlias: 3,
        directMember: 4,
        indirectMember: 5,
        groupAlias: 6,
        subscriptionAlias: 7,
        singleRole: 8,
        directMemberGroupRole: 9,
        inDirectMemberGroupRole: 10,
        aliasMemberGroupRole: 11,
      },
    },
    NotificationStatistic: {},
    NotificationStatisticsQuery: {},
    NotificationStatisticsQueryConditions: {},
    NotificationStatisticType: {
      enumValues: {
        notificationBySubscription: 0,
        eventsByEventType: 1,
        notificationByEventType: 2,
        eventsByEventTypePerUser: 3,
        notificationByEventTypePerUser: 4,
        events: 5,
        notifications: 6,
        notificationFailureBySubscription: 7,
        unprocessedRangeStart: 100,
        unprocessedEventsByPublisher: 101,
        unprocessedEventDelayByPublisher: 102,
        unprocessedNotificationsByChannelByPublisher: 103,
        unprocessedNotificationDelayByChannelByPublisher: 104,
        delayRangeStart: 200,
        totalPipelineTime: 201,
        notificationPipelineTime: 202,
        eventPipelineTime: 203,
        hourlyRangeStart: 1e3,
        hourlyNotificationBySubscription: 1001,
        hourlyEventsByEventTypePerUser: 1002,
        hourlyEvents: 1003,
        hourlyNotifications: 1004,
        hourlyUnprocessedEventsByPublisher: 1101,
        hourlyUnprocessedEventDelayByPublisher: 1102,
        hourlyUnprocessedNotificationsByChannelByPublisher: 1103,
        hourlyUnprocessedNotificationDelayByChannelByPublisher: 1104,
        hourlyTotalPipelineTime: 1201,
        hourlyNotificationPipelineTime: 1202,
        hourlyEventPipelineTime: 1203,
      },
    },
    NotificationSubscriber: {},
    NotificationSubscriberDeliveryPreference: {
      enumValues: {
        noDelivery: -1,
        preferredEmailAddress: 1,
        eachMember: 2,
        useDefault: 3,
      },
    },
    NotificationSubscriberUpdateParameters: {},
    NotificationSubscription: {},
    NotificationSubscriptionTemplate: {},
    NotificationSubscriptionUpdateParameters: {},
    SubscriberFlags: {
      enumValues: {
        none: 0,
        deliveryPreferencesEditable: 2,
        supportsPreferredEmailAddressDelivery: 4,
        supportsEachMemberDelivery: 8,
        supportsNoDelivery: 16,
        isUser: 32,
        isGroup: 64,
        isTeam: 128,
      },
    },
    SubscriptionDiagnostics: {},
    SubscriptionEvaluationRequest: {},
    SubscriptionEvaluationResult: {},
    SubscriptionFieldType: {
      enumValues: {
        string: 1,
        integer: 2,
        dateTime: 3,
        plainText: 5,
        html: 7,
        treePath: 8,
        history: 9,
        double: 10,
        guid: 11,
        boolean: 12,
        identity: 13,
        picklistInteger: 14,
        picklistString: 15,
        picklistDouble: 16,
        teamProject: 17,
      },
    },
    SubscriptionFlags: {
      enumValues: {
        none: 0,
        groupSubscription: 1,
        contributedSubscription: 2,
        canOptOut: 4,
        teamSubscription: 8,
        oneActorMatches: 16,
      },
    },
    SubscriptionPermissions: {
      enumValues: { none: 0, view: 1, edit: 2, delete: 4 },
    },
    SubscriptionQuery: {},
    SubscriptionQueryCondition: {},
    SubscriptionQueryFlags: {
      enumValues: {
        none: 0,
        includeInvalidSubscriptions: 2,
        includeDeletedSubscriptions: 4,
        includeFilterDetails: 8,
        alwaysReturnBasicInformation: 16,
        includeSystemSubscriptions: 32,
      },
    },
    SubscriptionStatus: {
      enumValues: {
        jailedByNotificationsVolume: -200,
        pendingDeletion: -100,
        disabledArgumentException: -12,
        disabledProjectInvalid: -11,
        disabledMissingPermissions: -10,
        disabledFromProbation: -9,
        disabledInactiveIdentity: -8,
        disabledMessageQueueNotSupported: -7,
        disabledMissingIdentity: -6,
        disabledInvalidRoleExpression: -5,
        disabledInvalidPathClause: -4,
        disabledAsDuplicateOfDefault: -3,
        disabledByAdmin: -2,
        disabled: -1,
        enabled: 0,
        enabledOnProbation: 1,
      },
    },
    SubscriptionTemplateQueryFlags: {
      enumValues: {
        none: 0,
        includeUser: 1,
        includeGroup: 2,
        includeUserAndGroup: 4,
        includeEventTypeInformation: 22,
      },
    },
    SubscriptionTemplateType: {
      enumValues: { user: 0, team: 1, both: 2, none: 3 },
    },
    SubscriptionTraceDiagnosticLog: {},
    SubscriptionTraceEventProcessingLog: {},
    SubscriptionTraceNotificationDeliveryLog: {},
    SubscriptionTracing: {},
  };
  B.TypeInfo.ActorNotificationReason.fields = {
    notificationReasonType: { enumType: B.TypeInfo.NotificationReasonType },
  };
  B.TypeInfo.BatchNotificationOperation.fields = {
    notificationOperation: { enumType: B.TypeInfo.NotificationOperation },
  };
  B.TypeInfo.EventBacklogStatus.fields = {
    captureTime: { isDate: !0 },
    lastEventBatchStartTime: { isDate: !0 },
    lastEventProcessedTime: { isDate: !0 },
    lastJobBatchStartTime: { isDate: !0 },
    lastJobProcessedTime: { isDate: !0 },
    oldestPendingEventTime: { isDate: !0 },
  };
  B.TypeInfo.EventProcessingLog.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  B.TypeInfo.INotificationDiagnosticLog.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  B.TypeInfo.NotificationAdminSettings.fields = {
    defaultGroupDeliveryPreference: {
      enumType: B.TypeInfo.DefaultGroupDeliveryPreference,
    },
  };
  B.TypeInfo.NotificationAdminSettingsUpdateParameters.fields = {
    defaultGroupDeliveryPreference: {
      enumType: B.TypeInfo.DefaultGroupDeliveryPreference,
    },
  };
  B.TypeInfo.NotificationBacklogStatus.fields = {
    captureTime: { isDate: !0 },
    lastJobBatchStartTime: { isDate: !0 },
    lastJobProcessedTime: { isDate: !0 },
    lastNotificationBatchStartTime: { isDate: !0 },
    lastNotificationProcessedTime: { isDate: !0 },
    oldestPendingNotificationTime: { isDate: !0 },
  };
  B.TypeInfo.NotificationDeliveryLog.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  B.TypeInfo.NotificationDiagnosticLog.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  B.TypeInfo.NotificationEventBacklogStatus.fields = {
    eventBacklogStatus: {
      isArray: !0,
      typeInfo: B.TypeInfo.EventBacklogStatus,
    },
    notificationBacklogStatus: {
      isArray: !0,
      typeInfo: B.TypeInfo.NotificationBacklogStatus,
    },
  };
  B.TypeInfo.NotificationEventField.fields = {
    fieldType: { typeInfo: B.TypeInfo.NotificationEventFieldType },
  };
  B.TypeInfo.NotificationEventFieldType.fields = {
    subscriptionFieldType: { enumType: B.TypeInfo.SubscriptionFieldType },
  };
  B.TypeInfo.NotificationEventType.fields = {
    fields: {
      isDictionary: !0,
      dictionaryValueTypeInfo: B.TypeInfo.NotificationEventField,
    },
  };
  B.TypeInfo.NotificationJobDiagnosticLog.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  B.TypeInfo.NotificationReason.fields = {
    notificationReasonType: { enumType: B.TypeInfo.NotificationReasonType },
  };
  B.TypeInfo.NotificationStatistic.fields = {
    date: { isDate: !0 },
    type: { enumType: B.TypeInfo.NotificationStatisticType },
  };
  B.TypeInfo.NotificationStatisticsQuery.fields = {
    conditions: {
      isArray: !0,
      typeInfo: B.TypeInfo.NotificationStatisticsQueryConditions,
    },
  };
  B.TypeInfo.NotificationStatisticsQueryConditions.fields = {
    endDate: { isDate: !0 },
    startDate: { isDate: !0 },
    type: { enumType: B.TypeInfo.NotificationStatisticType },
  };
  B.TypeInfo.NotificationSubscriber.fields = {
    deliveryPreference: {
      enumType: B.TypeInfo.NotificationSubscriberDeliveryPreference,
    },
    flags: { enumType: B.TypeInfo.SubscriberFlags },
  };
  B.TypeInfo.NotificationSubscriberUpdateParameters.fields = {
    deliveryPreference: {
      enumType: B.TypeInfo.NotificationSubscriberDeliveryPreference,
    },
  };
  B.TypeInfo.NotificationSubscription.fields = {
    diagnostics: { typeInfo: B.TypeInfo.SubscriptionDiagnostics },
    flags: { enumType: B.TypeInfo.SubscriptionFlags },
    modifiedDate: { isDate: !0 },
    permissions: { enumType: B.TypeInfo.SubscriptionPermissions },
    status: { enumType: B.TypeInfo.SubscriptionStatus },
  };
  B.TypeInfo.NotificationSubscriptionTemplate.fields = {
    notificationEventInformation: {
      typeInfo: B.TypeInfo.NotificationEventType,
    },
    type: { enumType: B.TypeInfo.SubscriptionTemplateType },
  };
  B.TypeInfo.NotificationSubscriptionUpdateParameters.fields = {
    status: { enumType: B.TypeInfo.SubscriptionStatus },
  };
  B.TypeInfo.SubscriptionDiagnostics.fields = {
    deliveryResults: { typeInfo: B.TypeInfo.SubscriptionTracing },
    deliveryTracing: { typeInfo: B.TypeInfo.SubscriptionTracing },
    evaluationTracing: { typeInfo: B.TypeInfo.SubscriptionTracing },
  };
  B.TypeInfo.SubscriptionEvaluationRequest.fields = {
    minEventsCreatedDate: { isDate: !0 },
  };
  B.TypeInfo.SubscriptionEvaluationResult.fields = {
    evaluationJobStatus: { enumType: B.TypeInfo.EvaluationOperationStatus },
  };
  B.TypeInfo.SubscriptionQuery.fields = {
    conditions: {
      isArray: !0,
      typeInfo: B.TypeInfo.SubscriptionQueryCondition,
    },
    queryFlags: { enumType: B.TypeInfo.SubscriptionQueryFlags },
  };
  B.TypeInfo.SubscriptionQueryCondition.fields = {
    flags: { enumType: B.TypeInfo.SubscriptionFlags },
  };
  B.TypeInfo.SubscriptionTraceDiagnosticLog.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  B.TypeInfo.SubscriptionTraceEventProcessingLog.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  B.TypeInfo.SubscriptionTraceNotificationDeliveryLog.fields = {
    endTime: { isDate: !0 },
    startTime: { isDate: !0 },
  };
  B.TypeInfo.SubscriptionTracing.fields = {
    endDate: { isDate: !0 },
    startDate: { isDate: !0 },
  };
});
var Gd = x(($r) => {
  "use strict";
  var K =
    ($r && $r.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty($r, "__esModule", { value: !0 });
  var kI = qe(),
    Me = xd(),
    _d = ka(),
    Na = class extends kI.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Notification-api", a);
      }
      performBatchNotificationOperations(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "8f3c6ab2-5bae-4537-b16e-f84e0955599e",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      listLogs(t, i, a, u) {
        return K(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            K(this, void 0, void 0, function* () {
              let s = { source: t, entryId: i },
                n = { startTime: a, endTime: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "991842f3-eb16-4aea-ac81-81353ef2b75c",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Me.TypeInfo.INotificationDiagnosticLog,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getSubscriptionDiagnostics(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = { subscriptionId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "20f1929d-4be7-4c2e-a74e-d47640ff3418",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  Me.TypeInfo.SubscriptionDiagnostics,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateSubscriptionDiagnostics(t, i) {
        return K(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            K(this, void 0, void 0, function* () {
              let l = { subscriptionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "20f1929d-4be7-4c2e-a74e-d47640ff3418",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Me.TypeInfo.SubscriptionDiagnostics,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      publishEvent(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "14c57b7a-c0e6-4555-9f51-e067188fdd8e",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  _d.TypeInfo.VssNotificationEvent,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      transformEvent(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "9463a800-1b44-450e-9083-f948ea174b45",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      queryEventTypes(t, i) {
        return K(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            K(this, void 0, void 0, function* () {
              let l = { eventType: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "b5bbdd21-c178-4398-b6db-0166d910028a",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Me.TypeInfo.NotificationEventField,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getEventType(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = { eventType: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "cc84fb5f-6247-4c7a-aeae-e5a3c3fddb21",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  Me.TypeInfo.NotificationEventType,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      listEventTypes(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {},
                l = { publisherId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "cc84fb5f-6247-4c7a-aeae-e5a3c3fddb21",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Me.TypeInfo.NotificationEventType,
                  !0
                );
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getNotificationReasons(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = { notificationId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "19824fa9-1c76-40e6-9cce-cf0b9ca1cb60",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  Me.TypeInfo.NotificationReason,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      listNotificationReasons(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {},
                l = { notificationIds: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "19824fa9-1c76-40e6-9cce-cf0b9ca1cb60",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Me.TypeInfo.NotificationReason,
                  !0
                );
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getSettings() {
        return K(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            K(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "cbe076d8-2803-45ff-8d8d-44653686ea2a",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(
                  s.result,
                  Me.TypeInfo.NotificationAdminSettings,
                  !1
                );
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      updateSettings(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "cbe076d8-2803-45ff-8d8d-44653686ea2a",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.update(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  Me.TypeInfo.NotificationAdminSettings,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getSubscriber(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = { subscriberId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "4d5caff1-25ba-430b-b808-7a1f352cc197",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  Me.TypeInfo.NotificationSubscriber,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateSubscriber(t, i) {
        return K(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            K(this, void 0, void 0, function* () {
              let l = { subscriberId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "4d5caff1-25ba-430b-b808-7a1f352cc197",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Me.TypeInfo.NotificationSubscriber,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      querySubscriptions(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "6864db85-08c0-4006-8e8e-cc1bebe31675",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  Me.TypeInfo.NotificationSubscription,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      createSubscription(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "70f911d6-abac-488c-85b3-a206bf57e165",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  Me.TypeInfo.NotificationSubscription,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteSubscription(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = { subscriptionId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "70f911d6-abac-488c-85b3-a206bf57e165",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getSubscription(t, i) {
        return K(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            K(this, void 0, void 0, function* () {
              let l = { subscriptionId: t },
                r = { queryFlags: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "70f911d6-abac-488c-85b3-a206bf57e165",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Me.TypeInfo.NotificationSubscription,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      listSubscriptions(t, i, a) {
        return K(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            K(this, void 0, void 0, function* () {
              let r = {},
                s = { targetId: t, ids: i && i.join(","), queryFlags: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "70f911d6-abac-488c-85b3-a206bf57e165",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Me.TypeInfo.NotificationSubscription,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateSubscription(t, i) {
        return K(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            K(this, void 0, void 0, function* () {
              let l = { subscriptionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "70f911d6-abac-488c-85b3-a206bf57e165",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Me.TypeInfo.NotificationSubscription,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getSubscriptionTemplates() {
        return K(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            K(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "fa5d24ba-7484-4f3d-888d-4ec6b1974082",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(
                  s.result,
                  Me.TypeInfo.NotificationSubscriptionTemplate,
                  !0
                );
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      publishTokenEvent(t) {
        return K(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            K(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "31dc86a2-67e8-4452-99a4-2b301ba28291",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  _d.TypeInfo.VssNotificationEvent,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateSubscriptionUserSettings(t, i, a) {
        return K(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            K(this, void 0, void 0, function* () {
              let r = { subscriptionId: i, userId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "notification",
                    "ed5a3dff-aeb5-41b1-b4f7-89e66e58b62e",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
    };
  $r.NotificationApi = Na;
});
var Fd = x((Hr) => {
  "use strict";
  var Ce =
    (Hr && Hr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Hr, "__esModule", { value: !0 });
  var EI = qe(),
    Bt = Oa(),
    vs = class extends EI.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Policy-api", a);
      }
      createPolicyConfiguration(t, i) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ce(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "dad91cbe-d183-45f8-9c6e-9c1164472121",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Bt.TypeInfo.PolicyConfiguration,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deletePolicyConfiguration(t, i) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ce(this, void 0, void 0, function* () {
              let l = { project: t, configurationId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "dad91cbe-d183-45f8-9c6e-9c1164472121",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getPolicyConfiguration(t, i) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ce(this, void 0, void 0, function* () {
              let l = { project: t, configurationId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "dad91cbe-d183-45f8-9c6e-9c1164472121",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Bt.TypeInfo.PolicyConfiguration,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getPolicyConfigurations(t, i, a) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Ce(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { scope: i, policyType: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "dad91cbe-d183-45f8-9c6e-9c1164472121",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Bt.TypeInfo.PolicyConfiguration,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updatePolicyConfiguration(t, i, a) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Ce(this, void 0, void 0, function* () {
              let r = { project: i, configurationId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "dad91cbe-d183-45f8-9c6e-9c1164472121",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  Bt.TypeInfo.PolicyConfiguration,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getPolicyEvaluation(t, i) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ce(this, void 0, void 0, function* () {
              let l = { project: t, evaluationId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "46aecb7a-5d2c-4647-897b-0209505a9fe4",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Bt.TypeInfo.PolicyEvaluationRecord,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      requeuePolicyEvaluation(t, i) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ce(this, void 0, void 0, function* () {
              let l = { project: t, evaluationId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "46aecb7a-5d2c-4647-897b-0209505a9fe4",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, null, n);
                let p = this.formatResponse(
                  o.result,
                  Bt.TypeInfo.PolicyEvaluationRecord,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getPolicyEvaluations(t, i, a, u, l) {
        return Ce(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("artifactId can not be null or undefined");
          return new Promise((r, s) =>
            Ce(this, void 0, void 0, function* () {
              let n = { project: t },
                o = {
                  artifactId: i,
                  includeNotApplicable: a,
                  $top: u,
                  $skip: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "c23ddff5-229c-4d04-a80b-0fdce9f360c8",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  Bt.TypeInfo.PolicyEvaluationRecord,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getPolicyConfigurationRevision(t, i, a) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            Ce(this, void 0, void 0, function* () {
              let r = { project: t, configurationId: i, revisionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "fe1e68a2-60d3-43cb-855b-85e41ae97c95",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Bt.TypeInfo.PolicyConfiguration,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getPolicyConfigurationRevisions(t, i, a, u) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            Ce(this, void 0, void 0, function* () {
              let s = { project: t, configurationId: i },
                n = { $top: a, $skip: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "fe1e68a2-60d3-43cb-855b-85e41ae97c95",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Bt.TypeInfo.PolicyConfiguration,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getPolicyType(t, i) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            Ce(this, void 0, void 0, function* () {
              let l = { project: t, typeId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "44096322-2d3d-466a-bb30-d1b7de69f61f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getPolicyTypes(t) {
        return Ce(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Ce(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "policy",
                    "44096322-2d3d-466a-bb30-d1b7de69f61f",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
    };
  vs.RESOURCE_AREA_ID = "fb13a388-40dd-4a04-b530-013a739c72ef";
  Hr.PolicyApi = vs;
});
var Ld = x((Ae) => {
  "use strict";
  Object.defineProperty(Ae, "__esModule", { value: !0 });
  var SI;
  (function (e) {
    (e[(e.Small = 0)] = "Small"),
      (e[(e.Medium = 1)] = "Medium"),
      (e[(e.Large = 2)] = "Large");
  })((SI = Ae.AvatarSize || (Ae.AvatarSize = {})));
  Ae.TypeInfo = {
    AttributeDescriptor: { fields: null },
    AttributesContainer: { fields: null },
    Avatar: { fields: null },
    AvatarSize: { enumValues: { small: 0, medium: 1, large: 2 } },
    CoreProfileAttribute: { fields: null },
    Country: { fields: null },
    CreateProfileContext: { fields: null },
    GeoRegion: { fields: null },
    Profile: { fields: null },
    ProfileAttribute: { fields: null },
    ProfileAttributeBase: { fields: null },
    ProfileRegion: { fields: null },
    ProfileRegions: { fields: null },
  };
  Ae.TypeInfo.AttributeDescriptor.fields = {};
  Ae.TypeInfo.AttributesContainer.fields = { attributes: {} };
  Ae.TypeInfo.Avatar.fields = {
    size: { enumType: Ae.TypeInfo.AvatarSize },
    timeStamp: { isDate: !0 },
  };
  Ae.TypeInfo.CoreProfileAttribute.fields = {
    descriptor: { typeInfo: Ae.TypeInfo.AttributeDescriptor },
    timeStamp: { isDate: !0 },
  };
  Ae.TypeInfo.Country.fields = {};
  Ae.TypeInfo.CreateProfileContext.fields = {};
  Ae.TypeInfo.GeoRegion.fields = {};
  Ae.TypeInfo.Profile.fields = {
    applicationContainer: { typeInfo: Ae.TypeInfo.AttributesContainer },
    coreAttributes: {},
    timeStamp: { isDate: !0 },
  };
  Ae.TypeInfo.ProfileAttribute.fields = {
    descriptor: { typeInfo: Ae.TypeInfo.AttributeDescriptor },
    timeStamp: { isDate: !0 },
  };
  Ae.TypeInfo.ProfileAttributeBase.fields = {
    descriptor: { typeInfo: Ae.TypeInfo.AttributeDescriptor },
    timeStamp: { isDate: !0 },
  };
  Ae.TypeInfo.ProfileRegion.fields = {};
  Ae.TypeInfo.ProfileRegions.fields = {
    regions: { isArray: !0, typeInfo: Ae.TypeInfo.ProfileRegion },
  };
});
var Wd = x((zr) => {
  "use strict";
  var ue =
    (zr && zr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(zr, "__esModule", { value: !0 });
  var NI = qe(),
    Kt = Ld(),
    Ba = class extends NI.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Profile-api", a);
      }
      deleteProfileAttribute(t, i) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            ue(this, void 0, void 0, function* () {
              let l = { id: t },
                r = { descriptor: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "3.2-preview.2",
                    "Profile",
                    "1392b6ac-d511-492e-af5b-2263e5545a5d",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getProfileAttribute(t, i) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            ue(this, void 0, void 0, function* () {
              let l = { id: t },
                r = { descriptor: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "3.2-preview.2",
                    "Profile",
                    "1392b6ac-d511-492e-af5b-2263e5545a5d",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Kt.TypeInfo.ProfileAttribute,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getProfileAttributes(t, i, a, u, l, r) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            ue(this, void 0, void 0, function* () {
              let o = { id: t },
                p = {
                  partition: i,
                  modifiedSince: a,
                  modifiedAfterRevision: u,
                  withCoreAttributes: l,
                  coreAttributes: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "3.2-preview.2",
                    "Profile",
                    "1392b6ac-d511-492e-af5b-2263e5545a5d",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  Kt.TypeInfo.ProfileAttribute,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      setProfileAttribute(t, i, a) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            ue(this, void 0, void 0, function* () {
              let r = { id: i },
                s = { descriptor: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "3.2-preview.2",
                    "Profile",
                    "1392b6ac-d511-492e-af5b-2263e5545a5d",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      setProfileAttributes(t, i) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            ue(this, void 0, void 0, function* () {
              let l = { id: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "3.2-preview.2",
                    "Profile",
                    "1392b6ac-d511-492e-af5b-2263e5545a5d",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAvatar(t, i, a) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            ue(this, void 0, void 0, function* () {
              let r = { id: t },
                s = { size: i, format: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "67436615-b382-462a-b659-5367a492fb3c",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, Kt.TypeInfo.Avatar, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAvatarPreview(t, i, a, u, l) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            ue(this, void 0, void 0, function* () {
              let n = { id: i },
                o = { size: a, format: u, displayName: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "67436615-b382-462a-b659-5367a492fb3c",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, t, c);
                let h = this.formatResponse(f.result, Kt.TypeInfo.Avatar, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      resetAvatar(t) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            ue(this, void 0, void 0, function* () {
              let u = { id: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "67436615-b382-462a-b659-5367a492fb3c",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      setAvatar(t, i) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            ue(this, void 0, void 0, function* () {
              let l = { id: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "67436615-b382-462a-b659-5367a492fb3c",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getGeoRegion(t) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            ue(this, void 0, void 0, function* () {
              let u = {},
                l = { ipaddress: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "3bcda9c0-3078-48a5-a1e0-83bd05931ad0",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      createProfile(t, i) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            ue(this, void 0, void 0, function* () {
              let l = {},
                r = { autoCreate: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "3.2-preview.3",
                    "Profile",
                    "f83735dc-483f-4238-a291-d45f6080a9af",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, Kt.TypeInfo.Profile, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getProfile(t, i, a, u, l, r) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            ue(this, void 0, void 0, function* () {
              let o = { id: t },
                p = {
                  details: i,
                  withAttributes: a,
                  partition: u,
                  coreAttributes: l,
                  forceRefresh: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "3.2-preview.3",
                    "Profile",
                    "f83735dc-483f-4238-a291-d45f6080a9af",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, Kt.TypeInfo.Profile, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      updateProfile(t, i) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            ue(this, void 0, void 0, function* () {
              let l = { id: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "3.2-preview.3",
                    "Profile",
                    "f83735dc-483f-4238-a291-d45f6080a9af",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getRegions() {
        return ue(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            ue(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "92d8d1c9-26b8-4774-a929-d640a73da524",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !1);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getSupportedLcids() {
        return ue(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            ue(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "d5bd1aa6-c269-4bcd-ad32-75fa17475584",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getUserDefaults(t) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            ue(this, void 0, void 0, function* () {
              let u = {},
                l = { includeAvatar: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "b583a356-1da7-4237-9f4c-1deb2edbc7e8",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, Kt.TypeInfo.Profile, !1);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      refreshUserDefaults(t) {
        return ue(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            ue(this, void 0, void 0, function* () {
              let u = { id: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "Profile",
                    "b583a356-1da7-4237-9f4c-1deb2edbc7e8",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.replace(r, s);
                let o = this.formatResponse(n.result, Kt.TypeInfo.Profile, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
    };
  zr.ProfileApi = Ba;
});
var $d = x((Le) => {
  "use strict";
  Object.defineProperty(Le, "__esModule", { value: !0 });
  var BI;
  (function (e) {
    (e[(e.Hourly = 0)] = "Hourly"), (e[(e.Daily = 1)] = "Daily");
  })((BI = Le.AggregationType || (Le.AggregationType = {})));
  var MI;
  (function (e) {
    (e[(e.Preliminary = 0)] = "Preliminary"), (e[(e.Full = 1)] = "Full");
  })((MI = Le.ResultPhase || (Le.ResultPhase = {})));
  Le.TypeInfo = {
    AggregationType: { enumValues: { hourly: 0, daily: 1 } },
    CodeChangeTrendItem: {},
    ProjectActivityMetrics: {},
    ProjectLanguageAnalytics: {},
    RepositoryActivityMetrics: {},
    RepositoryLanguageAnalytics: {},
    ResultPhase: { enumValues: { preliminary: 0, full: 1 } },
  };
  Le.TypeInfo.CodeChangeTrendItem.fields = { time: { isDate: !0 } };
  Le.TypeInfo.ProjectActivityMetrics.fields = {
    codeChangesTrend: {
      isArray: !0,
      typeInfo: Le.TypeInfo.CodeChangeTrendItem,
    },
  };
  Le.TypeInfo.ProjectLanguageAnalytics.fields = {
    repositoryLanguageAnalytics: {
      isArray: !0,
      typeInfo: Le.TypeInfo.RepositoryLanguageAnalytics,
    },
    resultPhase: { enumType: Le.TypeInfo.ResultPhase },
  };
  Le.TypeInfo.RepositoryActivityMetrics.fields = {
    codeChangesTrend: {
      isArray: !0,
      typeInfo: Le.TypeInfo.CodeChangeTrendItem,
    },
  };
  Le.TypeInfo.RepositoryLanguageAnalytics.fields = {
    resultPhase: { enumType: Le.TypeInfo.ResultPhase },
    updatedTime: { isDate: !0 },
  };
});
var Hd = x((Qr) => {
  "use strict";
  var Xt =
    (Qr && Qr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Qr, "__esModule", { value: !0 });
  var xI = qe(),
    ms = $d(),
    gs = class extends xI.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-ProjectAnalysis-api", a);
      }
      getProjectLanguageAnalytics(t) {
        return Xt(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            Xt(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "projectanalysis",
                    "5b02a779-1867-433f-90b7-d23ed5e33e57",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  ms.TypeInfo.ProjectLanguageAnalytics,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getProjectActivityMetrics(t, i, a) {
        return Xt(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("fromDate can not be null or undefined");
          if (a == null)
            throw new TypeError("aggregationType can not be null or undefined");
          return new Promise((u, l) =>
            Xt(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { fromDate: i, aggregationType: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "projectanalysis",
                    "e40ae584-9ea6-4f06-a7c7-6284651b466b",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  ms.TypeInfo.ProjectActivityMetrics,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getGitRepositoriesActivityMetrics(t, i, a, u, l) {
        return Xt(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("fromDate can not be null or undefined");
          if (a == null)
            throw new TypeError("aggregationType can not be null or undefined");
          if (u == null)
            throw new TypeError("skip can not be null or undefined");
          if (l == null)
            throw new TypeError("top can not be null or undefined");
          return new Promise((r, s) =>
            Xt(this, void 0, void 0, function* () {
              let n = { project: t },
                o = { fromDate: i, aggregationType: a, $skip: u, $top: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "projectanalysis",
                    "df7fbbca-630a-40e3-8aa3-7a3faf66947e",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  ms.TypeInfo.RepositoryActivityMetrics,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getRepositoryActivityMetrics(t, i, a, u) {
        return Xt(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("fromDate can not be null or undefined");
          if (u == null)
            throw new TypeError("aggregationType can not be null or undefined");
          return new Promise((l, r) =>
            Xt(this, void 0, void 0, function* () {
              let s = { project: t, repositoryId: i },
                n = { fromDate: a, aggregationType: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "projectanalysis",
                    "df7fbbca-630a-40e3-8aa3-7a3faf66947e",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  ms.TypeInfo.RepositoryActivityMetrics,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
    };
  gs.RESOURCE_AREA_ID = "7658fa33-b1bf-4580-990f-fac5896773d3";
  Qr.ProjectAnalysisApi = gs;
});
var Ma = x((be) => {
  "use strict";
  Object.defineProperty(be, "__esModule", { value: !0 });
  var _I;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.String = 10)] = "String"),
      (e[(e.Number = 20)] = "Number"),
      (e[(e.Boolean = 30)] = "Boolean"),
      (e[(e.Guid = 40)] = "Guid"),
      (e[(e.Uri = 50)] = "Uri");
  })((_I = be.InputDataType || (be.InputDataType = {})));
  var GI;
  (function (e) {
    (e[(e.Equals = 0)] = "Equals"), (e[(e.NotEquals = 1)] = "NotEquals");
  })((GI = be.InputFilterOperator || (be.InputFilterOperator = {})));
  var FI;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.TextBox = 10)] = "TextBox"),
      (e[(e.PasswordBox = 20)] = "PasswordBox"),
      (e[(e.Combo = 30)] = "Combo"),
      (e[(e.RadioButtons = 40)] = "RadioButtons"),
      (e[(e.CheckBox = 50)] = "CheckBox"),
      (e[(e.TextArea = 60)] = "TextArea");
  })((FI = be.InputMode || (be.InputMode = {})));
  be.TypeInfo = {
    InputDataType: {
      enumValues: {
        none: 0,
        string: 10,
        number: 20,
        boolean: 30,
        guid: 40,
        uri: 50,
      },
    },
    InputDescriptor: { fields: null },
    InputFilter: { fields: null },
    InputFilterCondition: { fields: null },
    InputFilterOperator: { enumValues: { equals: 0, notEquals: 1 } },
    InputMode: {
      enumValues: {
        none: 0,
        textBox: 10,
        passwordBox: 20,
        combo: 30,
        radioButtons: 40,
        checkBox: 50,
        textArea: 60,
      },
    },
    InputValidation: { fields: null },
    InputValue: { fields: null },
    InputValues: { fields: null },
    InputValuesError: { fields: null },
    InputValuesQuery: { fields: null },
  };
  be.TypeInfo.InputDescriptor.fields = {
    inputMode: { enumType: be.TypeInfo.InputMode },
    validation: { typeInfo: be.TypeInfo.InputValidation },
    values: { typeInfo: be.TypeInfo.InputValues },
  };
  be.TypeInfo.InputFilter.fields = {
    conditions: { isArray: !0, typeInfo: be.TypeInfo.InputFilterCondition },
  };
  be.TypeInfo.InputFilterCondition.fields = {
    operator: { enumType: be.TypeInfo.InputFilterOperator },
  };
  be.TypeInfo.InputValidation.fields = {
    dataType: { enumType: be.TypeInfo.InputDataType },
  };
  be.TypeInfo.InputValue.fields = {};
  be.TypeInfo.InputValues.fields = {
    error: { typeInfo: be.TypeInfo.InputValuesError },
    possibleValues: { isArray: !0, typeInfo: be.TypeInfo.InputValue },
  };
  be.TypeInfo.InputValuesError.fields = {};
  be.TypeInfo.InputValuesQuery.fields = {
    inputValues: { isArray: !0, typeInfo: be.TypeInfo.InputValues },
  };
});
var Qd = x((m) => {
  "use strict";
  Object.defineProperty(m, "__esModule", { value: !0 });
  var zd = Ma(),
    LI;
  (function (e) {
    (e[(e.XamlBuild = 0)] = "XamlBuild"),
      (e[(e.Build = 1)] = "Build"),
      (e[(e.Jenkins = 2)] = "Jenkins"),
      (e[(e.FileShare = 3)] = "FileShare"),
      (e[(e.Nuget = 4)] = "Nuget"),
      (e[(e.TfsOnPrem = 5)] = "TfsOnPrem"),
      (e[(e.GitHub = 6)] = "GitHub"),
      (e[(e.TFGit = 7)] = "TFGit"),
      (e[(e.ExternalTfsBuild = 8)] = "ExternalTfsBuild"),
      (e[(e.Custom = 9)] = "Custom"),
      (e[(e.Tfvc = 10)] = "Tfvc");
  })((LI = m.AgentArtifactType || (m.AgentArtifactType = {})));
  var WI;
  (function (e) {
    (e[(e.BeforeGates = 1)] = "BeforeGates"),
      (e[(e.AfterSuccessfulGates = 2)] = "AfterSuccessfulGates"),
      (e[(e.AfterGatesAlways = 4)] = "AfterGatesAlways");
  })((WI = m.ApprovalExecutionOrder || (m.ApprovalExecutionOrder = {})));
  var $I;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.ManualApprovals = 1)] = "ManualApprovals"),
      (e[(e.AutomatedApprovals = 2)] = "AutomatedApprovals"),
      (e[(e.ApprovalSnapshots = 4)] = "ApprovalSnapshots"),
      (e[(e.All = 7)] = "All");
  })(($I = m.ApprovalFilters || (m.ApprovalFilters = {})));
  var HI;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.Pending = 1)] = "Pending"),
      (e[(e.Approved = 2)] = "Approved"),
      (e[(e.Rejected = 4)] = "Rejected"),
      (e[(e.Reassigned = 6)] = "Reassigned"),
      (e[(e.Canceled = 7)] = "Canceled"),
      (e[(e.Skipped = 8)] = "Skipped");
  })((HI = m.ApprovalStatus || (m.ApprovalStatus = {})));
  var zI;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.PreDeploy = 1)] = "PreDeploy"),
      (e[(e.PostDeploy = 2)] = "PostDeploy"),
      (e[(e.All = 3)] = "All");
  })((zI = m.ApprovalType || (m.ApprovalType = {})));
  var QI;
  (function (e) {
    (e[(e.Add = 1)] = "Add"),
      (e[(e.Update = 2)] = "Update"),
      (e[(e.Delete = 3)] = "Delete"),
      (e[(e.Undelete = 4)] = "Undelete");
  })((QI = m.AuditAction || (m.AuditAction = {})));
  var JI;
  (function (e) {
    (e[(e.RevalidateApproverIdentity = 0)] = "RevalidateApproverIdentity"),
      (e[(e.OnBehalfOf = 1)] = "OnBehalfOf");
  })((JI = m.AuthorizationHeaderFor || (m.AuthorizationHeaderFor = {})));
  var KI;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.Event = 1)] = "Event"),
      (e[(e.EnvironmentState = 2)] = "EnvironmentState"),
      (e[(e.Artifact = 4)] = "Artifact");
  })((KI = m.ConditionType || (m.ConditionType = {})));
  var XI;
  (function (e) {
    (e[(e.Automatic = 0)] = "Automatic"),
      (e[(e.DeploymentSubmitter = 1)] = "DeploymentSubmitter"),
      (e[(e.FirstPreDeploymentApprover = 2)] = "FirstPreDeploymentApprover");
  })(
    (XI =
      m.DeploymentAuthorizationOwner || (m.DeploymentAuthorizationOwner = {}))
  );
  var ZI;
  (function (e) {
    (e[(e.All = 0)] = "All"),
      (e[(e.DeploymentOnly = 1)] = "DeploymentOnly"),
      (e[(e.Approvals = 2)] = "Approvals"),
      (e[(e.Artifacts = 4)] = "Artifacts");
  })((ZI = m.DeploymentExpands || (m.DeploymentExpands = {})));
  var YI;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.Queued = 1)] = "Queued"),
      (e[(e.Scheduled = 2)] = "Scheduled"),
      (e[(e.Pending = 4)] = "Pending"),
      (e[(e.Approved = 8)] = "Approved"),
      (e[(e.Rejected = 16)] = "Rejected"),
      (e[(e.Deferred = 32)] = "Deferred"),
      (e[(e.QueuedForAgent = 64)] = "QueuedForAgent"),
      (e[(e.PhaseInProgress = 128)] = "PhaseInProgress"),
      (e[(e.PhaseSucceeded = 256)] = "PhaseSucceeded"),
      (e[(e.PhasePartiallySucceeded = 512)] = "PhasePartiallySucceeded"),
      (e[(e.PhaseFailed = 1024)] = "PhaseFailed"),
      (e[(e.Canceled = 2048)] = "Canceled"),
      (e[(e.PhaseCanceled = 4096)] = "PhaseCanceled"),
      (e[(e.ManualInterventionPending = 8192)] = "ManualInterventionPending"),
      (e[(e.QueuedForPipeline = 16384)] = "QueuedForPipeline"),
      (e[(e.Cancelling = 32768)] = "Cancelling"),
      (e[(e.EvaluatingGates = 65536)] = "EvaluatingGates"),
      (e[(e.GateFailed = 131072)] = "GateFailed"),
      (e[(e.All = 258047)] = "All");
  })((YI = m.DeploymentOperationStatus || (m.DeploymentOperationStatus = {})));
  var e1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manual = 1)] = "Manual"),
      (e[(e.Automated = 2)] = "Automated"),
      (e[(e.Scheduled = 4)] = "Scheduled"),
      (e[(e.RedeployTrigger = 8)] = "RedeployTrigger");
  })((e1 = m.DeploymentReason || (m.DeploymentReason = {})));
  var t1;
  (function (e) {
    (e[(e.Regular = 1)] = "Regular"),
      (e[(e.FailingSince = 2)] = "FailingSince");
  })((t1 = m.DeploymentsQueryType || (m.DeploymentsQueryType = {})));
  var i1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.NotDeployed = 1)] = "NotDeployed"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Succeeded = 4)] = "Succeeded"),
      (e[(e.PartiallySucceeded = 8)] = "PartiallySucceeded"),
      (e[(e.Failed = 16)] = "Failed"),
      (e[(e.All = 31)] = "All");
  })((i1 = m.DeploymentStatus || (m.DeploymentStatus = {})));
  var r1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.NotStarted = 1)] = "NotStarted"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.PartiallySucceeded = 4)] = "PartiallySucceeded"),
      (e[(e.Succeeded = 8)] = "Succeeded"),
      (e[(e.Failed = 16)] = "Failed"),
      (e[(e.Canceled = 32)] = "Canceled"),
      (e[(e.Skipped = 64)] = "Skipped"),
      (e[(e.Cancelling = 128)] = "Cancelling");
  })((r1 = m.DeployPhaseStatus || (m.DeployPhaseStatus = {})));
  var n1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.AgentBasedDeployment = 1)] = "AgentBasedDeployment"),
      (e[(e.RunOnServer = 2)] = "RunOnServer"),
      (e[(e.MachineGroupBasedDeployment = 4)] = "MachineGroupBasedDeployment"),
      (e[(e.DeploymentGates = 8)] = "DeploymentGates");
  })((n1 = m.DeployPhaseTypes || (m.DeployPhaseTypes = {})));
  var s1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.NotStarted = 1)] = "NotStarted"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Succeeded = 4)] = "Succeeded"),
      (e[(e.Canceled = 8)] = "Canceled"),
      (e[(e.Rejected = 16)] = "Rejected"),
      (e[(e.Queued = 32)] = "Queued"),
      (e[(e.Scheduled = 64)] = "Scheduled"),
      (e[(e.PartiallySucceeded = 128)] = "PartiallySucceeded");
  })((s1 = m.EnvironmentStatus || (m.EnvironmentStatus = {})));
  var o1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.DeploymentGroupRedeploy = 1)] = "DeploymentGroupRedeploy"),
      (e[(e.RollbackRedeploy = 2)] = "RollbackRedeploy");
  })((o1 = m.EnvironmentTriggerType || (m.EnvironmentTriggerType = {})));
  var a1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Ascending = 1)] = "Ascending"),
      (e[(e.Descending = 2)] = "Descending");
  })((a1 = m.FolderPathQueryOrder || (m.FolderPathQueryOrder = {})));
  var l1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Pending = 1)] = "Pending"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Succeeded = 4)] = "Succeeded"),
      (e[(e.Failed = 8)] = "Failed"),
      (e[(e.Canceled = 16)] = "Canceled");
  })((l1 = m.GateStatus || (m.GateStatus = {})));
  var u1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.User = 1)] = "User"),
      (e[(e.System = 2)] = "System");
  })((u1 = m.IssueSource || (m.IssueSource = {})));
  var p1;
  (function (e) {
    (e[(e.Details = 0)] = "Details"),
      (e[(e.Environments = 1)] = "Environments"),
      (e[(e.Issues = 2)] = "Issues"),
      (e[(e.TestResults = 3)] = "TestResults"),
      (e[(e.WorkItems = 4)] = "WorkItems"),
      (e[(e.ReleaseInfo = 5)] = "ReleaseInfo");
  })((p1 = m.MailSectionType || (m.MailSectionType = {})));
  var d1;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.Pending = 1)] = "Pending"),
      (e[(e.Rejected = 2)] = "Rejected"),
      (e[(e.Approved = 4)] = "Approved"),
      (e[(e.Canceled = 8)] = "Canceled");
  })((d1 = m.ManualInterventionStatus || (m.ManualInterventionStatus = {})));
  var c1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.MultiConfiguration = 1)] = "MultiConfiguration"),
      (e[(e.MultiMachine = 2)] = "MultiMachine");
  })((c1 = m.ParallelExecutionTypes || (m.ParallelExecutionTypes = {})));
  var f1;
  (function (e) {
    (e[(e.Designer = 1)] = "Designer"), (e[(e.Yaml = 2)] = "Yaml");
  })((f1 = m.PipelineProcessTypes || (m.PipelineProcessTypes = {})));
  var h1;
  (function (e) {
    (e[(e.Inclusion = 0)] = "Inclusion"), (e[(e.Exclusion = 1)] = "Exclusion");
  })((h1 = m.PropertySelectorType || (m.PropertySelectorType = {})));
  var y1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.TfsGit = 1)] = "TfsGit"),
      (e[(e.GitHub = 2)] = "GitHub");
  })((y1 = m.PullRequestSystemType || (m.PullRequestSystemType = {})));
  var v1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Environments = 2)] = "Environments"),
      (e[(e.Artifacts = 4)] = "Artifacts"),
      (e[(e.Triggers = 8)] = "Triggers"),
      (e[(e.Variables = 16)] = "Variables"),
      (e[(e.Tags = 32)] = "Tags"),
      (e[(e.LastRelease = 64)] = "LastRelease");
  })((v1 = m.ReleaseDefinitionExpands || (m.ReleaseDefinitionExpands = {})));
  var m1;
  (function (e) {
    (e[(e.IdAscending = 0)] = "IdAscending"),
      (e[(e.IdDescending = 1)] = "IdDescending"),
      (e[(e.NameAscending = 2)] = "NameAscending"),
      (e[(e.NameDescending = 3)] = "NameDescending");
  })(
    (m1 = m.ReleaseDefinitionQueryOrder || (m.ReleaseDefinitionQueryOrder = {}))
  );
  var g1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.RestApi = 1)] = "RestApi"),
      (e[(e.UserInterface = 2)] = "UserInterface"),
      (e[(e.Ibiza = 4)] = "Ibiza"),
      (e[(e.PortalExtensionApi = 8)] = "PortalExtensionApi");
  })((g1 = m.ReleaseDefinitionSource || (m.ReleaseDefinitionSource = {})));
  var I1;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.Tasks = 1)] = "Tasks");
  })((I1 = m.ReleaseEnvironmentExpands || (m.ReleaseEnvironmentExpands = {})));
  var T1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Environments = 2)] = "Environments"),
      (e[(e.Artifacts = 4)] = "Artifacts"),
      (e[(e.Approvals = 8)] = "Approvals"),
      (e[(e.ManualInterventions = 16)] = "ManualInterventions"),
      (e[(e.Variables = 32)] = "Variables"),
      (e[(e.Tags = 64)] = "Tags");
  })((T1 = m.ReleaseExpands || (m.ReleaseExpands = {})));
  var R1;
  (function (e) {
    (e[(e.Descending = 0)] = "Descending"),
      (e[(e.Ascending = 1)] = "Ascending");
  })((R1 = m.ReleaseQueryOrder || (m.ReleaseQueryOrder = {})));
  var V1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manual = 1)] = "Manual"),
      (e[(e.ContinuousIntegration = 2)] = "ContinuousIntegration"),
      (e[(e.Schedule = 3)] = "Schedule"),
      (e[(e.PullRequest = 4)] = "PullRequest");
  })((V1 = m.ReleaseReason || (m.ReleaseReason = {})));
  var b1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.Draft = 1)] = "Draft"),
      (e[(e.Active = 2)] = "Active"),
      (e[(e.Abandoned = 4)] = "Abandoned");
  })((b1 = m.ReleaseStatus || (m.ReleaseStatus = {})));
  var D1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.ArtifactSource = 1)] = "ArtifactSource"),
      (e[(e.Schedule = 2)] = "Schedule"),
      (e[(e.SourceRepo = 3)] = "SourceRepo"),
      (e[(e.ContainerImage = 4)] = "ContainerImage"),
      (e[(e.Package = 5)] = "Package"),
      (e[(e.PullRequest = 6)] = "PullRequest");
  })((D1 = m.ReleaseTriggerType || (m.ReleaseTriggerType = {})));
  var w1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Monday = 1)] = "Monday"),
      (e[(e.Tuesday = 2)] = "Tuesday"),
      (e[(e.Wednesday = 4)] = "Wednesday"),
      (e[(e.Thursday = 8)] = "Thursday"),
      (e[(e.Friday = 16)] = "Friday"),
      (e[(e.Saturday = 32)] = "Saturday"),
      (e[(e.Sunday = 64)] = "Sunday"),
      (e[(e.All = 127)] = "All");
  })((w1 = m.ScheduleDays || (m.ScheduleDays = {})));
  var q1;
  (function (e) {
    (e[(e.ServiceAccount = 1)] = "ServiceAccount"),
      (e[(e.RequestingUser = 2)] = "RequestingUser");
  })((q1 = m.SenderType || (m.SenderType = {})));
  var P1;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.Tasks = 1)] = "Tasks");
  })((P1 = m.SingleReleaseExpands || (m.SingleReleaseExpands = {})));
  var C1;
  (function (e) {
    (e[(e.Unknown = 0)] = "Unknown"),
      (e[(e.Pending = 1)] = "Pending"),
      (e[(e.InProgress = 2)] = "InProgress"),
      (e[(e.Success = 3)] = "Success"),
      (e[(e.Failure = 4)] = "Failure"),
      (e[(e.Canceled = 5)] = "Canceled"),
      (e[(e.Skipped = 6)] = "Skipped"),
      (e[(e.Succeeded = 7)] = "Succeeded"),
      (e[(e.Failed = 8)] = "Failed"),
      (e[(e.PartiallySucceeded = 9)] = "PartiallySucceeded");
  })((C1 = m.TaskStatus || (m.TaskStatus = {})));
  var j1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.Use = 16)] = "Use");
  })((j1 = m.VariableGroupActionFilter || (m.VariableGroupActionFilter = {})));
  var A1;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.TFSGit = 1)] = "TFSGit");
  })((A1 = m.YamlFileSourceTypes || (m.YamlFileSourceTypes = {})));
  m.TypeInfo = {
    AgentArtifactDefinition: {},
    AgentArtifactType: {
      enumValues: {
        xamlBuild: 0,
        build: 1,
        jenkins: 2,
        fileShare: 3,
        nuget: 4,
        tfsOnPrem: 5,
        gitHub: 6,
        tfGit: 7,
        externalTfsBuild: 8,
        custom: 9,
        tfvc: 10,
      },
    },
    AgentBasedDeployPhase: {},
    AgentDeploymentInput: {},
    ApprovalExecutionOrder: {
      enumValues: {
        beforeGates: 1,
        afterSuccessfulGates: 2,
        afterGatesAlways: 4,
      },
    },
    ApprovalFilters: {
      enumValues: {
        none: 0,
        manualApprovals: 1,
        automatedApprovals: 2,
        approvalSnapshots: 4,
        all: 7,
      },
    },
    ApprovalOptions: {},
    ApprovalStatus: {
      enumValues: {
        undefined: 0,
        pending: 1,
        approved: 2,
        rejected: 4,
        reassigned: 6,
        canceled: 7,
        skipped: 8,
      },
    },
    ApprovalType: {
      enumValues: { undefined: 0, preDeploy: 1, postDeploy: 2, all: 3 },
    },
    ArtifactContributionDefinition: {},
    ArtifactMetadata: {},
    ArtifactSourceTrigger: {},
    ArtifactTypeDefinition: {},
    ArtifactVersion: {},
    ArtifactVersionQueryResult: {},
    AuditAction: { enumValues: { add: 1, update: 2, delete: 3, undelete: 4 } },
    AuthorizationHeaderFor: {
      enumValues: { revalidateApproverIdentity: 0, onBehalfOf: 1 },
    },
    AutoTriggerIssue: {},
    AzureKeyVaultVariableGroupProviderData: {},
    AzureKeyVaultVariableValue: {},
    BuildVersion: {},
    Change: {},
    CodeRepositoryReference: {},
    Condition: {},
    ConditionType: {
      enumValues: { undefined: 0, event: 1, environmentState: 2, artifact: 4 },
    },
    ContainerImageTrigger: {},
    ContinuousDeploymentTriggerIssue: {},
    Deployment: {},
    DeploymentApprovalCompletedEvent: {},
    DeploymentApprovalPendingEvent: {},
    DeploymentAttempt: {},
    DeploymentAuthorizationInfo: {},
    DeploymentAuthorizationOwner: {
      enumValues: {
        automatic: 0,
        deploymentSubmitter: 1,
        firstPreDeploymentApprover: 2,
      },
    },
    DeploymentCompletedEvent: {},
    DeploymentExpands: {
      enumValues: { all: 0, deploymentOnly: 1, approvals: 2, artifacts: 4 },
    },
    DeploymentJob: {},
    DeploymentManualInterventionPendingEvent: {},
    DeploymentOperationStatus: {
      enumValues: {
        undefined: 0,
        queued: 1,
        scheduled: 2,
        pending: 4,
        approved: 8,
        rejected: 16,
        deferred: 32,
        queuedForAgent: 64,
        phaseInProgress: 128,
        phaseSucceeded: 256,
        phasePartiallySucceeded: 512,
        phaseFailed: 1024,
        canceled: 2048,
        phaseCanceled: 4096,
        manualInterventionPending: 8192,
        queuedForPipeline: 16384,
        cancelling: 32768,
        evaluatingGates: 65536,
        gateFailed: 131072,
        all: 258047,
      },
    },
    DeploymentQueryParameters: {},
    DeploymentReason: {
      enumValues: {
        none: 0,
        manual: 1,
        automated: 2,
        scheduled: 4,
        redeployTrigger: 8,
      },
    },
    DeploymentsQueryType: { enumValues: { regular: 1, failingSince: 2 } },
    DeploymentStartedEvent: {},
    DeploymentStatus: {
      enumValues: {
        undefined: 0,
        notDeployed: 1,
        inProgress: 2,
        succeeded: 4,
        partiallySucceeded: 8,
        failed: 16,
        all: 31,
      },
    },
    DeployPhase: {},
    DeployPhaseStatus: {
      enumValues: {
        undefined: 0,
        notStarted: 1,
        inProgress: 2,
        partiallySucceeded: 4,
        succeeded: 8,
        failed: 16,
        canceled: 32,
        skipped: 64,
        cancelling: 128,
      },
    },
    DeployPhaseTypes: {
      enumValues: {
        undefined: 0,
        agentBasedDeployment: 1,
        runOnServer: 2,
        machineGroupBasedDeployment: 4,
        deploymentGates: 8,
      },
    },
    EnvironmentStatus: {
      enumValues: {
        undefined: 0,
        notStarted: 1,
        inProgress: 2,
        succeeded: 4,
        canceled: 8,
        rejected: 16,
        queued: 32,
        scheduled: 64,
        partiallySucceeded: 128,
      },
    },
    EnvironmentTrigger: {},
    EnvironmentTriggerType: {
      enumValues: {
        undefined: 0,
        deploymentGroupRedeploy: 1,
        rollbackRedeploy: 2,
      },
    },
    ExecutionInput: {},
    Folder: {},
    FolderPathQueryOrder: {
      enumValues: { none: 0, ascending: 1, descending: 2 },
    },
    GatesDeployPhase: {},
    GateStatus: {
      enumValues: {
        none: 0,
        pending: 1,
        inProgress: 2,
        succeeded: 4,
        failed: 8,
        canceled: 16,
      },
    },
    IgnoredGate: {},
    IssueSource: { enumValues: { none: 0, user: 1, system: 2 } },
    MachineGroupBasedDeployPhase: {},
    MailMessage: {},
    MailSectionType: {
      enumValues: {
        details: 0,
        environments: 1,
        issues: 2,
        testResults: 3,
        workItems: 4,
        releaseInfo: 5,
      },
    },
    ManualIntervention: {},
    ManualInterventionStatus: {
      enumValues: {
        unknown: 0,
        pending: 1,
        rejected: 2,
        approved: 4,
        canceled: 8,
      },
    },
    ManualInterventionUpdateMetadata: {},
    MultiConfigInput: {},
    MultiMachineInput: {},
    PackageTrigger: {},
    ParallelExecutionInputBase: {},
    ParallelExecutionTypes: {
      enumValues: { none: 0, multiConfiguration: 1, multiMachine: 2 },
    },
    PipelineProcess: {},
    PipelineProcessTypes: { enumValues: { designer: 1, yaml: 2 } },
    PropertySelector: {},
    PropertySelectorType: { enumValues: { inclusion: 0, exclusion: 1 } },
    PullRequestConfiguration: {},
    PullRequestSystemType: { enumValues: { none: 0, tfsGit: 1, gitHub: 2 } },
    PullRequestTrigger: {},
    Release: {},
    ReleaseAbandonedEvent: {},
    ReleaseApproval: {},
    ReleaseApprovalHistory: {},
    ReleaseApprovalPendingEvent: {},
    ReleaseCondition: {},
    ReleaseCreatedEvent: {},
    ReleaseDefinition: {},
    ReleaseDefinitionApprovals: {},
    ReleaseDefinitionEnvironment: {},
    ReleaseDefinitionEnvironmentTemplate: {},
    ReleaseDefinitionExpands: {
      enumValues: {
        none: 0,
        environments: 2,
        artifacts: 4,
        triggers: 8,
        variables: 16,
        tags: 32,
        lastRelease: 64,
      },
    },
    ReleaseDefinitionQueryOrder: {
      enumValues: {
        idAscending: 0,
        idDescending: 1,
        nameAscending: 2,
        nameDescending: 3,
      },
    },
    ReleaseDefinitionRevision: {},
    ReleaseDefinitionSource: {
      enumValues: {
        undefined: 0,
        restApi: 1,
        userInterface: 2,
        ibiza: 4,
        portalExtensionApi: 8,
      },
    },
    ReleaseDefinitionSummary: {},
    ReleaseDeployPhase: {},
    ReleaseEnvironment: {},
    ReleaseEnvironmentCompletedEvent: {},
    ReleaseEnvironmentExpands: { enumValues: { none: 0, tasks: 1 } },
    ReleaseEnvironmentStatusUpdatedEvent: {},
    ReleaseEnvironmentUpdateMetadata: {},
    ReleaseExpands: {
      enumValues: {
        none: 0,
        environments: 2,
        artifacts: 4,
        approvals: 8,
        manualInterventions: 16,
        variables: 32,
        tags: 64,
      },
    },
    ReleaseGates: {},
    ReleaseGatesPhase: {},
    ReleaseNotCreatedEvent: {},
    ReleaseQueryOrder: { enumValues: { descending: 0, ascending: 1 } },
    ReleaseReason: {
      enumValues: {
        none: 0,
        manual: 1,
        continuousIntegration: 2,
        schedule: 3,
        pullRequest: 4,
      },
    },
    ReleaseReference: {},
    ReleaseRevision: {},
    ReleaseSchedule: {},
    ReleaseStartMetadata: {},
    ReleaseStatus: {
      enumValues: { undefined: 0, draft: 1, active: 2, abandoned: 4 },
    },
    ReleaseTask: {},
    ReleaseTaskAttachment: {},
    ReleaseTasksUpdatedEvent: {},
    ReleaseTriggerBase: {},
    ReleaseTriggerType: {
      enumValues: {
        undefined: 0,
        artifactSource: 1,
        schedule: 2,
        sourceRepo: 3,
        containerImage: 4,
        package: 5,
        pullRequest: 6,
      },
    },
    ReleaseUpdatedEvent: {},
    ReleaseUpdateMetadata: {},
    RunOnServerDeployPhase: {},
    ScheduleDays: {
      enumValues: {
        none: 0,
        monday: 1,
        tuesday: 2,
        wednesday: 4,
        thursday: 8,
        friday: 16,
        saturday: 32,
        sunday: 64,
        all: 127,
      },
    },
    ScheduledReleaseTrigger: {},
    SenderType: { enumValues: { serviceAccount: 1, requestingUser: 2 } },
    ServerDeploymentInput: {},
    SingleReleaseExpands: { enumValues: { none: 0, tasks: 1 } },
    SourcePullRequestVersion: {},
    SourceRepoTrigger: {},
    SummaryMailSection: {},
    TaskStatus: {
      enumValues: {
        unknown: 0,
        pending: 1,
        inProgress: 2,
        success: 3,
        failure: 4,
        canceled: 5,
        skipped: 6,
        succeeded: 7,
        failed: 8,
        partiallySucceeded: 9,
      },
    },
    VariableGroup: {},
    VariableGroupActionFilter: { enumValues: { none: 0, manage: 2, use: 16 } },
    YamlFileSource: {},
    YamlFileSourceTypes: { enumValues: { none: 0, tfsGit: 1 } },
    YamlPipelineProcess: {},
  };
  m.TypeInfo.AgentArtifactDefinition.fields = {
    artifactType: { enumType: m.TypeInfo.AgentArtifactType },
  };
  m.TypeInfo.AgentBasedDeployPhase.fields = {
    deploymentInput: { typeInfo: m.TypeInfo.AgentDeploymentInput },
    phaseType: { enumType: m.TypeInfo.DeployPhaseTypes },
  };
  m.TypeInfo.AgentDeploymentInput.fields = {
    parallelExecution: { typeInfo: m.TypeInfo.ExecutionInput },
  };
  m.TypeInfo.ApprovalOptions.fields = {
    executionOrder: { enumType: m.TypeInfo.ApprovalExecutionOrder },
  };
  m.TypeInfo.ArtifactContributionDefinition.fields = {
    inputDescriptors: { isArray: !0, typeInfo: zd.TypeInfo.InputDescriptor },
  };
  m.TypeInfo.ArtifactMetadata.fields = {
    instanceReference: { typeInfo: m.TypeInfo.BuildVersion },
  };
  m.TypeInfo.ArtifactSourceTrigger.fields = {
    triggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.ArtifactTypeDefinition.fields = {
    inputDescriptors: { isArray: !0, typeInfo: zd.TypeInfo.InputDescriptor },
  };
  m.TypeInfo.ArtifactVersion.fields = {
    defaultVersion: { typeInfo: m.TypeInfo.BuildVersion },
    versions: { isArray: !0, typeInfo: m.TypeInfo.BuildVersion },
  };
  m.TypeInfo.ArtifactVersionQueryResult.fields = {
    artifactVersions: { isArray: !0, typeInfo: m.TypeInfo.ArtifactVersion },
  };
  m.TypeInfo.AutoTriggerIssue.fields = {
    issueSource: { enumType: m.TypeInfo.IssueSource },
    releaseTriggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.AzureKeyVaultVariableGroupProviderData.fields = {
    lastRefreshedOn: { isDate: !0 },
  };
  m.TypeInfo.AzureKeyVaultVariableValue.fields = { expires: { isDate: !0 } };
  m.TypeInfo.BuildVersion.fields = {
    sourcePullRequestVersion: { typeInfo: m.TypeInfo.SourcePullRequestVersion },
  };
  m.TypeInfo.Change.fields = { timestamp: { isDate: !0 } };
  m.TypeInfo.CodeRepositoryReference.fields = {
    systemType: { enumType: m.TypeInfo.PullRequestSystemType },
  };
  m.TypeInfo.Condition.fields = {
    conditionType: { enumType: m.TypeInfo.ConditionType },
  };
  m.TypeInfo.ContainerImageTrigger.fields = {
    triggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.ContinuousDeploymentTriggerIssue.fields = {
    issueSource: { enumType: m.TypeInfo.IssueSource },
    releaseTriggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.Deployment.fields = {
    completedOn: { isDate: !0 },
    conditions: { isArray: !0, typeInfo: m.TypeInfo.Condition },
    deploymentStatus: { enumType: m.TypeInfo.DeploymentStatus },
    lastModifiedOn: { isDate: !0 },
    operationStatus: { enumType: m.TypeInfo.DeploymentOperationStatus },
    postDeployApprovals: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApproval },
    preDeployApprovals: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApproval },
    queuedOn: { isDate: !0 },
    reason: { enumType: m.TypeInfo.DeploymentReason },
    release: { typeInfo: m.TypeInfo.ReleaseReference },
    scheduledDeploymentTime: { isDate: !0 },
    startedOn: { isDate: !0 },
  };
  m.TypeInfo.DeploymentApprovalCompletedEvent.fields = {
    approval: { typeInfo: m.TypeInfo.ReleaseApproval },
    release: { typeInfo: m.TypeInfo.Release },
  };
  m.TypeInfo.DeploymentApprovalPendingEvent.fields = {
    approval: { typeInfo: m.TypeInfo.ReleaseApproval },
    approvalOptions: { typeInfo: m.TypeInfo.ApprovalOptions },
    completedApprovals: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApproval },
    deployment: { typeInfo: m.TypeInfo.Deployment },
    pendingApprovals: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApproval },
    release: { typeInfo: m.TypeInfo.Release },
  };
  m.TypeInfo.DeploymentAttempt.fields = {
    job: { typeInfo: m.TypeInfo.ReleaseTask },
    lastModifiedOn: { isDate: !0 },
    operationStatus: { enumType: m.TypeInfo.DeploymentOperationStatus },
    postDeploymentGates: { typeInfo: m.TypeInfo.ReleaseGates },
    preDeploymentGates: { typeInfo: m.TypeInfo.ReleaseGates },
    queuedOn: { isDate: !0 },
    reason: { enumType: m.TypeInfo.DeploymentReason },
    releaseDeployPhases: {
      isArray: !0,
      typeInfo: m.TypeInfo.ReleaseDeployPhase,
    },
    status: { enumType: m.TypeInfo.DeploymentStatus },
    tasks: { isArray: !0, typeInfo: m.TypeInfo.ReleaseTask },
  };
  m.TypeInfo.DeploymentAuthorizationInfo.fields = {
    authorizationHeaderFor: { enumType: m.TypeInfo.AuthorizationHeaderFor },
  };
  m.TypeInfo.DeploymentCompletedEvent.fields = {
    deployment: { typeInfo: m.TypeInfo.Deployment },
    environment: { typeInfo: m.TypeInfo.ReleaseEnvironment },
  };
  m.TypeInfo.DeploymentJob.fields = {
    job: { typeInfo: m.TypeInfo.ReleaseTask },
    tasks: { isArray: !0, typeInfo: m.TypeInfo.ReleaseTask },
  };
  m.TypeInfo.DeploymentManualInterventionPendingEvent.fields = {
    deployment: { typeInfo: m.TypeInfo.Deployment },
    manualIntervention: { typeInfo: m.TypeInfo.ManualIntervention },
    release: { typeInfo: m.TypeInfo.Release },
  };
  m.TypeInfo.DeploymentQueryParameters.fields = {
    deploymentStatus: { enumType: m.TypeInfo.DeploymentStatus },
    expands: { enumType: m.TypeInfo.DeploymentExpands },
    maxModifiedTime: { isDate: !0 },
    minModifiedTime: { isDate: !0 },
    operationStatus: { enumType: m.TypeInfo.DeploymentOperationStatus },
    queryOrder: { enumType: m.TypeInfo.ReleaseQueryOrder },
    queryType: { enumType: m.TypeInfo.DeploymentsQueryType },
  };
  m.TypeInfo.DeploymentStartedEvent.fields = {
    environment: { typeInfo: m.TypeInfo.ReleaseEnvironment },
    release: { typeInfo: m.TypeInfo.Release },
  };
  m.TypeInfo.DeployPhase.fields = {
    phaseType: { enumType: m.TypeInfo.DeployPhaseTypes },
  };
  m.TypeInfo.EnvironmentTrigger.fields = {
    triggerType: { enumType: m.TypeInfo.EnvironmentTriggerType },
  };
  m.TypeInfo.ExecutionInput.fields = {
    parallelExecutionType: { enumType: m.TypeInfo.ParallelExecutionTypes },
  };
  m.TypeInfo.Folder.fields = {
    createdOn: { isDate: !0 },
    lastChangedDate: { isDate: !0 },
  };
  m.TypeInfo.GatesDeployPhase.fields = {
    phaseType: { enumType: m.TypeInfo.DeployPhaseTypes },
  };
  m.TypeInfo.IgnoredGate.fields = { lastModifiedOn: { isDate: !0 } };
  m.TypeInfo.MachineGroupBasedDeployPhase.fields = {
    phaseType: { enumType: m.TypeInfo.DeployPhaseTypes },
  };
  m.TypeInfo.MailMessage.fields = {
    replyBy: { isDate: !0 },
    sections: { isArray: !0, enumType: m.TypeInfo.MailSectionType },
    senderType: { enumType: m.TypeInfo.SenderType },
  };
  m.TypeInfo.ManualIntervention.fields = {
    createdOn: { isDate: !0 },
    modifiedOn: { isDate: !0 },
    status: { enumType: m.TypeInfo.ManualInterventionStatus },
  };
  m.TypeInfo.ManualInterventionUpdateMetadata.fields = {
    status: { enumType: m.TypeInfo.ManualInterventionStatus },
  };
  m.TypeInfo.MultiConfigInput.fields = {
    parallelExecutionType: { enumType: m.TypeInfo.ParallelExecutionTypes },
  };
  m.TypeInfo.MultiMachineInput.fields = {
    parallelExecutionType: { enumType: m.TypeInfo.ParallelExecutionTypes },
  };
  m.TypeInfo.PackageTrigger.fields = {
    triggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.ParallelExecutionInputBase.fields = {
    parallelExecutionType: { enumType: m.TypeInfo.ParallelExecutionTypes },
  };
  m.TypeInfo.PipelineProcess.fields = {
    type: { enumType: m.TypeInfo.PipelineProcessTypes },
  };
  m.TypeInfo.PropertySelector.fields = {
    selectorType: { enumType: m.TypeInfo.PropertySelectorType },
  };
  m.TypeInfo.PullRequestConfiguration.fields = {
    codeRepositoryReference: { typeInfo: m.TypeInfo.CodeRepositoryReference },
  };
  m.TypeInfo.PullRequestTrigger.fields = {
    pullRequestConfiguration: { typeInfo: m.TypeInfo.PullRequestConfiguration },
    triggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.Release.fields = {
    createdOn: { isDate: !0 },
    environments: { isArray: !0, typeInfo: m.TypeInfo.ReleaseEnvironment },
    modifiedOn: { isDate: !0 },
    reason: { enumType: m.TypeInfo.ReleaseReason },
    status: { enumType: m.TypeInfo.ReleaseStatus },
    variableGroups: { isArray: !0, typeInfo: m.TypeInfo.VariableGroup },
  };
  m.TypeInfo.ReleaseAbandonedEvent.fields = {
    release: { typeInfo: m.TypeInfo.Release },
  };
  m.TypeInfo.ReleaseApproval.fields = {
    approvalType: { enumType: m.TypeInfo.ApprovalType },
    createdOn: { isDate: !0 },
    history: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApprovalHistory },
    modifiedOn: { isDate: !0 },
    status: { enumType: m.TypeInfo.ApprovalStatus },
  };
  m.TypeInfo.ReleaseApprovalHistory.fields = {
    createdOn: { isDate: !0 },
    modifiedOn: { isDate: !0 },
  };
  m.TypeInfo.ReleaseApprovalPendingEvent.fields = {
    approval: { typeInfo: m.TypeInfo.ReleaseApproval },
    approvalOptions: { typeInfo: m.TypeInfo.ApprovalOptions },
    completedApprovals: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApproval },
    deployment: { typeInfo: m.TypeInfo.Deployment },
    environments: { isArray: !0, typeInfo: m.TypeInfo.ReleaseEnvironment },
    pendingApprovals: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApproval },
  };
  m.TypeInfo.ReleaseCondition.fields = {
    conditionType: { enumType: m.TypeInfo.ConditionType },
  };
  m.TypeInfo.ReleaseCreatedEvent.fields = {
    release: { typeInfo: m.TypeInfo.Release },
  };
  m.TypeInfo.ReleaseDefinition.fields = {
    createdOn: { isDate: !0 },
    environments: {
      isArray: !0,
      typeInfo: m.TypeInfo.ReleaseDefinitionEnvironment,
    },
    lastRelease: { typeInfo: m.TypeInfo.ReleaseReference },
    modifiedOn: { isDate: !0 },
    pipelineProcess: { typeInfo: m.TypeInfo.PipelineProcess },
    source: { enumType: m.TypeInfo.ReleaseDefinitionSource },
    triggers: { isArray: !0, typeInfo: m.TypeInfo.ReleaseTriggerBase },
  };
  m.TypeInfo.ReleaseDefinitionApprovals.fields = {
    approvalOptions: { typeInfo: m.TypeInfo.ApprovalOptions },
  };
  m.TypeInfo.ReleaseDefinitionEnvironment.fields = {
    conditions: { isArray: !0, typeInfo: m.TypeInfo.Condition },
    deployPhases: { isArray: !0, typeInfo: m.TypeInfo.DeployPhase },
    environmentTriggers: {
      isArray: !0,
      typeInfo: m.TypeInfo.EnvironmentTrigger,
    },
    postDeployApprovals: { typeInfo: m.TypeInfo.ReleaseDefinitionApprovals },
    preDeployApprovals: { typeInfo: m.TypeInfo.ReleaseDefinitionApprovals },
    schedules: { isArray: !0, typeInfo: m.TypeInfo.ReleaseSchedule },
  };
  m.TypeInfo.ReleaseDefinitionEnvironmentTemplate.fields = {
    environment: { typeInfo: m.TypeInfo.ReleaseDefinitionEnvironment },
  };
  m.TypeInfo.ReleaseDefinitionRevision.fields = {
    changedDate: { isDate: !0 },
    changeType: { enumType: m.TypeInfo.AuditAction },
  };
  m.TypeInfo.ReleaseDefinitionSummary.fields = {
    releases: { isArray: !0, typeInfo: m.TypeInfo.Release },
  };
  m.TypeInfo.ReleaseDeployPhase.fields = {
    deploymentJobs: { isArray: !0, typeInfo: m.TypeInfo.DeploymentJob },
    manualInterventions: {
      isArray: !0,
      typeInfo: m.TypeInfo.ManualIntervention,
    },
    phaseType: { enumType: m.TypeInfo.DeployPhaseTypes },
    startedOn: { isDate: !0 },
    status: { enumType: m.TypeInfo.DeployPhaseStatus },
  };
  m.TypeInfo.ReleaseEnvironment.fields = {
    conditions: { isArray: !0, typeInfo: m.TypeInfo.ReleaseCondition },
    createdOn: { isDate: !0 },
    deployPhasesSnapshot: { isArray: !0, typeInfo: m.TypeInfo.DeployPhase },
    deploySteps: { isArray: !0, typeInfo: m.TypeInfo.DeploymentAttempt },
    modifiedOn: { isDate: !0 },
    nextScheduledUtcTime: { isDate: !0 },
    postApprovalsSnapshot: { typeInfo: m.TypeInfo.ReleaseDefinitionApprovals },
    postDeployApprovals: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApproval },
    preApprovalsSnapshot: { typeInfo: m.TypeInfo.ReleaseDefinitionApprovals },
    preDeployApprovals: { isArray: !0, typeInfo: m.TypeInfo.ReleaseApproval },
    scheduledDeploymentTime: { isDate: !0 },
    schedules: { isArray: !0, typeInfo: m.TypeInfo.ReleaseSchedule },
    status: { enumType: m.TypeInfo.EnvironmentStatus },
    variableGroups: { isArray: !0, typeInfo: m.TypeInfo.VariableGroup },
  };
  m.TypeInfo.ReleaseEnvironmentCompletedEvent.fields = {
    environment: { typeInfo: m.TypeInfo.ReleaseEnvironment },
    reason: { enumType: m.TypeInfo.DeploymentReason },
  };
  m.TypeInfo.ReleaseEnvironmentStatusUpdatedEvent.fields = {
    environmentStatus: { enumType: m.TypeInfo.EnvironmentStatus },
    latestDeploymentOperationStatus: {
      enumType: m.TypeInfo.DeploymentOperationStatus,
    },
    latestDeploymentStatus: { enumType: m.TypeInfo.DeploymentStatus },
  };
  m.TypeInfo.ReleaseEnvironmentUpdateMetadata.fields = {
    scheduledDeploymentTime: { isDate: !0 },
    status: { enumType: m.TypeInfo.EnvironmentStatus },
  };
  m.TypeInfo.ReleaseGates.fields = {
    deploymentJobs: { isArray: !0, typeInfo: m.TypeInfo.DeploymentJob },
    ignoredGates: { isArray: !0, typeInfo: m.TypeInfo.IgnoredGate },
    lastModifiedOn: { isDate: !0 },
    stabilizationCompletedOn: { isDate: !0 },
    startedOn: { isDate: !0 },
    status: { enumType: m.TypeInfo.GateStatus },
    succeedingSince: { isDate: !0 },
  };
  m.TypeInfo.ReleaseGatesPhase.fields = {
    deploymentJobs: { isArray: !0, typeInfo: m.TypeInfo.DeploymentJob },
    ignoredGates: { isArray: !0, typeInfo: m.TypeInfo.IgnoredGate },
    manualInterventions: {
      isArray: !0,
      typeInfo: m.TypeInfo.ManualIntervention,
    },
    phaseType: { enumType: m.TypeInfo.DeployPhaseTypes },
    stabilizationCompletedOn: { isDate: !0 },
    startedOn: { isDate: !0 },
    status: { enumType: m.TypeInfo.DeployPhaseStatus },
    succeedingSince: { isDate: !0 },
  };
  m.TypeInfo.ReleaseNotCreatedEvent.fields = {
    releaseReason: { enumType: m.TypeInfo.ReleaseReason },
  };
  m.TypeInfo.ReleaseReference.fields = {
    createdOn: { isDate: !0 },
    reason: { enumType: m.TypeInfo.ReleaseReason },
  };
  m.TypeInfo.ReleaseRevision.fields = { changedDate: { isDate: !0 } };
  m.TypeInfo.ReleaseSchedule.fields = {
    daysToRelease: { enumType: m.TypeInfo.ScheduleDays },
  };
  m.TypeInfo.ReleaseStartMetadata.fields = {
    artifacts: { isArray: !0, typeInfo: m.TypeInfo.ArtifactMetadata },
    reason: { enumType: m.TypeInfo.ReleaseReason },
  };
  m.TypeInfo.ReleaseTask.fields = {
    dateEnded: { isDate: !0 },
    dateStarted: { isDate: !0 },
    finishTime: { isDate: !0 },
    startTime: { isDate: !0 },
    status: { enumType: m.TypeInfo.TaskStatus },
  };
  m.TypeInfo.ReleaseTaskAttachment.fields = {
    createdOn: { isDate: !0 },
    modifiedOn: { isDate: !0 },
  };
  m.TypeInfo.ReleaseTasksUpdatedEvent.fields = {
    job: { typeInfo: m.TypeInfo.ReleaseTask },
    tasks: { isArray: !0, typeInfo: m.TypeInfo.ReleaseTask },
  };
  m.TypeInfo.ReleaseTriggerBase.fields = {
    triggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.ReleaseUpdatedEvent.fields = {
    release: { typeInfo: m.TypeInfo.Release },
  };
  m.TypeInfo.ReleaseUpdateMetadata.fields = {
    status: { enumType: m.TypeInfo.ReleaseStatus },
  };
  m.TypeInfo.RunOnServerDeployPhase.fields = {
    deploymentInput: { typeInfo: m.TypeInfo.ServerDeploymentInput },
    phaseType: { enumType: m.TypeInfo.DeployPhaseTypes },
  };
  m.TypeInfo.ScheduledReleaseTrigger.fields = {
    schedule: { typeInfo: m.TypeInfo.ReleaseSchedule },
    triggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.ServerDeploymentInput.fields = {
    parallelExecution: { typeInfo: m.TypeInfo.ExecutionInput },
  };
  m.TypeInfo.SourcePullRequestVersion.fields = {
    pullRequestMergedAt: { isDate: !0 },
  };
  m.TypeInfo.SourceRepoTrigger.fields = {
    triggerType: { enumType: m.TypeInfo.ReleaseTriggerType },
  };
  m.TypeInfo.SummaryMailSection.fields = {
    sectionType: { enumType: m.TypeInfo.MailSectionType },
  };
  m.TypeInfo.VariableGroup.fields = {
    createdOn: { isDate: !0 },
    modifiedOn: { isDate: !0 },
  };
  m.TypeInfo.YamlFileSource.fields = {
    type: { enumType: m.TypeInfo.YamlFileSourceTypes },
  };
  m.TypeInfo.YamlPipelineProcess.fields = {
    fileSource: { typeInfo: m.TypeInfo.YamlFileSource },
    type: { enumType: m.TypeInfo.PipelineProcessTypes },
  };
});
var Jd = x((Jr) => {
  "use strict";
  var w =
    (Jr && Jr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Jr, "__esModule", { value: !0 });
  var O1 = qe(),
    Y = Qd(),
    Is = class extends O1.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Release-api", a);
      }
      getAgentArtifactDefinitions(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, releaseId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "f2571c27-bf50-4938-b396-32d109ddef26",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.AgentArtifactDefinition,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getApprovals(t, i, a, u, l, r, s, n, o) {
        return w(this, void 0, void 0, function* () {
          return new Promise((p, d) =>
            w(this, void 0, void 0, function* () {
              let c = { project: t },
                f = {
                  assignedToFilter: i,
                  statusFilter: a,
                  releaseIdsFilter: u && u.join(","),
                  typeFilter: l,
                  top: r,
                  continuationToken: s,
                  queryOrder: n,
                  includeMyGroupApprovals: o,
                };
              try {
                let h = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Release",
                    "b47c6458-e73b-47cb-a770-4df1e8813a91",
                    c,
                    f
                  ),
                  T = h.requestUrl,
                  q = this.createRequestOptions(
                    "application/json",
                    h.apiVersion
                  ),
                  j;
                j = yield this.rest.get(T, q);
                let F = this.formatResponse(
                  j.result,
                  Y.TypeInfo.ReleaseApproval,
                  !0
                );
                p(F);
              } catch (h) {
                d(h);
              }
            })
          );
        });
      }
      getApprovalHistory(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, approvalStepId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Release",
                    "250c7158-852e-4130-a00f-a0cce9b72d05",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ReleaseApproval,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getApproval(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, approvalId: i },
                s = { includeHistory: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Release",
                    "9328e074-59fb-465a-89d9-b09c82ee5109",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Y.TypeInfo.ReleaseApproval,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateReleaseApproval(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, approvalId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Release",
                    "9328e074-59fb-465a-89d9-b09c82ee5109",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  Y.TypeInfo.ReleaseApproval,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateReleaseApprovals(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Release",
                    "c957584a-82aa-4131-8222-6d47f78bfa7a",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ReleaseApproval,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTaskAttachmentContent(t, i, a, u, l, r, s, n) {
        return w(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            w(this, void 0, void 0, function* () {
              let d = {
                project: t,
                releaseId: i,
                environmentId: a,
                attemptId: u,
                timelineId: l,
                recordId: r,
                type: s,
                name: n,
              };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "c4071f6d-3697-46ca-858e-8b10ff09e52f",
                    d
                  ),
                  f = c.requestUrl,
                  h = c.apiVersion,
                  T = this.createAcceptHeader("application/octet-stream", h);
                o((yield this.http.get(f, { Accept: T })).message);
              } catch (c) {
                p(c);
              }
            })
          );
        });
      }
      getReleaseTaskAttachmentContent(t, i, a, u, l, r, s, n, o) {
        return w(this, void 0, void 0, function* () {
          return new Promise((p, d) =>
            w(this, void 0, void 0, function* () {
              let c = {
                project: t,
                releaseId: i,
                environmentId: a,
                attemptId: u,
                planId: l,
                timelineId: r,
                recordId: s,
                type: n,
                name: o,
              };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "60b86efb-7b8c-4853-8f9f-aa142b77b479",
                    c
                  ),
                  h = f.requestUrl,
                  T = f.apiVersion,
                  q = this.createAcceptHeader("application/octet-stream", T);
                p((yield this.http.get(h, { Accept: q })).message);
              } catch (f) {
                d(f);
              }
            })
          );
        });
      }
      getTaskAttachments(t, i, a, u, l, r) {
        return w(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            w(this, void 0, void 0, function* () {
              let o = {
                project: t,
                releaseId: i,
                environmentId: a,
                attemptId: u,
                timelineId: l,
                type: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "214111ee-2415-4df2-8ed2-74417f7d61f9",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  Y.TypeInfo.ReleaseTaskAttachment,
                  !0
                );
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      getReleaseTaskAttachments(t, i, a, u, l, r) {
        return w(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            w(this, void 0, void 0, function* () {
              let o = {
                project: t,
                releaseId: i,
                environmentId: a,
                attemptId: u,
                planId: l,
                type: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "a4d06688-0dfa-4895-82a5-f43ec9452306",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  Y.TypeInfo.ReleaseTaskAttachment,
                  !0
                );
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      getAutoTriggerIssues(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("artifactType can not be null or undefined");
          if (i == null)
            throw new TypeError("sourceId can not be null or undefined");
          if (a == null)
            throw new TypeError(
              "artifactVersionId can not be null or undefined"
            );
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = { project: u },
                n = { artifactType: t, sourceId: i, artifactVersionId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "c1a68497-69da-40fb-9423-cab19cfeeca9",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Y.TypeInfo.AutoTriggerIssue,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getDeploymentBadge(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = {
                projectId: t,
                releaseDefinitionId: i,
                environmentId: a,
                branchName: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "1a60a35d-b8c9-45fb-bf67-da0829711147",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getReleaseChanges(t, i, a, u, l) {
        return w(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            w(this, void 0, void 0, function* () {
              let n = { project: t, releaseId: i },
                o = { baseReleaseId: a, $top: u, artifactAlias: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "8dcf9fe9-ca37-4113-8ee1-37928e98407c",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, Y.TypeInfo.Change, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getDefinitionEnvironments(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { taskGroupId: i, propertyFilters: a && a.join(",") };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "12b5d21a-f54c-430e-a8c1-7515d196890e",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      createReleaseDefinition(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "d8f96f24-8ea7-4cb6-baab-2df8fc515665",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ReleaseDefinition,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteReleaseDefinition(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = { project: t, definitionId: i },
                n = { comment: a, forceDelete: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "d8f96f24-8ea7-4cb6-baab-2df8fc515665",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getReleaseDefinition(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i },
                s = { propertyFilters: a && a.join(",") };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "d8f96f24-8ea7-4cb6-baab-2df8fc515665",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Y.TypeInfo.ReleaseDefinition,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getReleaseDefinitionRevision(t, i, a) {
        return w(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("revision can not be null or undefined");
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i },
                s = { revision: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "d8f96f24-8ea7-4cb6-baab-2df8fc515665",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("text/plain", p);
                u((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getReleaseDefinitions(t, i, a, u, l, r, s, n, o, p, d, c, f, h, T) {
        return w(this, void 0, void 0, function* () {
          return new Promise((q, j) =>
            w(this, void 0, void 0, function* () {
              let F = { project: t },
                U = {
                  searchText: i,
                  $expand: a,
                  artifactType: u,
                  artifactSourceId: l,
                  $top: r,
                  continuationToken: s,
                  queryOrder: n,
                  path: o,
                  isExactNameMatch: p,
                  tagFilter: d && d.join(","),
                  propertyFilters: c && c.join(","),
                  definitionIdFilter: f && f.join(","),
                  isDeleted: h,
                  searchTextContainsFolderName: T,
                };
              try {
                let z = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "d8f96f24-8ea7-4cb6-baab-2df8fc515665",
                    F,
                    U
                  ),
                  W = z.requestUrl,
                  fe = this.createRequestOptions(
                    "application/json",
                    z.apiVersion
                  ),
                  Ie;
                Ie = yield this.rest.get(W, fe);
                let Te = this.formatResponse(
                  Ie.result,
                  Y.TypeInfo.ReleaseDefinition,
                  !0
                );
                q(Te);
              } catch (z) {
                j(z);
              }
            })
          );
        });
      }
      undeleteReleaseDefinition(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, definitionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "d8f96f24-8ea7-4cb6-baab-2df8fc515665",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  Y.TypeInfo.ReleaseDefinition,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateReleaseDefinition(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "d8f96f24-8ea7-4cb6-baab-2df8fc515665",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ReleaseDefinition,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getDeployments(t, i, a, u, l, r, s, n, o, p, d, c, f, h, T, q) {
        return w(this, void 0, void 0, function* () {
          return new Promise((j, F) =>
            w(this, void 0, void 0, function* () {
              let U = { project: t },
                z = {
                  definitionId: i,
                  definitionEnvironmentId: a,
                  createdBy: u,
                  minModifiedTime: l,
                  maxModifiedTime: r,
                  deploymentStatus: s,
                  operationStatus: n,
                  latestAttemptsOnly: o,
                  queryOrder: p,
                  $top: d,
                  continuationToken: c,
                  createdFor: f,
                  minStartedTime: h,
                  maxStartedTime: T,
                  sourceBranch: q,
                };
              try {
                let W = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "b005ef73-cddc-448e-9ba2-5193bf36b19f",
                    U,
                    z
                  ),
                  fe = W.requestUrl,
                  Ie = this.createRequestOptions(
                    "application/json",
                    W.apiVersion
                  ),
                  Te;
                Te = yield this.rest.get(fe, Ie);
                let Re = this.formatResponse(
                  Te.result,
                  Y.TypeInfo.Deployment,
                  !0
                );
                j(Re);
              } catch (W) {
                F(W);
              }
            })
          );
        });
      }
      getDeploymentsForMultipleEnvironments(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "b005ef73-cddc-448e-9ba2-5193bf36b19f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.Deployment,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getReleaseEnvironment(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = { project: t, releaseId: i, environmentId: a },
                n = { $expand: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "Release",
                    "a7e426b1-03dc-48af-9dfe-c98bac612dcb",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Y.TypeInfo.ReleaseEnvironment,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      updateReleaseEnvironment(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = { project: i, releaseId: a, environmentId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.7",
                    "Release",
                    "a7e426b1-03dc-48af-9dfe-c98bac612dcb",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  Y.TypeInfo.ReleaseEnvironment,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createDefinitionEnvironmentTemplate(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "6b03b696-824e-4479-8eb2-6644a51aba89",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ReleaseDefinitionEnvironmentTemplate,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteDefinitionEnvironmentTemplate(t, i) {
        return w(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("templateId can not be null or undefined");
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { templateId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "6b03b696-824e-4479-8eb2-6644a51aba89",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getDefinitionEnvironmentTemplate(t, i) {
        return w(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("templateId can not be null or undefined");
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { templateId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "6b03b696-824e-4479-8eb2-6644a51aba89",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Y.TypeInfo.ReleaseDefinitionEnvironmentTemplate,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      listDefinitionEnvironmentTemplates(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { isDeleted: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "6b03b696-824e-4479-8eb2-6644a51aba89",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Y.TypeInfo.ReleaseDefinitionEnvironmentTemplate,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      undeleteReleaseDefinitionEnvironmentTemplate(t, i) {
        return w(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("templateId can not be null or undefined");
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { templateId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.4",
                    "Release",
                    "6b03b696-824e-4479-8eb2-6644a51aba89",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, null, o);
                let d = this.formatResponse(
                  p.result,
                  Y.TypeInfo.ReleaseDefinitionEnvironmentTemplate,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      createFavorites(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = { project: i, scope: a },
                n = { identityId: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "938f7222-9acb-48fe-b8a3-4eda04597171",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(c.result, null, !0);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      deleteFavorites(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = { project: t, scope: i },
                n = { identityId: a, favoriteItemIds: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "938f7222-9acb-48fe-b8a3-4eda04597171",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getFavorites(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, scope: i },
                s = { identityId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "938f7222-9acb-48fe-b8a3-4eda04597171",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getFlightAssignments(t) {
        return w(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            w(this, void 0, void 0, function* () {
              let u = {},
                l = { flightName: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "409d301f-3046-46f3-beb9-4357fbce0a8c",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      createFolder(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, path: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "f7ddf76d-ce0c-4d68-94ff-becaec5d9dea",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, Y.TypeInfo.Folder, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteFolder(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, path: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "f7ddf76d-ce0c-4d68-94ff-becaec5d9dea",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getFolders(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, path: i },
                s = { queryOrder: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "f7ddf76d-ce0c-4d68-94ff-becaec5d9dea",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, Y.TypeInfo.Folder, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateFolder(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, path: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "f7ddf76d-ce0c-4d68-94ff-becaec5d9dea",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, Y.TypeInfo.Folder, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateGates(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, gateStepId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "2666a539-2001-4f80-bcc7-0379956749d4",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  Y.TypeInfo.ReleaseGates,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getReleaseHistory(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, releaseId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "23f461c8-629a-4144-a076-3054fa5f268a",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ReleaseRevision,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getInputValues(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "71dd499b-317d-45ea-9134-140ea1932b5e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getIssues(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, buildId: i },
                s = { sourceId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "cd42261a-f5c6-41c8-9259-f078989b9f25",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Y.TypeInfo.AutoTriggerIssue,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getGateLog(t, i, a, u, l) {
        return w(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            w(this, void 0, void 0, function* () {
              let n = {
                project: t,
                releaseId: i,
                environmentId: a,
                gateId: u,
                taskId: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "dec7ca5a-7f7f-4797-8bf1-8efc0dc93b28",
                    n
                  ),
                  p = o.requestUrl,
                  d = o.apiVersion,
                  c = this.createAcceptHeader("text/plain", d);
                r((yield this.http.get(p, { Accept: c })).message);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getLogs(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, releaseId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "c37fbab5-214b-48e4-a55b-cb6b4f6e4038",
                    l
                  ),
                  s = r.requestUrl,
                  n = r.apiVersion,
                  o = this.createAcceptHeader("application/zip", n);
                a((yield this.http.get(s, { Accept: o })).message);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getLog(t, i, a, u, l) {
        return w(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            w(this, void 0, void 0, function* () {
              let n = { project: t, releaseId: i, environmentId: a, taskId: u },
                o = { attemptId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "e71ba1ed-c0a4-4a28-a61f-2dd5f68cf3fd",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("text/plain", c);
                r((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getTaskLog2(t, i, a, u, l, r, s, n) {
        return w(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            w(this, void 0, void 0, function* () {
              let d = {
                  project: t,
                  releaseId: i,
                  environmentId: a,
                  attemptId: u,
                  timelineId: l,
                  taskId: r,
                },
                c = { startLine: s, endLine: n };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "2577e6c3-6999-4400-bc69-fe1d837755fe",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = f.apiVersion,
                  q = this.createAcceptHeader("text/plain", T);
                o((yield this.http.get(h, { Accept: q })).message);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getTaskLog(t, i, a, u, l, r, s) {
        return w(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            w(this, void 0, void 0, function* () {
              let p = {
                  project: t,
                  releaseId: i,
                  environmentId: a,
                  releaseDeployPhaseId: u,
                  taskId: l,
                },
                d = { startLine: r, endLine: s };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "17c91af7-09fd-4256-bff1-c24ee4f73bc0",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = c.apiVersion,
                  T = this.createAcceptHeader("text/plain", h);
                n((yield this.http.get(f, { Accept: T })).message);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      getManualIntervention(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, releaseId: i, manualInterventionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "616c46e4-f370-4456-adaa-fbaf79c7b79e",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Y.TypeInfo.ManualIntervention,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getManualInterventions(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, releaseId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "616c46e4-f370-4456-adaa-fbaf79c7b79e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ManualIntervention,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateManualIntervention(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = { project: i, releaseId: a, manualInterventionId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "616c46e4-f370-4456-adaa-fbaf79c7b79e",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  Y.TypeInfo.ManualIntervention,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getMetrics(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { minMetricsTime: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "cd1502bb-3c73-4e11-80a6-d11308dceae5",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getOrgPipelineReleaseSettings() {
        return w(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            w(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "d156c759-ca4e-492b-90d4-db03971796ea",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !1);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      updateOrgPipelineReleaseSettings(t) {
        return w(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            w(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "d156c759-ca4e-492b-90d4-db03971796ea",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.update(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getPipelineReleaseSettings(t) {
        return w(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            w(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "e816b9f4-f9fe-46ba-bdcc-a9af6abf3144",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updatePipelineReleaseSettings(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "e816b9f4-f9fe-46ba-bdcc-a9af6abf3144",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getReleaseProjects(t, i) {
        return w(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("artifactType can not be null or undefined");
          if (i == null)
            throw new TypeError(
              "artifactSourceId can not be null or undefined"
            );
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = {},
                r = { artifactType: t, artifactSourceId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "917ace4a-79d1-45a7-987c-7be4db4268fa",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getReleases(
        t,
        i,
        a,
        u,
        l,
        r,
        s,
        n,
        o,
        p,
        d,
        c,
        f,
        h,
        T,
        q,
        j,
        F,
        U,
        z,
        W,
        fe
      ) {
        return w(this, void 0, void 0, function* () {
          return new Promise((Ie, Te) =>
            w(this, void 0, void 0, function* () {
              let Re = { project: t },
                Ge = {
                  definitionId: i,
                  definitionEnvironmentId: a,
                  searchText: u,
                  createdBy: l,
                  statusFilter: r,
                  environmentStatusFilter: s,
                  minCreatedTime: n,
                  maxCreatedTime: o,
                  queryOrder: p,
                  $top: d,
                  continuationToken: c,
                  $expand: f,
                  artifactTypeId: h,
                  sourceId: T,
                  artifactVersionId: q,
                  sourceBranchFilter: j,
                  isDeleted: F,
                  tagFilter: U && U.join(","),
                  propertyFilters: z && z.join(","),
                  releaseIdFilter: W && W.join(","),
                  path: fe,
                };
              try {
                let ft = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    Re,
                    Ge
                  ),
                  Ye = ft.requestUrl,
                  rt = this.createRequestOptions(
                    "application/json",
                    ft.apiVersion
                  ),
                  mt;
                mt = yield this.rest.get(Ye, rt);
                let Si = this.formatResponse(mt.result, Y.TypeInfo.Release, !0);
                Ie(Si);
              } catch (ft) {
                Te(ft);
              }
            })
          );
        });
      }
      createRelease(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, Y.TypeInfo.Release, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteRelease(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, releaseId: i },
                s = { comment: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getRelease(t, i, a, u, l, r) {
        return w(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            w(this, void 0, void 0, function* () {
              let o = { project: t, releaseId: i },
                p = {
                  approvalFilters: a,
                  propertyFilters: u && u.join(","),
                  $expand: l,
                  $topGateRecords: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, Y.TypeInfo.Release, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getReleaseDefinitionSummary(t, i, a, u, l) {
        return w(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("definitionId can not be null or undefined");
          if (a == null)
            throw new TypeError("releaseCount can not be null or undefined");
          return new Promise((r, s) =>
            w(this, void 0, void 0, function* () {
              let n = { project: t },
                o = {
                  definitionId: i,
                  releaseCount: a,
                  includeArtifact: u,
                  definitionEnvironmentIdsFilter: l && l.join(","),
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  Y.TypeInfo.ReleaseDefinitionSummary,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getReleaseRevision(t, i, a) {
        return w(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError(
              "definitionSnapshotRevision can not be null or undefined"
            );
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, releaseId: i },
                s = { definitionSnapshotRevision: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("text/plain", p);
                u((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      undeleteRelease(t, i, a) {
        return w(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("comment can not be null or undefined");
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, releaseId: i },
                s = { comment: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, null, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateRelease(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, releaseId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(p.result, Y.TypeInfo.Release, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateReleaseResource(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, releaseId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.8",
                    "Release",
                    "a166fde7-27ad-408e-ba75-703c2cc9d500",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, Y.TypeInfo.Release, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getReleaseSettings(t) {
        return w(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            w(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "c63c3718-7cfd-41e0-b89b-81c1ca143437",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateReleaseSettings(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "c63c3718-7cfd-41e0-b89b-81c1ca143437",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getDefinitionRevision(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, definitionId: i, revision: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "258b82e0-9d41-43f3-86d6-fef14ddd44bc",
                    r
                  ),
                  n = s.requestUrl,
                  o = s.apiVersion,
                  p = this.createAcceptHeader("text/plain", o);
                u((yield this.http.get(n, { Accept: p })).message);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getReleaseDefinitionHistory(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, definitionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "258b82e0-9d41-43f3-86d6-fef14ddd44bc",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ReleaseDefinitionRevision,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getSummaryMailSections(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, releaseId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "224e92b2-8d13-4c14-b120-13d877c516f8",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.SummaryMailSection,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      sendSummaryMail(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, releaseId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "224e92b2-8d13-4c14-b120-13d877c516f8",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getSourceBranches(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, definitionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "0e5def23-78b3-461f-8198-1558f25041c8",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addDefinitionTag(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, releaseDefinitionId: i, tag: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "3d21b4c8-c32e-45b2-a7cb-770a369012f4",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, null, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addDefinitionTags(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, releaseDefinitionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "3d21b4c8-c32e-45b2-a7cb-770a369012f4",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteDefinitionTag(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, releaseDefinitionId: i, tag: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "3d21b4c8-c32e-45b2-a7cb-770a369012f4",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getDefinitionTags(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, releaseDefinitionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "3d21b4c8-c32e-45b2-a7cb-770a369012f4",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addReleaseTag(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, releaseId: i, tag: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "c5b602b6-d1b3-4363-8a51-94384f78068f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, null, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addReleaseTags(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: i, releaseId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "c5b602b6-d1b3-4363-8a51-94384f78068f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteReleaseTag(t, i, a) {
        return w(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            w(this, void 0, void 0, function* () {
              let r = { project: t, releaseId: i, tag: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "c5b602b6-d1b3-4363-8a51-94384f78068f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getReleaseTags(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t, releaseId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "c5b602b6-d1b3-4363-8a51-94384f78068f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTags(t) {
        return w(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            w(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "86cee25a-68ba-4ba3-9171-8ad6ffc6df93",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getTasksForTaskGroup(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = {
                project: t,
                releaseId: i,
                environmentId: a,
                releaseDeployPhaseId: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "4259191d-4b0a-4409-9fb3-09f22ab9bc47",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Y.TypeInfo.ReleaseTask,
                  !0
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getTasks2(t, i, a, u, l) {
        return w(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            w(this, void 0, void 0, function* () {
              let n = {
                project: t,
                releaseId: i,
                environmentId: a,
                attemptId: u,
                timelineId: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "4259291d-4b0a-4409-9fb3-04f22ab9bc47",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Y.TypeInfo.ReleaseTask,
                  !0
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getTasks(t, i, a, u) {
        return w(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            w(this, void 0, void 0, function* () {
              let s = { project: t, releaseId: i, environmentId: a },
                n = { attemptId: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Release",
                    "36b276e0-3c70-4320-a63c-1a2e1466a0d1",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Y.TypeInfo.ReleaseTask,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getArtifactTypeDefinitions(t) {
        return w(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            w(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "8efc2a3c-1fc8-4f6d-9822-75e98cecb48f",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  Y.TypeInfo.ArtifactTypeDefinition,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getArtifactVersions(t, i) {
        return w(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError(
              "releaseDefinitionId can not be null or undefined"
            );
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { releaseDefinitionId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "30fc787e-a9e0-4a07-9fbc-3e903aa051d2",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Y.TypeInfo.ArtifactVersionQueryResult,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getArtifactVersionsForSources(t, i) {
        return w(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            w(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "30fc787e-a9e0-4a07-9fbc-3e903aa051d2",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  Y.TypeInfo.ArtifactVersionQueryResult,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getReleaseWorkItemsRefs(t, i, a, u, l) {
        return w(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            w(this, void 0, void 0, function* () {
              let n = { project: t, releaseId: i },
                o = { baseReleaseId: a, $top: u, artifactAlias: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Release",
                    "4f165cc0-875c-4768-b148-f12f78769fab",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
    };
  Is.RESOURCE_AREA_ID = "efc2f575-36ef-48e9-b672-0c6fb4a48ac5";
  Jr.ReleaseApi = Is;
});
var Kd = x((gi) => {
  "use strict";
  Object.defineProperty(gi, "__esModule", { value: !0 });
  var U1;
  (function (e) {
    (e[(e.Assigned = 1)] = "Assigned"), (e[(e.Inherited = 2)] = "Inherited");
  })((U1 = gi.RoleAccess || (gi.RoleAccess = {})));
  gi.TypeInfo = {
    RoleAccess: { enumValues: { assigned: 1, inherited: 2 } },
    RoleAssignment: {},
  };
  gi.TypeInfo.RoleAssignment.fields = {
    access: { enumType: gi.TypeInfo.RoleAccess },
  };
});
var Xd = x((Kr) => {
  "use strict";
  var yt =
    (Kr && Kr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Kr, "__esModule", { value: !0 });
  var k1 = qe(),
    xa = Kd(),
    _a = class extends k1.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-SecurityRoles-api", a);
      }
      getRoleAssignments(t, i) {
        return yt(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            yt(this, void 0, void 0, function* () {
              let l = { scopeId: t, resourceId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "securityroles",
                    "9461c234-c84c-4ed2-b918-2f0f92ad0a35",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  xa.TypeInfo.RoleAssignment,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      removeRoleAssignment(t, i, a) {
        return yt(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            yt(this, void 0, void 0, function* () {
              let r = { scopeId: t, resourceId: i, identityId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "securityroles",
                    "9461c234-c84c-4ed2-b918-2f0f92ad0a35",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      removeRoleAssignments(t, i, a) {
        return yt(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            yt(this, void 0, void 0, function* () {
              let r = { scopeId: i, resourceId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "securityroles",
                    "9461c234-c84c-4ed2-b918-2f0f92ad0a35",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      setRoleAssignment(t, i, a, u) {
        return yt(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            yt(this, void 0, void 0, function* () {
              let s = { scopeId: i, resourceId: a, identityId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "securityroles",
                    "9461c234-c84c-4ed2-b918-2f0f92ad0a35",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  xa.TypeInfo.RoleAssignment,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      setRoleAssignments(t, i, a) {
        return yt(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            yt(this, void 0, void 0, function* () {
              let r = { scopeId: i, resourceId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "securityroles",
                    "9461c234-c84c-4ed2-b918-2f0f92ad0a35",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  xa.TypeInfo.RoleAssignment,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getRoleDefinitions(t) {
        return yt(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            yt(this, void 0, void 0, function* () {
              let u = { scopeId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "3.2-preview.1",
                    "securityroles",
                    "f4cc9a86-453c-48d2-b44d-d3bd5c105f4f",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
    };
  Kr.SecurityRolesApi = _a;
});
var Fa = x((g) => {
  "use strict";
  Object.defineProperty(g, "__esModule", { value: !0 });
  var Ga = Ma(),
    E1;
  (function (e) {
    (e[(e.NoOption = 0)] = "NoOption"),
      (e[(e.Login = 1)] = "Login"),
      (e[(e.SelectAccount = 2)] = "SelectAccount"),
      (e[(e.FreshLogin = 3)] = "FreshLogin"),
      (e[(e.FreshLoginWithMfa = 4)] = "FreshLoginWithMfa");
  })((E1 = g.AadLoginPromptOption || (g.AadLoginPromptOption = {})));
  var S1;
  (function (e) {
    (e[(e.Add = 1)] = "Add"),
      (e[(e.Update = 2)] = "Update"),
      (e[(e.Delete = 3)] = "Delete"),
      (e[(e.Undelete = 4)] = "Undelete");
  })((S1 = g.AuditAction || (g.AuditAction = {})));
  var N1;
  (function (e) {
    (e[(e.Task = 0)] = "Task"), (e[(e.Feature = 1)] = "Feature");
  })((N1 = g.DemandSourceType || (g.DemandSourceType = {})));
  var B1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.Use = 16)] = "Use");
  })(
    (B1 = g.DeploymentGroupActionFilter || (g.DeploymentGroupActionFilter = {}))
  );
  var M1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Machines = 2)] = "Machines"),
      (e[(e.Tags = 4)] = "Tags");
  })((M1 = g.DeploymentGroupExpands || (g.DeploymentGroupExpands = {})));
  var x1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Capabilities = 2)] = "Capabilities"),
      (e[(e.AssignedRequest = 4)] = "AssignedRequest");
  })((x1 = g.DeploymentMachineExpands || (g.DeploymentMachineExpands = {})));
  var _1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.DeploymentGroups = 2)] = "DeploymentGroups"),
      (e[(e.Resource = 4)] = "Resource");
  })(
    (_1 =
      g.DeploymentPoolSummaryExpands || (g.DeploymentPoolSummaryExpands = {}))
  );
  var G1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Capabilities = 2)] = "Capabilities"),
      (e[(e.AssignedRequest = 4)] = "AssignedRequest"),
      (e[(e.LastCompletedRequest = 8)] = "LastCompletedRequest");
  })((G1 = g.DeploymentTargetExpands || (g.DeploymentTargetExpands = {})));
  var F1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Enabled = 1)] = "Enabled"),
      (e[(e.Online = 2)] = "Online"),
      (e[(e.Assigned = 4)] = "Assigned");
  })((F1 = g.ElasticAgentState || (g.ElasticAgentState = {})));
  var L1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Healthy = 1)] = "Healthy"),
      (e[(e.Creating = 2)] = "Creating"),
      (e[(e.Deleting = 3)] = "Deleting"),
      (e[(e.Failed = 4)] = "Failed"),
      (e[(e.Stopped = 5)] = "Stopped"),
      (e[(e.Reimaging = 6)] = "Reimaging");
  })((L1 = g.ElasticComputeState || (g.ElasticComputeState = {})));
  var W1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.New = 1)] = "New"),
      (e[(e.CreatingCompute = 2)] = "CreatingCompute"),
      (e[(e.StartingAgent = 3)] = "StartingAgent"),
      (e[(e.Idle = 4)] = "Idle"),
      (e[(e.Assigned = 5)] = "Assigned"),
      (e[(e.Offline = 6)] = "Offline"),
      (e[(e.PendingReimage = 7)] = "PendingReimage"),
      (e[(e.PendingDelete = 8)] = "PendingDelete"),
      (e[(e.Saved = 9)] = "Saved"),
      (e[(e.DeletingCompute = 10)] = "DeletingCompute"),
      (e[(e.Deleted = 11)] = "Deleted"),
      (e[(e.Lost = 12)] = "Lost"),
      (e[(e.ReimagingCompute = 13)] = "ReimagingCompute"),
      (e[(e.RestartingAgent = 14)] = "RestartingAgent"),
      (e[(e.FailedToStartPendingDelete = 15)] = "FailedToStartPendingDelete"),
      (e[(e.FailedToRestartPendingDelete = 16)] =
        "FailedToRestartPendingDelete"),
      (e[(e.FailedVMPendingDelete = 17)] = "FailedVMPendingDelete"),
      (e[(e.AssignedPendingDelete = 18)] = "AssignedPendingDelete");
  })((W1 = g.ElasticNodeState || (g.ElasticNodeState = {})));
  var $1;
  (function (e) {
    (e[(e.Online = 0)] = "Online"),
      (e[(e.Offline = 1)] = "Offline"),
      (e[(e.Unhealthy = 2)] = "Unhealthy"),
      (e[(e.New = 3)] = "New");
  })(($1 = g.ElasticPoolState || (g.ElasticPoolState = {})));
  var H1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.Use = 16)] = "Use");
  })((H1 = g.EnvironmentActionFilter || (g.EnvironmentActionFilter = {})));
  var z1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.ResourceReferences = 1)] = "ResourceReferences");
  })((z1 = g.EnvironmentExpands || (g.EnvironmentExpands = {})));
  var Q1;
  (function (e) {
    (e[(e.Undefined = 0)] = "Undefined"),
      (e[(e.Generic = 1)] = "Generic"),
      (e[(e.VirtualMachine = 2)] = "VirtualMachine"),
      (e[(e.Kubernetes = 4)] = "Kubernetes");
  })((Q1 = g.EnvironmentResourceType || (g.EnvironmentResourceType = {})));
  var J1;
  (function (e) {
    (e[(e.RunLatest = 0)] = "RunLatest"),
      (e[(e.Sequential = 1)] = "Sequential");
  })((J1 = g.ExclusiveLockType || (g.ExclusiveLockType = {})));
  var K1;
  (function (e) {
    (e[(e.Error = 1)] = "Error"), (e[(e.Warning = 2)] = "Warning");
  })((K1 = g.IssueType || (g.IssueType = {})));
  var X1;
  (function (e) {
    (e[(e.Error = 0)] = "Error"),
      (e[(e.Warning = 1)] = "Warning"),
      (e[(e.Info = 2)] = "Info");
  })((X1 = g.LogLevel || (g.LogLevel = {})));
  var Z1;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.Use = 16)] = "Use");
  })((Z1 = g.MachineGroupActionFilter || (g.MachineGroupActionFilter = {})));
  var Y1;
  (function (e) {
    (e[(e.Variable = 1)] = "Variable"), (e[(e.Regex = 2)] = "Regex");
  })((Y1 = g.MaskType || (g.MaskType = {})));
  var eT;
  (function (e) {
    (e[(e.Windows = 0)] = "Windows"), (e[(e.Linux = 1)] = "Linux");
  })((eT = g.OperatingSystemType || (g.OperatingSystemType = {})));
  var tT;
  (function (e) {
    (e[(e.ConfigurationJob = 0)] = "ConfigurationJob"),
      (e[(e.SizingJob = 1)] = "SizingJob"),
      (e[(e.IncreaseCapacity = 2)] = "IncreaseCapacity"),
      (e[(e.Reimage = 3)] = "Reimage"),
      (e[(e.DeleteVMs = 4)] = "DeleteVMs");
  })((tT = g.OperationType || (g.OperationType = {})));
  var iT;
  (function (e) {
    (e[(e.Running = 1)] = "Running"),
      (e[(e.Queued = 2)] = "Queued"),
      (e[(e.All = 3)] = "All");
  })((iT = g.PlanGroupStatus || (g.PlanGroupStatus = {})));
  var rT;
  (function (e) {
    (e[(e.Running = 1)] = "Running"),
      (e[(e.Queued = 2)] = "Queued"),
      (e[(e.All = 3)] = "All");
  })((rT = g.PlanGroupStatusFilter || (g.PlanGroupStatusFilter = {})));
  var nT;
  (function (e) {
    (e[(e.Queued = 0)] = "Queued"),
      (e[(e.InUse = 1)] = "InUse"),
      (e[(e.Finished = 2)] = "Finished"),
      (e[(e.TimedOut = 3)] = "TimedOut"),
      (e[(e.Canceled = 4)] = "Canceled"),
      (e[(e.Abandoned = 5)] = "Abandoned"),
      (e[(e.WaitingOnChecks = 6)] = "WaitingOnChecks");
  })((nT = g.ResourceLockStatus || (g.ResourceLockStatus = {})));
  var sT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.Use = 16)] = "Use");
  })((sT = g.SecureFileActionFilter || (g.SecureFileActionFilter = {})));
  var oT;
  (function (e) {
    (e[(e.Failed = 1)] = "Failed"),
      (e[(e.Passed = 2)] = "Passed"),
      (e[(e.NeverDeployed = 4)] = "NeverDeployed"),
      (e[(e.All = 7)] = "All");
  })((oT = g.TaskAgentJobResultFilter || (g.TaskAgentJobResultFilter = {})));
  var aT;
  (function (e) {
    (e[(e.Task = 1)] = "Task"), (e[(e.Action = 2)] = "Action");
  })((aT = g.TaskAgentJobStepType || (g.TaskAgentJobStepType = {})));
  var lT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.Use = 16)] = "Use");
  })((lT = g.TaskAgentPoolActionFilter || (g.TaskAgentPoolActionFilter = {})));
  var uT;
  (function (e) {
    (e[(e.Succeeded = 1)] = "Succeeded"),
      (e[(e.Failed = 2)] = "Failed"),
      (e[(e.Canceled = 4)] = "Canceled");
  })(
    (uT =
      g.TaskAgentPoolMaintenanceJobResult ||
      (g.TaskAgentPoolMaintenanceJobResult = {}))
  );
  var pT;
  (function (e) {
    (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Completed = 2)] = "Completed"),
      (e[(e.Cancelling = 4)] = "Cancelling"),
      (e[(e.Queued = 8)] = "Queued");
  })(
    (pT =
      g.TaskAgentPoolMaintenanceJobStatus ||
      (g.TaskAgentPoolMaintenanceJobStatus = {}))
  );
  var dT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Monday = 1)] = "Monday"),
      (e[(e.Tuesday = 2)] = "Tuesday"),
      (e[(e.Wednesday = 4)] = "Wednesday"),
      (e[(e.Thursday = 8)] = "Thursday"),
      (e[(e.Friday = 16)] = "Friday"),
      (e[(e.Saturday = 32)] = "Saturday"),
      (e[(e.Sunday = 64)] = "Sunday"),
      (e[(e.All = 127)] = "All");
  })(
    (dT =
      g.TaskAgentPoolMaintenanceScheduleDays ||
      (g.TaskAgentPoolMaintenanceScheduleDays = {}))
  );
  var cT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.ElasticPool = 1)] = "ElasticPool"),
      (e[(e.SingleUseAgents = 2)] = "SingleUseAgents"),
      (e[(e.PreserveAgentOnJobFailure = 4)] = "PreserveAgentOnJobFailure");
  })((cT = g.TaskAgentPoolOptions || (g.TaskAgentPoolOptions = {})));
  var fT;
  (function (e) {
    (e[(e.Automation = 1)] = "Automation"),
      (e[(e.Deployment = 2)] = "Deployment");
  })((fT = g.TaskAgentPoolType || (g.TaskAgentPoolType = {})));
  var hT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.Use = 16)] = "Use");
  })(
    (hT = g.TaskAgentQueueActionFilter || (g.TaskAgentQueueActionFilter = {}))
  );
  var yT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.BumpRequestToTop = 1)] = "BumpRequestToTop");
  })(
    (yT =
      g.TaskAgentRequestUpdateOptions || (g.TaskAgentRequestUpdateOptions = {}))
  );
  var vT;
  (function (e) {
    (e[(e.Offline = 1)] = "Offline"), (e[(e.Online = 2)] = "Online");
  })((vT = g.TaskAgentStatus || (g.TaskAgentStatus = {})));
  var mT;
  (function (e) {
    (e[(e.Offline = 1)] = "Offline"),
      (e[(e.Online = 2)] = "Online"),
      (e[(e.All = 3)] = "All");
  })((mT = g.TaskAgentStatusFilter || (g.TaskAgentStatusFilter = {})));
  var gT;
  (function (e) {
    (e[(e.Manual = 1)] = "Manual"),
      (e[(e.MinAgentVersionRequired = 2)] = "MinAgentVersionRequired"),
      (e[(e.Downgrade = 3)] = "Downgrade");
  })((gT = g.TaskAgentUpdateReasonType || (g.TaskAgentUpdateReasonType = {})));
  var IT;
  (function (e) {
    (e[(e.Any = 0)] = "Any"), (e[(e.Restricted = 1)] = "Restricted");
  })((IT = g.TaskCommandMode || (g.TaskCommandMode = {})));
  var TT;
  (function (e) {
    (e[(e.Preinstalled = 1)] = "Preinstalled"),
      (e[(e.ReceivedInstallOrUpdate = 2)] = "ReceivedInstallOrUpdate"),
      (e[(e.Installed = 3)] = "Installed"),
      (e[(e.ReceivedUninstall = 4)] = "ReceivedUninstall"),
      (e[(e.Uninstalled = 5)] = "Uninstalled"),
      (e[(e.RequestedUpdate = 6)] = "RequestedUpdate"),
      (e[(e.Updated = 7)] = "Updated"),
      (e[(e.AlreadyUpToDate = 8)] = "AlreadyUpToDate"),
      (e[(e.InlineUpdateReceived = 9)] = "InlineUpdateReceived");
  })((TT = g.TaskDefinitionStatus || (g.TaskDefinitionStatus = {})));
  var RT;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.Tasks = 2)] = "Tasks");
  })((RT = g.TaskGroupExpands || (g.TaskGroupExpands = {})));
  var VT;
  (function (e) {
    (e[(e.CreatedOnAscending = 0)] = "CreatedOnAscending"),
      (e[(e.CreatedOnDescending = 1)] = "CreatedOnDescending");
  })((VT = g.TaskGroupQueryOrder || (g.TaskGroupQueryOrder = {})));
  var bT;
  (function (e) {
    (e[(e.Container = 0)] = "Container"), (e[(e.Job = 1)] = "Job");
  })((bT = g.TaskOrchestrationItemType || (g.TaskOrchestrationItemType = {})));
  var DT;
  (function (e) {
    (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Queued = 2)] = "Queued"),
      (e[(e.Completed = 4)] = "Completed"),
      (e[(e.Throttled = 8)] = "Throttled");
  })(
    (DT = g.TaskOrchestrationPlanState || (g.TaskOrchestrationPlanState = {}))
  );
  var wT;
  (function (e) {
    (e[(e.Succeeded = 0)] = "Succeeded"),
      (e[(e.SucceededWithIssues = 1)] = "SucceededWithIssues"),
      (e[(e.Failed = 2)] = "Failed"),
      (e[(e.Canceled = 3)] = "Canceled"),
      (e[(e.Skipped = 4)] = "Skipped"),
      (e[(e.Abandoned = 5)] = "Abandoned");
  })((wT = g.TaskResult || (g.TaskResult = {})));
  var qT;
  (function (e) {
    (e[(e.Pending = 0)] = "Pending"),
      (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Completed = 2)] = "Completed");
  })((qT = g.TimelineRecordState || (g.TimelineRecordState = {})));
  var PT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Manage = 2)] = "Manage"),
      (e[(e.Use = 16)] = "Use");
  })((PT = g.VariableGroupActionFilter || (g.VariableGroupActionFilter = {})));
  var CT;
  (function (e) {
    (e[(e.IdAscending = 0)] = "IdAscending"),
      (e[(e.IdDescending = 1)] = "IdDescending");
  })((CT = g.VariableGroupQueryOrder || (g.VariableGroupQueryOrder = {})));
  g.TypeInfo = {
    AadLoginPromptOption: {
      enumValues: {
        noOption: 0,
        login: 1,
        selectAccount: 2,
        freshLogin: 3,
        freshLoginWithMfa: 4,
      },
    },
    AgentChangeEvent: {},
    AgentJobRequestMessage: {},
    AgentPoolEvent: {},
    AgentQueueEvent: {},
    AgentQueuesEvent: {},
    AuditAction: { enumValues: { add: 1, update: 2, delete: 3, undelete: 4 } },
    AzureKeyVaultVariableGroupProviderData: {},
    AzureKeyVaultVariableValue: {},
    DemandMinimumVersion: {},
    DemandSource: {},
    DemandSourceType: { enumValues: { task: 0, feature: 1 } },
    DeploymentGroup: {},
    DeploymentGroupActionFilter: {
      enumValues: { none: 0, manage: 2, use: 16 },
    },
    DeploymentGroupExpands: { enumValues: { none: 0, machines: 2, tags: 4 } },
    DeploymentGroupMetrics: {},
    DeploymentGroupReference: {},
    DeploymentMachine: {},
    DeploymentMachineChangedData: {},
    DeploymentMachineExpands: {
      enumValues: { none: 0, capabilities: 2, assignedRequest: 4 },
    },
    DeploymentMachineGroup: {},
    DeploymentMachineGroupReference: {},
    DeploymentMachinesChangeEvent: {},
    DeploymentPoolSummary: {},
    DeploymentPoolSummaryExpands: {
      enumValues: { none: 0, deploymentGroups: 2, resource: 4 },
    },
    DeploymentTargetExpands: {
      enumValues: {
        none: 0,
        capabilities: 2,
        assignedRequest: 4,
        lastCompletedRequest: 8,
      },
    },
    ElasticAgentState: {
      enumValues: { none: 0, enabled: 1, online: 2, assigned: 4 },
    },
    ElasticComputeState: {
      enumValues: {
        none: 0,
        healthy: 1,
        creating: 2,
        deleting: 3,
        failed: 4,
        stopped: 5,
        reimaging: 6,
      },
    },
    ElasticNode: {},
    ElasticNodeSettings: {},
    ElasticNodeState: {
      enumValues: {
        none: 0,
        new: 1,
        creatingCompute: 2,
        startingAgent: 3,
        idle: 4,
        assigned: 5,
        offline: 6,
        pendingReimage: 7,
        pendingDelete: 8,
        saved: 9,
        deletingCompute: 10,
        deleted: 11,
        lost: 12,
        reimagingCompute: 13,
        restartingAgent: 14,
        failedToStartPendingDelete: 15,
        failedToRestartPendingDelete: 16,
        failedVMPendingDelete: 17,
        assignedPendingDelete: 18,
      },
    },
    ElasticPool: {},
    ElasticPoolCreationResult: {},
    ElasticPoolLog: {},
    ElasticPoolSettings: {},
    ElasticPoolState: {
      enumValues: { online: 0, offline: 1, unhealthy: 2, new: 3 },
    },
    EnvironmentActionFilter: { enumValues: { none: 0, manage: 2, use: 16 } },
    EnvironmentDeploymentExecutionRecord: {},
    EnvironmentExpands: { enumValues: { none: 0, resourceReferences: 1 } },
    EnvironmentInstance: {},
    EnvironmentResource: {},
    EnvironmentResourceDeploymentExecutionRecord: {},
    EnvironmentResourceReference: {},
    EnvironmentResourceType: {
      enumValues: {
        undefined: 0,
        generic: 1,
        virtualMachine: 2,
        kubernetes: 4,
      },
    },
    ExclusiveLockType: { enumValues: { runLatest: 0, sequential: 1 } },
    Issue: {},
    IssueType: { enumValues: { error: 1, warning: 2 } },
    JobAssignedEvent: {},
    JobCompletedEvent: {},
    JobEnvironment: {},
    JobRequestMessage: {},
    KubernetesResource: {},
    LogLevel: { enumValues: { error: 0, warning: 1, info: 2 } },
    MachineGroupActionFilter: { enumValues: { none: 0, manage: 2, use: 16 } },
    MaskHint: {},
    MaskType: { enumValues: { variable: 1, regex: 2 } },
    OperatingSystemType: { enumValues: { windows: 0, linux: 1 } },
    OperationType: {
      enumValues: {
        configurationJob: 0,
        sizingJob: 1,
        increaseCapacity: 2,
        reimage: 3,
        deleteVMs: 4,
      },
    },
    PackageMetadata: {},
    PlanEnvironment: {},
    PlanGroupStatus: { enumValues: { running: 1, queued: 2, all: 3 } },
    PlanGroupStatusFilter: { enumValues: { running: 1, queued: 2, all: 3 } },
    ResourceLockRequest: {},
    ResourceLockStatus: {
      enumValues: {
        queued: 0,
        inUse: 1,
        finished: 2,
        timedOut: 3,
        canceled: 4,
        abandoned: 5,
        waitingOnChecks: 6,
      },
    },
    ResourceUsage: {},
    SecureFile: {},
    SecureFileActionFilter: { enumValues: { none: 0, manage: 2, use: 16 } },
    SecureFileEvent: {},
    ServerTaskRequestMessage: {},
    ServiceEndpointAuthenticationScheme: {},
    ServiceEndpointExecutionData: {},
    ServiceEndpointExecutionRecord: {},
    ServiceEndpointExecutionRecordsInput: {},
    ServiceEndpointRequestResult: {},
    ServiceEndpointType: {},
    TaskAgent: {},
    TaskAgentCloudRequest: {},
    TaskAgentCloudType: {},
    TaskAgentDowngrade: {},
    TaskAgentJob: {},
    TaskAgentJobRequest: {},
    TaskAgentJobResultFilter: {
      enumValues: { failed: 1, passed: 2, neverDeployed: 4, all: 7 },
    },
    TaskAgentJobStep: {},
    TaskAgentJobStepType: { enumValues: { task: 1, action: 2 } },
    TaskAgentManualUpdate: {},
    TaskAgentMinAgentVersionRequiredUpdate: {},
    TaskAgentPool: {},
    TaskAgentPoolActionFilter: { enumValues: { none: 0, manage: 2, use: 16 } },
    TaskAgentPoolMaintenanceDefinition: {},
    TaskAgentPoolMaintenanceJob: {},
    TaskAgentPoolMaintenanceJobResult: {
      enumValues: { succeeded: 1, failed: 2, canceled: 4 },
    },
    TaskAgentPoolMaintenanceJobStatus: {
      enumValues: { inProgress: 1, completed: 2, cancelling: 4, queued: 8 },
    },
    TaskAgentPoolMaintenanceJobTargetAgent: {},
    TaskAgentPoolMaintenanceSchedule: {},
    TaskAgentPoolMaintenanceScheduleDays: {
      enumValues: {
        none: 0,
        monday: 1,
        tuesday: 2,
        wednesday: 4,
        thursday: 8,
        friday: 16,
        saturday: 32,
        sunday: 64,
        all: 127,
      },
    },
    TaskAgentPoolOptions: {
      enumValues: {
        none: 0,
        elasticPool: 1,
        singleUseAgents: 2,
        preserveAgentOnJobFailure: 4,
      },
    },
    TaskAgentPoolReference: {},
    TaskAgentPoolStatus: {},
    TaskAgentPoolSummary: {},
    TaskAgentPoolType: { enumValues: { automation: 1, deployment: 2 } },
    TaskAgentQueue: {},
    TaskAgentQueueActionFilter: { enumValues: { none: 0, manage: 2, use: 16 } },
    TaskAgentReference: {},
    TaskAgentRequestUpdateOptions: {
      enumValues: { none: 0, bumpRequestToTop: 1 },
    },
    TaskAgentSession: {},
    TaskAgentStatus: { enumValues: { offline: 1, online: 2 } },
    TaskAgentStatusFilter: { enumValues: { offline: 1, online: 2, all: 3 } },
    TaskAgentUpdate: {},
    TaskAgentUpdateReason: {},
    TaskAgentUpdateReasonType: {
      enumValues: { manual: 1, minAgentVersionRequired: 2, downgrade: 3 },
    },
    TaskAttachment: {},
    TaskCommandMode: { enumValues: { any: 0, restricted: 1 } },
    TaskCommandRestrictions: {},
    TaskCompletedEvent: {},
    TaskDefinition: {},
    TaskDefinitionStatus: {
      enumValues: {
        preinstalled: 1,
        receivedInstallOrUpdate: 2,
        installed: 3,
        receivedUninstall: 4,
        uninstalled: 5,
        requestedUpdate: 6,
        updated: 7,
        alreadyUpToDate: 8,
        inlineUpdateReceived: 9,
      },
    },
    TaskGroup: {},
    TaskGroupExpands: { enumValues: { none: 0, tasks: 2 } },
    TaskGroupQueryOrder: {
      enumValues: { createdOnAscending: 0, createdOnDescending: 1 },
    },
    TaskGroupRevision: {},
    TaskLog: {},
    TaskOrchestrationContainer: {},
    TaskOrchestrationItem: {},
    TaskOrchestrationItemType: { enumValues: { container: 0, job: 1 } },
    TaskOrchestrationJob: {},
    TaskOrchestrationPlan: {},
    TaskOrchestrationPlanGroup: {},
    TaskOrchestrationPlanGroupsQueueMetrics: {},
    TaskOrchestrationPlanState: {
      enumValues: { inProgress: 1, queued: 2, completed: 4, throttled: 8 },
    },
    TaskOrchestrationQueuedPlan: {},
    TaskOrchestrationQueuedPlanGroup: {},
    TaskRestrictions: {},
    TaskResult: {
      enumValues: {
        succeeded: 0,
        succeededWithIssues: 1,
        failed: 2,
        canceled: 3,
        skipped: 4,
        abandoned: 5,
      },
    },
    Timeline: {},
    TimelineRecord: {},
    TimelineRecordState: {
      enumValues: { pending: 0, inProgress: 1, completed: 2 },
    },
    VariableGroup: {},
    VariableGroupActionFilter: { enumValues: { none: 0, manage: 2, use: 16 } },
    VariableGroupQueryOrder: {
      enumValues: { idAscending: 0, idDescending: 1 },
    },
    VirtualMachine: {},
    VirtualMachineGroup: {},
    VirtualMachineResource: {},
    VirtualMachineResourceCreateParameters: {},
  };
  g.TypeInfo.AgentChangeEvent.fields = {
    agent: { typeInfo: g.TypeInfo.TaskAgent },
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
    timeStamp: { isDate: !0 },
  };
  g.TypeInfo.AgentJobRequestMessage.fields = {
    environment: { typeInfo: g.TypeInfo.JobEnvironment },
    lockedUntil: { isDate: !0 },
  };
  g.TypeInfo.AgentPoolEvent.fields = {
    pool: { typeInfo: g.TypeInfo.TaskAgentPool },
  };
  g.TypeInfo.AgentQueueEvent.fields = {
    queue: { typeInfo: g.TypeInfo.TaskAgentQueue },
  };
  g.TypeInfo.AgentQueuesEvent.fields = {
    queues: { isArray: !0, typeInfo: g.TypeInfo.TaskAgentQueue },
  };
  g.TypeInfo.AzureKeyVaultVariableGroupProviderData.fields = {
    lastRefreshedOn: { isDate: !0 },
  };
  g.TypeInfo.AzureKeyVaultVariableValue.fields = { expires: { isDate: !0 } };
  g.TypeInfo.DemandMinimumVersion.fields = {
    source: { typeInfo: g.TypeInfo.DemandSource },
  };
  g.TypeInfo.DemandSource.fields = {
    sourceType: { enumType: g.TypeInfo.DemandSourceType },
  };
  g.TypeInfo.DeploymentGroup.fields = {
    machines: { isArray: !0, typeInfo: g.TypeInfo.DeploymentMachine },
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
  };
  g.TypeInfo.DeploymentGroupMetrics.fields = {
    deploymentGroup: { typeInfo: g.TypeInfo.DeploymentGroupReference },
  };
  g.TypeInfo.DeploymentGroupReference.fields = {
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
  };
  g.TypeInfo.DeploymentMachine.fields = {
    agent: { typeInfo: g.TypeInfo.TaskAgent },
  };
  g.TypeInfo.DeploymentMachineChangedData.fields = {
    agent: { typeInfo: g.TypeInfo.TaskAgent },
  };
  g.TypeInfo.DeploymentMachineGroup.fields = {
    machines: { isArray: !0, typeInfo: g.TypeInfo.DeploymentMachine },
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
  };
  g.TypeInfo.DeploymentMachineGroupReference.fields = {
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
  };
  g.TypeInfo.DeploymentMachinesChangeEvent.fields = {
    machineGroupReference: { typeInfo: g.TypeInfo.DeploymentGroupReference },
    machines: {
      isArray: !0,
      typeInfo: g.TypeInfo.DeploymentMachineChangedData,
    },
  };
  g.TypeInfo.DeploymentPoolSummary.fields = {
    deploymentGroups: {
      isArray: !0,
      typeInfo: g.TypeInfo.DeploymentGroupReference,
    },
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
    resource: { typeInfo: g.TypeInfo.EnvironmentResourceReference },
  };
  g.TypeInfo.ElasticNode.fields = {
    agentState: { enumType: g.TypeInfo.ElasticAgentState },
    computeState: { enumType: g.TypeInfo.ElasticComputeState },
    desiredState: { enumType: g.TypeInfo.ElasticNodeState },
    state: { enumType: g.TypeInfo.ElasticNodeState },
    stateChangedOn: { isDate: !0 },
  };
  g.TypeInfo.ElasticNodeSettings.fields = {
    state: { enumType: g.TypeInfo.ElasticNodeState },
  };
  g.TypeInfo.ElasticPool.fields = {
    offlineSince: { isDate: !0 },
    osType: { enumType: g.TypeInfo.OperatingSystemType },
    state: { enumType: g.TypeInfo.ElasticPoolState },
  };
  g.TypeInfo.ElasticPoolCreationResult.fields = {
    agentPool: { typeInfo: g.TypeInfo.TaskAgentPool },
    agentQueue: { typeInfo: g.TypeInfo.TaskAgentQueue },
    elasticPool: { typeInfo: g.TypeInfo.ElasticPool },
  };
  g.TypeInfo.ElasticPoolLog.fields = {
    level: { enumType: g.TypeInfo.LogLevel },
    operation: { enumType: g.TypeInfo.OperationType },
    timestamp: { isDate: !0 },
  };
  g.TypeInfo.ElasticPoolSettings.fields = {
    osType: { enumType: g.TypeInfo.OperatingSystemType },
  };
  g.TypeInfo.EnvironmentDeploymentExecutionRecord.fields = {
    finishTime: { isDate: !0 },
    queueTime: { isDate: !0 },
    result: { enumType: g.TypeInfo.TaskResult },
    startTime: { isDate: !0 },
  };
  g.TypeInfo.EnvironmentInstance.fields = {
    createdOn: { isDate: !0 },
    lastModifiedOn: { isDate: !0 },
    resources: {
      isArray: !0,
      typeInfo: g.TypeInfo.EnvironmentResourceReference,
    },
  };
  g.TypeInfo.EnvironmentResource.fields = {
    createdOn: { isDate: !0 },
    lastModifiedOn: { isDate: !0 },
    type: { enumType: g.TypeInfo.EnvironmentResourceType },
  };
  g.TypeInfo.EnvironmentResourceDeploymentExecutionRecord.fields = {
    finishTime: { isDate: !0 },
    result: { enumType: g.TypeInfo.TaskResult },
    startTime: { isDate: !0 },
  };
  g.TypeInfo.EnvironmentResourceReference.fields = {
    type: { enumType: g.TypeInfo.EnvironmentResourceType },
  };
  g.TypeInfo.Issue.fields = { type: { enumType: g.TypeInfo.IssueType } };
  g.TypeInfo.JobAssignedEvent.fields = {
    request: { typeInfo: g.TypeInfo.TaskAgentJobRequest },
  };
  g.TypeInfo.JobCompletedEvent.fields = {
    result: { enumType: g.TypeInfo.TaskResult },
  };
  g.TypeInfo.JobEnvironment.fields = {
    mask: { isArray: !0, typeInfo: g.TypeInfo.MaskHint },
    secureFiles: { isArray: !0, typeInfo: g.TypeInfo.SecureFile },
  };
  g.TypeInfo.JobRequestMessage.fields = {
    environment: { typeInfo: g.TypeInfo.JobEnvironment },
  };
  g.TypeInfo.KubernetesResource.fields = {
    createdOn: { isDate: !0 },
    lastModifiedOn: { isDate: !0 },
    type: { enumType: g.TypeInfo.EnvironmentResourceType },
  };
  g.TypeInfo.MaskHint.fields = { type: { enumType: g.TypeInfo.MaskType } };
  g.TypeInfo.PackageMetadata.fields = { createdOn: { isDate: !0 } };
  g.TypeInfo.PlanEnvironment.fields = {
    mask: { isArray: !0, typeInfo: g.TypeInfo.MaskHint },
  };
  g.TypeInfo.ResourceLockRequest.fields = {
    assignTime: { isDate: !0 },
    finishTime: { isDate: !0 },
    lockType: { enumType: g.TypeInfo.ExclusiveLockType },
    queueTime: { isDate: !0 },
    status: { enumType: g.TypeInfo.ResourceLockStatus },
  };
  g.TypeInfo.ResourceUsage.fields = {
    runningRequests: { isArray: !0, typeInfo: g.TypeInfo.TaskAgentJobRequest },
  };
  g.TypeInfo.SecureFile.fields = {
    createdOn: { isDate: !0 },
    modifiedOn: { isDate: !0 },
  };
  g.TypeInfo.SecureFileEvent.fields = {
    secureFiles: { isArray: !0, typeInfo: g.TypeInfo.SecureFile },
  };
  g.TypeInfo.ServerTaskRequestMessage.fields = {
    environment: { typeInfo: g.TypeInfo.JobEnvironment },
    taskDefinition: { typeInfo: g.TypeInfo.TaskDefinition },
  };
  g.TypeInfo.ServiceEndpointAuthenticationScheme.fields = {
    inputDescriptors: { isArray: !0, typeInfo: Ga.TypeInfo.InputDescriptor },
  };
  g.TypeInfo.ServiceEndpointExecutionData.fields = {
    finishTime: { isDate: !0 },
    result: { enumType: g.TypeInfo.TaskResult },
    startTime: { isDate: !0 },
  };
  g.TypeInfo.ServiceEndpointExecutionRecord.fields = {
    data: { typeInfo: g.TypeInfo.ServiceEndpointExecutionData },
  };
  g.TypeInfo.ServiceEndpointExecutionRecordsInput.fields = {
    data: { typeInfo: g.TypeInfo.ServiceEndpointExecutionData },
  };
  g.TypeInfo.ServiceEndpointRequestResult.fields = {};
  g.TypeInfo.ServiceEndpointType.fields = {
    authenticationSchemes: {
      isArray: !0,
      typeInfo: g.TypeInfo.ServiceEndpointAuthenticationScheme,
    },
    inputDescriptors: { isArray: !0, typeInfo: Ga.TypeInfo.InputDescriptor },
  };
  g.TypeInfo.TaskAgent.fields = {
    assignedAgentCloudRequest: { typeInfo: g.TypeInfo.TaskAgentCloudRequest },
    assignedRequest: { typeInfo: g.TypeInfo.TaskAgentJobRequest },
    createdOn: { isDate: !0 },
    lastCompletedRequest: { typeInfo: g.TypeInfo.TaskAgentJobRequest },
    pendingUpdate: { typeInfo: g.TypeInfo.TaskAgentUpdate },
    status: { enumType: g.TypeInfo.TaskAgentStatus },
    statusChangedOn: { isDate: !0 },
  };
  g.TypeInfo.TaskAgentCloudRequest.fields = {
    agent: { typeInfo: g.TypeInfo.TaskAgentReference },
    agentConnectedTime: { isDate: !0 },
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
    provisionedTime: { isDate: !0 },
    provisionRequestTime: { isDate: !0 },
    releaseRequestTime: { isDate: !0 },
  };
  g.TypeInfo.TaskAgentCloudType.fields = {
    inputDescriptors: { isArray: !0, typeInfo: Ga.TypeInfo.InputDescriptor },
  };
  g.TypeInfo.TaskAgentDowngrade.fields = {
    code: { enumType: g.TypeInfo.TaskAgentUpdateReasonType },
  };
  g.TypeInfo.TaskAgentJob.fields = {
    steps: { isArray: !0, typeInfo: g.TypeInfo.TaskAgentJobStep },
  };
  g.TypeInfo.TaskAgentJobRequest.fields = {
    assignTime: { isDate: !0 },
    finishTime: { isDate: !0 },
    lockedUntil: { isDate: !0 },
    matchedAgents: { isArray: !0, typeInfo: g.TypeInfo.TaskAgentReference },
    queueTime: { isDate: !0 },
    receiveTime: { isDate: !0 },
    reservedAgent: { typeInfo: g.TypeInfo.TaskAgentReference },
    result: { enumType: g.TypeInfo.TaskResult },
  };
  g.TypeInfo.TaskAgentJobStep.fields = {
    type: { enumType: g.TypeInfo.TaskAgentJobStepType },
  };
  g.TypeInfo.TaskAgentManualUpdate.fields = {
    code: { enumType: g.TypeInfo.TaskAgentUpdateReasonType },
  };
  g.TypeInfo.TaskAgentMinAgentVersionRequiredUpdate.fields = {
    code: { enumType: g.TypeInfo.TaskAgentUpdateReasonType },
  };
  g.TypeInfo.TaskAgentPool.fields = {
    createdOn: { isDate: !0 },
    options: { enumType: g.TypeInfo.TaskAgentPoolOptions },
    poolType: { enumType: g.TypeInfo.TaskAgentPoolType },
  };
  g.TypeInfo.TaskAgentPoolMaintenanceDefinition.fields = {
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
    scheduleSetting: { typeInfo: g.TypeInfo.TaskAgentPoolMaintenanceSchedule },
  };
  g.TypeInfo.TaskAgentPoolMaintenanceJob.fields = {
    finishTime: { isDate: !0 },
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
    queueTime: { isDate: !0 },
    result: { enumType: g.TypeInfo.TaskAgentPoolMaintenanceJobResult },
    startTime: { isDate: !0 },
    status: { enumType: g.TypeInfo.TaskAgentPoolMaintenanceJobStatus },
    targetAgents: {
      isArray: !0,
      typeInfo: g.TypeInfo.TaskAgentPoolMaintenanceJobTargetAgent,
    },
  };
  g.TypeInfo.TaskAgentPoolMaintenanceJobTargetAgent.fields = {
    agent: { typeInfo: g.TypeInfo.TaskAgentReference },
    result: { enumType: g.TypeInfo.TaskAgentPoolMaintenanceJobResult },
    status: { enumType: g.TypeInfo.TaskAgentPoolMaintenanceJobStatus },
  };
  g.TypeInfo.TaskAgentPoolMaintenanceSchedule.fields = {
    daysToBuild: { enumType: g.TypeInfo.TaskAgentPoolMaintenanceScheduleDays },
  };
  g.TypeInfo.TaskAgentPoolReference.fields = {
    options: { enumType: g.TypeInfo.TaskAgentPoolOptions },
    poolType: { enumType: g.TypeInfo.TaskAgentPoolType },
  };
  g.TypeInfo.TaskAgentPoolStatus.fields = {
    options: { enumType: g.TypeInfo.TaskAgentPoolOptions },
    poolType: { enumType: g.TypeInfo.TaskAgentPoolType },
  };
  g.TypeInfo.TaskAgentPoolSummary.fields = {
    deploymentGroups: {
      isArray: !0,
      typeInfo: g.TypeInfo.DeploymentGroupReference,
    },
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
    queues: { isArray: !0, typeInfo: g.TypeInfo.TaskAgentQueue },
  };
  g.TypeInfo.TaskAgentQueue.fields = {
    pool: { typeInfo: g.TypeInfo.TaskAgentPoolReference },
  };
  g.TypeInfo.TaskAgentReference.fields = {
    status: { enumType: g.TypeInfo.TaskAgentStatus },
  };
  g.TypeInfo.TaskAgentSession.fields = {
    agent: { typeInfo: g.TypeInfo.TaskAgentReference },
  };
  g.TypeInfo.TaskAgentUpdate.fields = {
    reason: { typeInfo: g.TypeInfo.TaskAgentUpdateReason },
    requestTime: { isDate: !0 },
  };
  g.TypeInfo.TaskAgentUpdateReason.fields = {
    code: { enumType: g.TypeInfo.TaskAgentUpdateReasonType },
  };
  g.TypeInfo.TaskAttachment.fields = {
    createdOn: { isDate: !0 },
    lastChangedOn: { isDate: !0 },
  };
  g.TypeInfo.TaskCommandRestrictions.fields = {
    mode: { enumType: g.TypeInfo.TaskCommandMode },
  };
  g.TypeInfo.TaskCompletedEvent.fields = {
    result: { enumType: g.TypeInfo.TaskResult },
  };
  g.TypeInfo.TaskDefinition.fields = {
    restrictions: { typeInfo: g.TypeInfo.TaskRestrictions },
  };
  g.TypeInfo.TaskGroup.fields = {
    createdOn: { isDate: !0 },
    modifiedOn: { isDate: !0 },
    restrictions: { typeInfo: g.TypeInfo.TaskRestrictions },
  };
  g.TypeInfo.TaskGroupRevision.fields = {
    changedDate: { isDate: !0 },
    changeType: { enumType: g.TypeInfo.AuditAction },
  };
  g.TypeInfo.TaskLog.fields = {
    createdOn: { isDate: !0 },
    lastChangedOn: { isDate: !0 },
  };
  g.TypeInfo.TaskOrchestrationContainer.fields = {
    children: { isArray: !0, typeInfo: g.TypeInfo.TaskOrchestrationItem },
    itemType: { enumType: g.TypeInfo.TaskOrchestrationItemType },
    rollback: { typeInfo: g.TypeInfo.TaskOrchestrationContainer },
  };
  g.TypeInfo.TaskOrchestrationItem.fields = {
    itemType: { enumType: g.TypeInfo.TaskOrchestrationItemType },
  };
  g.TypeInfo.TaskOrchestrationJob.fields = {
    itemType: { enumType: g.TypeInfo.TaskOrchestrationItemType },
  };
  g.TypeInfo.TaskOrchestrationPlan.fields = {
    environment: { typeInfo: g.TypeInfo.PlanEnvironment },
    finishTime: { isDate: !0 },
    implementation: { typeInfo: g.TypeInfo.TaskOrchestrationContainer },
    result: { enumType: g.TypeInfo.TaskResult },
    startTime: { isDate: !0 },
    state: { enumType: g.TypeInfo.TaskOrchestrationPlanState },
  };
  g.TypeInfo.TaskOrchestrationPlanGroup.fields = {
    runningRequests: { isArray: !0, typeInfo: g.TypeInfo.TaskAgentJobRequest },
  };
  g.TypeInfo.TaskOrchestrationPlanGroupsQueueMetrics.fields = {
    status: { enumType: g.TypeInfo.PlanGroupStatus },
  };
  g.TypeInfo.TaskOrchestrationQueuedPlan.fields = {
    assignTime: { isDate: !0 },
    queueTime: { isDate: !0 },
  };
  g.TypeInfo.TaskOrchestrationQueuedPlanGroup.fields = {
    plans: { isArray: !0, typeInfo: g.TypeInfo.TaskOrchestrationQueuedPlan },
  };
  g.TypeInfo.TaskRestrictions.fields = {
    commands: { typeInfo: g.TypeInfo.TaskCommandRestrictions },
  };
  g.TypeInfo.Timeline.fields = {
    lastChangedOn: { isDate: !0 },
    records: { isArray: !0, typeInfo: g.TypeInfo.TimelineRecord },
  };
  g.TypeInfo.TimelineRecord.fields = {
    finishTime: { isDate: !0 },
    issues: { isArray: !0, typeInfo: g.TypeInfo.Issue },
    lastModified: { isDate: !0 },
    result: { enumType: g.TypeInfo.TaskResult },
    startTime: { isDate: !0 },
    state: { enumType: g.TypeInfo.TimelineRecordState },
  };
  g.TypeInfo.VariableGroup.fields = {
    createdOn: { isDate: !0 },
    modifiedOn: { isDate: !0 },
  };
  g.TypeInfo.VirtualMachine.fields = {
    agent: { typeInfo: g.TypeInfo.TaskAgent },
  };
  g.TypeInfo.VirtualMachineGroup.fields = {
    createdOn: { isDate: !0 },
    lastModifiedOn: { isDate: !0 },
    type: { enumType: g.TypeInfo.EnvironmentResourceType },
  };
  g.TypeInfo.VirtualMachineResource.fields = {
    agent: { typeInfo: g.TypeInfo.TaskAgent },
    createdOn: { isDate: !0 },
    lastModifiedOn: { isDate: !0 },
    type: { enumType: g.TypeInfo.EnvironmentResourceType },
  };
  g.TypeInfo.VirtualMachineResourceCreateParameters.fields = {
    virtualMachineResource: { typeInfo: g.TypeInfo.VirtualMachineResource },
  };
});
var Zd = x((Xr) => {
  "use strict";
  var I =
    (Xr && Xr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Xr, "__esModule", { value: !0 });
  var jT = qe(),
    N = Fa(),
    Ts = class extends jT.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-TaskAgent-api", a);
      }
      addAgentCloud(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "bfa72b3d-0fc6-43fb-932b-a7f6559f93b9",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteAgentCloud(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { agentCloudId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "bfa72b3d-0fc6-43fb-932b-a7f6559f93b9",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getAgentCloud(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { agentCloudId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "bfa72b3d-0fc6-43fb-932b-a7f6559f93b9",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getAgentClouds() {
        return I(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            I(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "bfa72b3d-0fc6-43fb-932b-a7f6559f93b9",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      updateAgentCloud(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { agentCloudId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "bfa72b3d-0fc6-43fb-932b-a7f6559f93b9",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAgentCloudTypes() {
        return I(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            I(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "5932e193-f376-469d-9c3e-e5588ce12cb5",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(
                  s.result,
                  N.TypeInfo.TaskAgentCloudType,
                  !0
                );
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getAgentRequestsForQueue(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("top can not be null or undefined");
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, queueId: i },
                n = { $top: a, continuationToken: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "f5f81ffb-f396-498d-85b1-5ada145e648a",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      queueAgentRequest(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, queueId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "f5f81ffb-f396-498d-85b1-5ada145e648a",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addAgent(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "e298ef32-5878-4cab-993c-043836571f42",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, N.TypeInfo.TaskAgent, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteAgent(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t, agentId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "e298ef32-5878-4cab-993c-043836571f42",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAgent(t, i, a, u, l, r) {
        return I(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            I(this, void 0, void 0, function* () {
              let o = { poolId: t, agentId: i },
                p = {
                  includeCapabilities: a,
                  includeAssignedRequest: u,
                  includeLastCompletedRequest: l,
                  propertyFilters: r && r.join(","),
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "e298ef32-5878-4cab-993c-043836571f42",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, N.TypeInfo.TaskAgent, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getAgents(t, i, a, u, l, r, s) {
        return I(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            I(this, void 0, void 0, function* () {
              let p = { poolId: t },
                d = {
                  agentName: i,
                  includeCapabilities: a,
                  includeAssignedRequest: u,
                  includeLastCompletedRequest: l,
                  propertyFilters: r && r.join(","),
                  demands: s && s.join(","),
                };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "e298ef32-5878-4cab-993c-043836571f42",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(T.result, N.TypeInfo.TaskAgent, !0);
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      replaceAgent(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: i, agentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "e298ef32-5878-4cab-993c-043836571f42",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(p.result, N.TypeInfo.TaskAgent, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateAgent(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: i, agentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "e298ef32-5878-4cab-993c-043836571f42",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, N.TypeInfo.TaskAgent, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getAzureManagementGroups() {
        return I(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            I(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "39fe3bf2-7ee0-4198-a469-4a29929afa9c",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !1);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getAzureSubscriptions() {
        return I(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            I(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "bcd6189c-0303-471f-a8e1-acb22b74d700",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !1);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      generateDeploymentGroupAccessToken(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, deploymentGroupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "3d197ba2-c3e9-4253-882f-0ee2440f8174",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, null, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addDeploymentGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "083c4d89-ab35-45af-aa11-7cf66895c53e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.DeploymentGroup,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteDeploymentGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, deploymentGroupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "083c4d89-ab35-45af-aa11-7cf66895c53e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getDeploymentGroup(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, deploymentGroupId: i },
                n = { actionFilter: a, $expand: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "083c4d89-ab35-45af-aa11-7cf66895c53e",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.DeploymentGroup,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getDeploymentGroups(t, i, a, u, l, r, s) {
        return I(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            I(this, void 0, void 0, function* () {
              let p = { project: t },
                d = {
                  name: i,
                  actionFilter: a,
                  $expand: u,
                  continuationToken: l,
                  $top: r,
                  ids: s && s.join(","),
                };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "083c4d89-ab35-45af-aa11-7cf66895c53e",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(
                  T.result,
                  N.TypeInfo.DeploymentGroup,
                  !0
                );
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      updateDeploymentGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, deploymentGroupId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "083c4d89-ab35-45af-aa11-7cf66895c53e",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.DeploymentGroup,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getDeploymentGroupsMetrics(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { deploymentGroupName: i, continuationToken: a, $top: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "281c6308-427a-49e1-b83a-dac0f4862189",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.DeploymentGroupMetrics,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getAgentRequestsForDeploymentMachine(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("machineId can not be null or undefined");
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, deploymentGroupId: i },
                n = { machineId: a, completedRequestCount: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "a3540e5b-f0dc-4668-963b-b752459be545",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getAgentRequestsForDeploymentMachines(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, deploymentGroupId: i },
                n = { machineIds: a && a.join(","), completedRequestCount: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "a3540e5b-f0dc-4668-963b-b752459be545",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      refreshDeploymentMachines(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, deploymentGroupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "91006ac4-0f68-4d82-a2bc-540676bd73ce",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, null, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      generateDeploymentPoolAccessToken(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { poolId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "e077ee4a-399b-420b-841f-c43fbc058e0b",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, null, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getDeploymentPoolsSummary(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = {},
                s = { poolName: t, expands: i, poolIds: a && a.join(",") };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6525d6c6-258f-40e0-a1a9-8a24a3957625",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.DeploymentPoolSummary,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentRequestsForDeploymentTarget(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("targetId can not be null or undefined");
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, deploymentGroupId: i },
                n = { targetId: a, completedRequestCount: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2fac0be3-8c8f-4473-ab93-c1389b08a2c9",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getAgentRequestsForDeploymentTargets(t, i, a, u, l, r) {
        return I(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            I(this, void 0, void 0, function* () {
              let o = { project: t, deploymentGroupId: i },
                p = {
                  targetIds: a && a.join(","),
                  ownerId: u,
                  completedOn: l,
                  completedRequestCount: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2fac0be3-8c8f-4473-ab93-c1389b08a2c9",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      refreshDeploymentTargets(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, deploymentGroupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "1c1a817f-f23d-41c6-bf8d-14b638f64152",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, null, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      queryEndpoint(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "f223b809-8c33-4b7d-b53f-07232569b5d6",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getEnvironmentDeploymentExecutionRecords(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, environmentId: i },
                n = { continuationToken: a, top: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "51bb5d21-4305-4ea6-9dbb-b7488af73334",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.EnvironmentDeploymentExecutionRecord,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      addEnvironment(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "8572b1fc-2482-47fa-8f74-7e3ed53ee54b",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.EnvironmentInstance,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteEnvironment(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, environmentId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "8572b1fc-2482-47fa-8f74-7e3ed53ee54b",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getEnvironmentById(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, environmentId: i },
                s = { expands: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "8572b1fc-2482-47fa-8f74-7e3ed53ee54b",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.EnvironmentInstance,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getEnvironments(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { name: i, continuationToken: a, $top: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "8572b1fc-2482-47fa-8f74-7e3ed53ee54b",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.EnvironmentInstance,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      updateEnvironment(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, environmentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "8572b1fc-2482-47fa-8f74-7e3ed53ee54b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.EnvironmentInstance,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getTaskHubLicenseDetails(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { hubName: t },
                s = {
                  includeEnterpriseUsersCount: i,
                  includeHostedAgentMinutesCount: a,
                };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "distributedtask",
                    "f9f0f436-b8a1-4475-9041-1ccdbf8f0128",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateTaskHubLicenseDetails(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { hubName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "distributedtask",
                    "f9f0f436-b8a1-4475-9041-1ccdbf8f0128",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      validateInputs(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "58475b1e-adaf-4155-9bc1-e04bf1fff4c2",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteAgentRequest(t, i, a, u, l) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("lockToken can not be null or undefined");
          return new Promise((r, s) =>
            I(this, void 0, void 0, function* () {
              let n = { poolId: t, requestId: i },
                o = { lockToken: a, result: u, agentShuttingDown: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "fc825784-c92a-4299-9221-998a02d1b54f",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.del(d, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getAgentRequest(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t, requestId: i },
                s = { includeStatus: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "fc825784-c92a-4299-9221-998a02d1b54f",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentRequests(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("top can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t },
                s = { $top: i, continuationToken: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "fc825784-c92a-4299-9221-998a02d1b54f",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentRequestsForAgent(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("agentId can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t },
                s = { agentId: i, completedRequestCount: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "fc825784-c92a-4299-9221-998a02d1b54f",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentRequestsForAgents(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t },
                s = { agentIds: i && i.join(","), completedRequestCount: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "fc825784-c92a-4299-9221-998a02d1b54f",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentRequestsForPlan(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("planId can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t },
                s = { planId: i, jobId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "fc825784-c92a-4299-9221-998a02d1b54f",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      queueAgentRequestByPool(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "fc825784-c92a-4299-9221-998a02d1b54f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateAgentRequest(t, i, a, u, l) {
        return I(this, void 0, void 0, function* () {
          if (u == null)
            throw new TypeError("lockToken can not be null or undefined");
          return new Promise((r, s) =>
            I(this, void 0, void 0, function* () {
              let n = { poolId: i, requestId: a },
                o = { lockToken: u, updateOptions: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "fc825784-c92a-4299-9221-998a02d1b54f",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(
                  f.result,
                  N.TypeInfo.TaskAgentJobRequest,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      addKubernetesResource(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, environmentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "73fba52f-15ab-42b3-a538-ce67a9223a04",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.KubernetesResource,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteKubernetesResource(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, environmentId: i, resourceId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "73fba52f-15ab-42b3-a538-ce67a9223a04",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getKubernetesResource(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, environmentId: i, resourceId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "73fba52f-15ab-42b3-a538-ce67a9223a04",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.KubernetesResource,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      generateDeploymentMachineGroupAccessToken(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, machineGroupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "f8c7c0de-ac0d-469b-9cb1-c21f72d67693",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, null, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addDeploymentMachineGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "d4adf50f-80c6-4ac8-9ca1-6e4e544286e9",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.DeploymentMachineGroup,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteDeploymentMachineGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, machineGroupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "d4adf50f-80c6-4ac8-9ca1-6e4e544286e9",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getDeploymentMachineGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, machineGroupId: i },
                s = { actionFilter: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "d4adf50f-80c6-4ac8-9ca1-6e4e544286e9",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.DeploymentMachineGroup,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getDeploymentMachineGroups(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { machineGroupName: i, actionFilter: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "d4adf50f-80c6-4ac8-9ca1-6e4e544286e9",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.DeploymentMachineGroup,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateDeploymentMachineGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, machineGroupId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "d4adf50f-80c6-4ac8-9ca1-6e4e544286e9",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.DeploymentMachineGroup,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getDeploymentMachineGroupMachines(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, machineGroupId: i },
                s = { tagFilters: a && a.join(",") };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "966c3874-c347-4b18-a90c-d509116717fd",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.DeploymentMachine,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateDeploymentMachineGroupMachines(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, machineGroupId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "966c3874-c347-4b18-a90c-d509116717fd",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.DeploymentMachine,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addDeploymentMachine(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, deploymentGroupId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6f6d406f-cfe6-409c-9327-7009928077e7",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.DeploymentMachine,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteDeploymentMachine(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, deploymentGroupId: i, machineId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6f6d406f-cfe6-409c-9327-7009928077e7",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getDeploymentMachine(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, deploymentGroupId: i, machineId: a },
                n = { $expand: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6f6d406f-cfe6-409c-9327-7009928077e7",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.DeploymentMachine,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getDeploymentMachines(t, i, a, u, l) {
        return I(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            I(this, void 0, void 0, function* () {
              let n = { project: t, deploymentGroupId: i },
                o = { tags: a && a.join(","), name: u, $expand: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6f6d406f-cfe6-409c-9327-7009928077e7",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  N.TypeInfo.DeploymentMachine,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      replaceDeploymentMachine(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: i, deploymentGroupId: a, machineId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6f6d406f-cfe6-409c-9327-7009928077e7",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.DeploymentMachine,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateDeploymentMachine(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: i, deploymentGroupId: a, machineId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6f6d406f-cfe6-409c-9327-7009928077e7",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.DeploymentMachine,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateDeploymentMachines(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, deploymentGroupId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6f6d406f-cfe6-409c-9327-7009928077e7",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.DeploymentMachine,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createAgentPoolMaintenanceDefinition(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "80572e16-58f0-4419-ac07-d19fde32195c",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.TaskAgentPoolMaintenanceDefinition,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteAgentPoolMaintenanceDefinition(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t, definitionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "80572e16-58f0-4419-ac07-d19fde32195c",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAgentPoolMaintenanceDefinition(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t, definitionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "80572e16-58f0-4419-ac07-d19fde32195c",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.TaskAgentPoolMaintenanceDefinition,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAgentPoolMaintenanceDefinitions(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { poolId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "80572e16-58f0-4419-ac07-d19fde32195c",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  N.TypeInfo.TaskAgentPoolMaintenanceDefinition,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateAgentPoolMaintenanceDefinition(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: i, definitionId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "80572e16-58f0-4419-ac07-d19fde32195c",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.TaskAgentPoolMaintenanceDefinition,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteAgentPoolMaintenanceJob(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t, jobId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "15e7ab6e-abce-4601-a6d8-e111fe148f46",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAgentPoolMaintenanceJob(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t, jobId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "15e7ab6e-abce-4601-a6d8-e111fe148f46",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.TaskAgentPoolMaintenanceJob,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAgentPoolMaintenanceJobLogs(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t, jobId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "15e7ab6e-abce-4601-a6d8-e111fe148f46",
                    l
                  ),
                  s = r.requestUrl,
                  n = r.apiVersion,
                  o = this.createAcceptHeader("application/zip", n);
                a((yield this.http.get(s, { Accept: o })).message);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAgentPoolMaintenanceJobs(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t },
                r = { definitionId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "15e7ab6e-abce-4601-a6d8-e111fe148f46",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.TaskAgentPoolMaintenanceJob,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      queueAgentPoolMaintenanceJob(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "15e7ab6e-abce-4601-a6d8-e111fe148f46",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.TaskAgentPoolMaintenanceJob,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateAgentPoolMaintenanceJob(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: i, jobId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "15e7ab6e-abce-4601-a6d8-e111fe148f46",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.TaskAgentPoolMaintenanceJob,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteMessage(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("sessionId can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t, messageId: i },
                s = { sessionId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "c3a054f6-7a8a-49c0-944e-3a8e5d7adfd7",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getMessage(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("sessionId can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t },
                s = { sessionId: i, lastMessageId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "c3a054f6-7a8a-49c0-944e-3a8e5d7adfd7",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      refreshAgent(t, i) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("agentId can not be null or undefined");
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t },
                r = { agentId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "c3a054f6-7a8a-49c0-944e-3a8e5d7adfd7",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, null, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      refreshAgents(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { poolId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "c3a054f6-7a8a-49c0-944e-3a8e5d7adfd7",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, null, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      sendMessage(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("requestId can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: i },
                s = { requestId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "c3a054f6-7a8a-49c0-944e-3a8e5d7adfd7",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getPackage(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { packageType: t, platform: i, version: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "8ffcd551-079c-493a-9c02-54346299d144",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.PackageMetadata,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getPackages(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { packageType: t, platform: i },
                s = { $top: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "8ffcd551-079c-493a-9c02-54346299d144",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.PackageMetadata,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentPoolMetadata(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { poolId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "0d62f887-9f53-48b9-9161-4c35d5735b0f",
                    u
                  ),
                  r = l.requestUrl,
                  s = l.apiVersion,
                  n = this.createAcceptHeader("text/plain", s);
                i((yield this.http.get(r, { Accept: n })).message);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      setAgentPoolMetadata(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: a };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "0d62f887-9f53-48b9-9161-4c35d5735b0f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  );
                o.additionalHeaders = t;
                let p;
                p = yield this.rest.replace(n, i, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addAgentPool(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "a8c47e17-4d56-4a56-92bb-de7ea7dc65be",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  N.TypeInfo.TaskAgentPool,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteAgentPool(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { poolId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "a8c47e17-4d56-4a56-92bb-de7ea7dc65be",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getAgentPool(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t },
                s = { properties: i && i.join(","), actionFilter: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "a8c47e17-4d56-4a56-92bb-de7ea7dc65be",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentPool,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentPools(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = {},
                n = {
                  poolName: t,
                  properties: i && i.join(","),
                  poolType: a,
                  actionFilter: u,
                };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "a8c47e17-4d56-4a56-92bb-de7ea7dc65be",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.TaskAgentPool,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getAgentPoolsByIds(t, i) {
        return I(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("poolIds can not be null or undefined");
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = {},
                r = { poolIds: t && t.join(","), actionFilter: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "a8c47e17-4d56-4a56-92bb-de7ea7dc65be",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.TaskAgentPool,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      updateAgentPool(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "a8c47e17-4d56-4a56-92bb-de7ea7dc65be",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.TaskAgentPool,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addAgentQueue(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { authorizePipelines: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "900fa995-c559-4923-aae7-f8424fe4fbea",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentQueue,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      createTeamProject(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "900fa995-c559-4923-aae7-f8424fe4fbea",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.replace(r, null, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteAgentQueue(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: i, queueId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "900fa995-c559-4923-aae7-f8424fe4fbea",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAgentQueue(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, queueId: t },
                s = { actionFilter: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "900fa995-c559-4923-aae7-f8424fe4fbea",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentQueue,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentQueues(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { queueName: i, actionFilter: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "900fa995-c559-4923-aae7-f8424fe4fbea",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentQueue,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentQueuesByIds(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("queueIds can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { queueIds: t && t.join(","), actionFilter: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "900fa995-c559-4923-aae7-f8424fe4fbea",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentQueue,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentQueuesByNames(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("queueNames can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { queueNames: t && t.join(","), actionFilter: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "900fa995-c559-4923-aae7-f8424fe4fbea",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentQueue,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentQueuesForPools(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("poolIds can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { poolIds: t && t.join(","), actionFilter: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "900fa995-c559-4923-aae7-f8424fe4fbea",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.TaskAgentQueue,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getAgentCloudRequests(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { agentCloudId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "20189bd7-5134-49c2-b8e9-f9e856eea2b2",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  N.TypeInfo.TaskAgentCloudRequest,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getResourceLimits() {
        return I(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            I(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "1f1f0557-c445-42a6-b4a0-0df605a3a0f8",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getResourceUsage(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = {},
                s = {
                  parallelismTag: t,
                  poolIsHosted: i,
                  includeRunningRequests: a,
                };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "eae1d376-a8b1-4475-9041-1dfdbe8f0143",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.ResourceUsage,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getTaskGroupHistory(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, taskGroupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "100cc92a-b255-47fa-9ab3-e44a2985a3ac",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.TaskGroupRevision,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteSecureFile(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, secureFileId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      downloadSecureFile(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("ticket can not be null or undefined");
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, secureFileId: i },
                n = { ticket: a, download: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = o.apiVersion,
                  c = this.createAcceptHeader("application/octet-stream", d);
                l((yield this.http.get(p, { Accept: c })).message);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getSecureFile(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, secureFileId: i },
                n = { includeDownloadTicket: a, actionFilter: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.SecureFile,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getSecureFiles(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t },
                n = {
                  namePattern: i,
                  includeDownloadTickets: a,
                  actionFilter: u,
                };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.SecureFile,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getSecureFilesByIds(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("secureFileIds can not be null or undefined");
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t },
                n = {
                  secureFileIds: i && i.join(","),
                  includeDownloadTickets: a,
                  actionFilter: u,
                };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.SecureFile,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getSecureFilesByNames(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("secureFileNames can not be null or undefined");
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t },
                n = {
                  secureFileNames: i && i.join(","),
                  includeDownloadTickets: a,
                  actionFilter: u,
                };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.SecureFile,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      querySecureFilesByProperties(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { namePattern: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.SecureFile,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateSecureFile(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, secureFileId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.SecureFile,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateSecureFiles(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.SecureFile,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      uploadSecureFile(t, i, a, u, l) {
        return I(this, void 0, void 0, function* () {
          if (u == null)
            throw new TypeError("name can not be null or undefined");
          return new Promise((r, s) =>
            I(this, void 0, void 0, function* () {
              let n = { project: a },
                o = { name: u, authorizePipelines: l };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "adcfd8bc-b184-43ba-bd84-7c8c6a2ff421",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  );
                c.additionalHeaders = t;
                let f;
                f = yield this.rest.uploadStream("POST", d, i, c);
                let h = this.formatResponse(
                  f.result,
                  N.TypeInfo.SecureFile,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      createAgentSession(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "134e239e-2df3-4794-a6f6-24f1f19ec8dc",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.TaskAgentSession,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteAgentSession(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { poolId: t, sessionId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "134e239e-2df3-4794-a6f6-24f1f19ec8dc",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addDeploymentTarget(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, deploymentGroupId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2f0aa599-c121-4256-a5fd-ba370e0ae7b6",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.DeploymentMachine,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteDeploymentTarget(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, deploymentGroupId: i, targetId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2f0aa599-c121-4256-a5fd-ba370e0ae7b6",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getDeploymentTarget(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, deploymentGroupId: i, targetId: a },
                n = { $expand: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2f0aa599-c121-4256-a5fd-ba370e0ae7b6",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.DeploymentMachine,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getDeploymentTargets(t, i, a, u, l, r, s, n, o, p, d, c) {
        return I(this, void 0, void 0, function* () {
          return new Promise((f, h) =>
            I(this, void 0, void 0, function* () {
              let T = { project: t, deploymentGroupId: i },
                q = {
                  tags: a && a.join(","),
                  name: u,
                  partialNameMatch: l,
                  $expand: r,
                  agentStatus: s,
                  agentJobResult: n,
                  continuationToken: o,
                  $top: p,
                  enabled: d,
                  propertyFilters: c && c.join(","),
                };
              try {
                let j = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2f0aa599-c121-4256-a5fd-ba370e0ae7b6",
                    T,
                    q
                  ),
                  F = j.requestUrl,
                  U = this.createRequestOptions(
                    "application/json",
                    j.apiVersion
                  ),
                  z;
                z = yield this.rest.get(F, U);
                let W = this.formatResponse(
                  z.result,
                  N.TypeInfo.DeploymentMachine,
                  !0
                );
                f(W);
              } catch (j) {
                h(j);
              }
            })
          );
        });
      }
      replaceDeploymentTarget(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: i, deploymentGroupId: a, targetId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2f0aa599-c121-4256-a5fd-ba370e0ae7b6",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.DeploymentMachine,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateDeploymentTarget(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: i, deploymentGroupId: a, targetId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2f0aa599-c121-4256-a5fd-ba370e0ae7b6",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.DeploymentMachine,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateDeploymentTargets(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, deploymentGroupId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "2f0aa599-c121-4256-a5fd-ba370e0ae7b6",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.DeploymentMachine,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addTaskGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, N.TypeInfo.TaskGroup, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteTaskGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, taskGroupId: i },
                s = { comment: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getTaskGroup(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("versionSpec can not be null or undefined");
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: t, taskGroupId: i },
                n = { versionSpec: a, $expand: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, N.TypeInfo.TaskGroup, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getTaskGroupRevision(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("revision can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, taskGroupId: i },
                s = { revision: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("text/plain", p);
                u((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getTaskGroups(t, i, a, u, l, r, s, n) {
        return I(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            I(this, void 0, void 0, function* () {
              let d = { project: t, taskGroupId: i },
                c = {
                  expanded: a,
                  taskIdFilter: u,
                  deleted: l,
                  $top: r,
                  continuationToken: s,
                  queryOrder: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(q.result, N.TypeInfo.TaskGroup, !0);
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      publishTaskGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError(
              "parentTaskGroupId can not be null or undefined"
            );
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { parentTaskGroupId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(d.result, N.TypeInfo.TaskGroup, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      undeleteTaskGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(o.result, N.TypeInfo.TaskGroup, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateTaskGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, taskGroupId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(p.result, N.TypeInfo.TaskGroup, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateTaskGroupProperties(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: i, taskGroupId: a },
                n = { disablePriorVersions: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "6c08ffbf-dbf1-4f9a-94e5-a1cbd47005e7",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, N.TypeInfo.TaskGroup, !0);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      deleteTaskDefinition(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = { taskId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getTaskContentZip(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { taskId: t, versionString: i },
                n = { visibility: a, scopeLocal: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = o.apiVersion,
                  c = this.createAcceptHeader("application/zip", d);
                l((yield this.http.get(p, { Accept: c })).message);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getTaskDefinition(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { taskId: t, versionString: i },
                n = { visibility: a, scopeLocal: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.TaskDefinition,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getTaskDefinitions(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { taskId: t },
                n = { visibility: i, scopeLocal: a, allVersions: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  N.TypeInfo.TaskDefinition,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      updateAgentUpdateState(t, i, a) {
        return I(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("currentState can not be null or undefined");
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: t, agentId: i },
                s = { currentState: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "8cc1b02b-ae49-4516-b5ad-4f9b29967c30",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, null, p);
                let c = this.formatResponse(d.result, N.TypeInfo.TaskAgent, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateAgentUserCapabilities(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { poolId: i, agentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "30ba3ada-fedf-4da8-bbb5-dacf2f82e176",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(p.result, N.TypeInfo.TaskAgent, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addVariableGroup(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "ef5b7057-ffc3-4c77-bbad-c10b4a4abcc7",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  N.TypeInfo.VariableGroup,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteVariableGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("projectIds can not be null or undefined");
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { groupId: t },
                r = { projectIds: i && i.join(",") };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "ef5b7057-ffc3-4c77-bbad-c10b4a4abcc7",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      shareVariableGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("variableGroupId can not be null or undefined");
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = {},
                r = { variableGroupId: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "ef5b7057-ffc3-4c77-bbad-c10b4a4abcc7",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      updateVariableGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { groupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "ef5b7057-ffc3-4c77-bbad-c10b4a4abcc7",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.VariableGroup,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getVariableGroup(t, i) {
        return I(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t, groupId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "f5b09dd5-9d54-45a1-8b5a-1c8287d634cc",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  N.TypeInfo.VariableGroup,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getVariableGroups(t, i, a, u, l, r) {
        return I(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            I(this, void 0, void 0, function* () {
              let o = { project: t },
                p = {
                  groupName: i,
                  actionFilter: a,
                  $top: u,
                  continuationToken: l,
                  queryOrder: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "f5b09dd5-9d54-45a1-8b5a-1c8287d634cc",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  N.TypeInfo.VariableGroup,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getVariableGroupsById(t, i) {
        return I(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("groupIds can not be null or undefined");
          return new Promise((a, u) =>
            I(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { groupIds: i && i.join(",") };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "f5b09dd5-9d54-45a1-8b5a-1c8287d634cc",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.VariableGroup,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      addVirtualMachineGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, environmentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "9e597901-4af7-4cc3-8d92-47d54db8ebfb",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.VirtualMachineGroup,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteVirtualMachineGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, environmentId: i, resourceId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "9e597901-4af7-4cc3-8d92-47d54db8ebfb",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getVirtualMachineGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: t, environmentId: i, resourceId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "9e597901-4af7-4cc3-8d92-47d54db8ebfb",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.VirtualMachineGroup,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateVirtualMachineGroup(t, i, a) {
        return I(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            I(this, void 0, void 0, function* () {
              let r = { project: i, environmentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "9e597901-4af7-4cc3-8d92-47d54db8ebfb",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  N.TypeInfo.VirtualMachineGroup,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getVirtualMachines(t, i, a, u, l, r, s, n) {
        return I(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            I(this, void 0, void 0, function* () {
              let d = { project: t, environmentId: i, resourceId: a },
                c = {
                  continuationToken: u,
                  name: l,
                  partialNameMatch: r,
                  tags: s && s.join(","),
                  $top: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "48700676-2ba5-4282-8ec8-083280d169c7",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(
                  q.result,
                  N.TypeInfo.VirtualMachine,
                  !0
                );
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      updateVirtualMachines(t, i, a, u) {
        return I(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            I(this, void 0, void 0, function* () {
              let s = { project: i, environmentId: a, resourceId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "48700676-2ba5-4282-8ec8-083280d169c7",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  N.TypeInfo.VirtualMachine,
                  !0
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createAadOAuthRequest(t, i, a, u, l) {
        return I(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("tenantId can not be null or undefined");
          if (i == null)
            throw new TypeError("redirectUri can not be null or undefined");
          return new Promise((r, s) =>
            I(this, void 0, void 0, function* () {
              let n = {},
                o = {
                  tenantId: t,
                  redirectUri: i,
                  promptOption: a,
                  completeCallbackPayload: u,
                  completeCallbackByAuthCode: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "9c63205e-3a0f-42a0-ad88-095200f13607",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, null, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getVstsAadTenantId() {
        return I(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            I(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "9c63205e-3a0f-42a0-ad88-095200f13607",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !1);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getYamlSchema(t) {
        return I(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            I(this, void 0, void 0, function* () {
              let u = {},
                l = { validateTaskNames: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "1f9990b9-1dba-441f-9c2e-6485888c42b6",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
    };
  Ts.RESOURCE_AREA_ID = "a85b8835-c1a1-4aac-ae97-1c3d0ba72dbd";
  Xr.TaskAgentApiBase = Ts;
});
var ec = x((Yr) => {
  "use strict";
  var Yd =
    (Yr && Yr.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Yr, "__esModule", { value: !0 });
  var AT = Zd(),
    OT = require("url"),
    Zr = class extends AT.TaskAgentApiBase {
      constructor(t, i, a) {
        super(t, i, a), (this._handlers = i), (this._options = a);
      }
      deleteTaskDefinition(t) {
        return this.vsoClient
          .beginGetLocation(
            "distributedtask",
            "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd"
          )
          .then((a) => {
            if (a) return super.deleteTaskDefinition(t);
            var u = this._getFallbackClient(this.baseUrl);
            if (u) return u.deleteTaskDefinition(t);
            throw new Error(
              "Failed to find api location for area: distributedtask id: 60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd"
            );
          });
      }
      getTaskContentZip(t, i, a, u) {
        return this.vsoClient
          .beginGetLocation(
            "distributedtask",
            "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd"
          )
          .then((r) => {
            if (r) return super.getTaskContentZip(t, i, a, u);
            var s = this._getFallbackClient(this.baseUrl);
            if (s) return s.getTaskContentZip(t, i, a, u);
            throw new Error(
              "Failed to find api location for area: distributedtask id: 60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd"
            );
          });
      }
      getTaskDefinition(t, i, a, u) {
        return this.vsoClient
          .beginGetLocation(
            "distributedtask",
            "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd"
          )
          .then((r) => {
            if (r) return super.getTaskDefinition(t, i, a, u);
            var s = this._getFallbackClient(this.baseUrl);
            if (s) return s.getTaskDefinition(t, i, a, u);
            throw new Error(
              "Failed to find api location for area: distributedtask id: 60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd"
            );
          });
      }
      getTaskDefinitions(t, i, a) {
        return this.vsoClient
          .beginGetLocation(
            "distributedtask",
            "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd"
          )
          .then((l) => {
            if (l) return super.getTaskDefinitions(t, i, a);
            var r = this._getFallbackClient(this.baseUrl);
            if (r) return r.getTaskDefinitions(t, i, a);
            throw new Error(
              "Failed to find api location for area: distributedtask id: 60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd"
            );
          });
      }
      uploadTaskDefinition(t, i, a, u) {
        return Yd(this, void 0, void 0, function* () {
          let l = { taskId: a },
            r = { overwrite: u };
          return new Promise((s, n) =>
            Yd(this, void 0, void 0, function* () {
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "3.0-preview.1",
                    "distributedtask",
                    "60aac929-f0cd-4bc8-9ce4-6b30e8f1b1bd",
                    l,
                    r
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                (c = yield this.rest.uploadStream("PUT", p, i, d)), s(c.result);
              } catch (o) {
                n(o);
              }
            })
          );
        });
      }
      _getFallbackClient(t) {
        if (!this._fallbackClient) {
          var i = this._getAccountUrl(t);
          i &&
            (this._fallbackClient = new Zr(i, this._handlers, this._options));
        }
        return this._fallbackClient;
      }
      _getAccountUrl(t) {
        var i = OT.parse(t);
        if (!i.protocol || !i.host) return null;
        var a = i.protocol + "//" + i.host,
          u = i.path.split("/").slice(1);
        if (u.length === 0 || (u.length === 1 && u[0] === "")) return null;
        if (
          u[0] === "tfs" &&
          (u.length === 2 || (u.length === 3 && u[2].length === 0))
        )
          a += "/tfs";
        else {
          if (u.length === 2 && u[0] === "") return a;
          if (u.length > 1) return null;
        }
        return a;
      }
    };
  Yr.TaskAgentApi = Zr;
});
var tc = x((en) => {
  "use strict";
  var J =
    (en && en.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(en, "__esModule", { value: !0 });
  var UT = qe(),
    ke = Fa(),
    La = class extends UT.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Task-api", a);
      }
      getPlanAttachments(t, i, a, u) {
        return J(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            J(this, void 0, void 0, function* () {
              let s = { scopeIdentifier: t, hubName: i, planId: a, type: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "eb55e5d6-2f30-4295-b5ed-38da50b1fc52",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  ke.TypeInfo.TaskAttachment,
                  !0
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createAttachment(t, i, a, u, l, r, s, n, o) {
        return J(this, void 0, void 0, function* () {
          return new Promise((p, d) =>
            J(this, void 0, void 0, function* () {
              let c = {
                scopeIdentifier: a,
                hubName: u,
                planId: l,
                timelineId: r,
                recordId: s,
                type: n,
                name: o,
              };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "7898f959-9cdf-4096-b29e-7f293031629e",
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  );
                T.additionalHeaders = t;
                let q;
                q = yield this.rest.uploadStream("PUT", h, i, T);
                let j = this.formatResponse(
                  q.result,
                  ke.TypeInfo.TaskAttachment,
                  !1
                );
                p(j);
              } catch (f) {
                d(f);
              }
            })
          );
        });
      }
      createAttachmentFromArtifact(t, i, a, u, l, r, s, n, o) {
        return J(this, void 0, void 0, function* () {
          if (n == null)
            throw new TypeError("artifactHash can not be null or undefined");
          if (o == null)
            throw new TypeError("length can not be null or undefined");
          return new Promise((p, d) =>
            J(this, void 0, void 0, function* () {
              let c = {
                  scopeIdentifier: t,
                  hubName: i,
                  planId: a,
                  timelineId: u,
                  recordId: l,
                  type: r,
                  name: s,
                },
                f = { artifactHash: n, length: o };
              try {
                let h = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "7898f959-9cdf-4096-b29e-7f293031629e",
                    c,
                    f
                  ),
                  T = h.requestUrl,
                  q = this.createRequestOptions(
                    "application/json",
                    h.apiVersion
                  ),
                  j;
                j = yield this.rest.replace(T, null, q);
                let F = this.formatResponse(
                  j.result,
                  ke.TypeInfo.TaskAttachment,
                  !1
                );
                p(F);
              } catch (h) {
                d(h);
              }
            })
          );
        });
      }
      getAttachment(t, i, a, u, l, r, s) {
        return J(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            J(this, void 0, void 0, function* () {
              let p = {
                scopeIdentifier: t,
                hubName: i,
                planId: a,
                timelineId: u,
                recordId: l,
                type: r,
                name: s,
              };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "7898f959-9cdf-4096-b29e-7f293031629e",
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  ke.TypeInfo.TaskAttachment,
                  !1
                );
                n(T);
              } catch (d) {
                o(d);
              }
            })
          );
        });
      }
      getAttachmentContent(t, i, a, u, l, r, s) {
        return J(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            J(this, void 0, void 0, function* () {
              let p = {
                scopeIdentifier: t,
                hubName: i,
                planId: a,
                timelineId: u,
                recordId: l,
                type: r,
                name: s,
              };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "7898f959-9cdf-4096-b29e-7f293031629e",
                    p
                  ),
                  c = d.requestUrl,
                  f = d.apiVersion,
                  h = this.createAcceptHeader("application/octet-stream", f);
                n((yield this.http.get(c, { Accept: h })).message);
              } catch (d) {
                o(d);
              }
            })
          );
        });
      }
      getAttachments(t, i, a, u, l, r) {
        return J(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            J(this, void 0, void 0, function* () {
              let o = {
                scopeIdentifier: t,
                hubName: i,
                planId: a,
                timelineId: u,
                recordId: l,
                type: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "7898f959-9cdf-4096-b29e-7f293031629e",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  ke.TypeInfo.TaskAttachment,
                  !0
                );
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      appendTimelineRecordFeed(t, i, a, u, l, r) {
        return J(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            J(this, void 0, void 0, function* () {
              let o = {
                scopeIdentifier: i,
                hubName: a,
                planId: u,
                timelineId: l,
                recordId: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "858983e4-19bd-4c5e-864c-507b59b58b12",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      getLines(t, i, a, u, l, r, s, n, o) {
        return J(this, void 0, void 0, function* () {
          if (r == null)
            throw new TypeError("stepId can not be null or undefined");
          return new Promise((p, d) =>
            J(this, void 0, void 0, function* () {
              let c = {
                  scopeIdentifier: t,
                  hubName: i,
                  planId: a,
                  timelineId: u,
                  recordId: l,
                },
                f = {
                  stepId: r,
                  endLine: s,
                  takeCount: n,
                  continuationToken: o,
                };
              try {
                let h = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "858983e4-19bd-4c5e-864c-507b59b58b12",
                    c,
                    f
                  ),
                  T = h.requestUrl,
                  q = this.createRequestOptions(
                    "application/json",
                    h.apiVersion
                  ),
                  j;
                j = yield this.rest.get(T, q);
                let F = this.formatResponse(j.result, null, !1);
                p(F);
              } catch (h) {
                d(h);
              }
            })
          );
        });
      }
      getJobInstance(t, i, a) {
        return J(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            J(this, void 0, void 0, function* () {
              let r = { scopeIdentifier: t, hubName: i, orchestrationId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "0a1efd25-abda-43bd-9629-6c7bdd2e0d60",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ke.TypeInfo.TaskAgentJob,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      appendLogContent(t, i, a, u, l, r) {
        return J(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            J(this, void 0, void 0, function* () {
              let o = { scopeIdentifier: a, hubName: u, planId: l, logId: r };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "46f5667d-263a-4684-91b1-dff7fdcf64e2",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  );
                c.additionalHeaders = t;
                let f;
                f = yield this.rest.uploadStream("POST", d, i, c);
                let h = this.formatResponse(f.result, ke.TypeInfo.TaskLog, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      associateLog(t, i, a, u, l, r) {
        return J(this, void 0, void 0, function* () {
          if (l == null)
            throw new TypeError(
              "serializedBlobId can not be null or undefined"
            );
          if (r == null)
            throw new TypeError("lineCount can not be null or undefined");
          return new Promise((s, n) =>
            J(this, void 0, void 0, function* () {
              let o = { scopeIdentifier: t, hubName: i, planId: a, logId: u },
                p = { serializedBlobId: l, lineCount: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "46f5667d-263a-4684-91b1-dff7fdcf64e2",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.create(c, null, f);
                let T = this.formatResponse(h.result, ke.TypeInfo.TaskLog, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      createLog(t, i, a, u) {
        return J(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            J(this, void 0, void 0, function* () {
              let s = { scopeIdentifier: i, hubName: a, planId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "46f5667d-263a-4684-91b1-dff7fdcf64e2",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, ke.TypeInfo.TaskLog, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getLog(t, i, a, u, l, r) {
        return J(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            J(this, void 0, void 0, function* () {
              let o = { scopeIdentifier: t, hubName: i, planId: a, logId: u },
                p = { startLine: l, endLine: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "46f5667d-263a-4684-91b1-dff7fdcf64e2",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !0);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getLogs(t, i, a) {
        return J(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            J(this, void 0, void 0, function* () {
              let r = { scopeIdentifier: t, hubName: i, planId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "46f5667d-263a-4684-91b1-dff7fdcf64e2",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, ke.TypeInfo.TaskLog, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getPlanGroupsQueueMetrics(t, i) {
        return J(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            J(this, void 0, void 0, function* () {
              let l = { scopeIdentifier: t, hubName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "038fd4d5-cda7-44ca-92c0-935843fee1a7",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ke.TypeInfo.TaskOrchestrationPlanGroupsQueueMetrics,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      createOidcToken(t, i, a, u, l, r) {
        return J(this, void 0, void 0, function* () {
          if (r == null)
            throw new TypeError(
              "serviceConnectionId can not be null or undefined"
            );
          return new Promise((s, n) =>
            J(this, void 0, void 0, function* () {
              let o = { scopeIdentifier: i, hubName: a, planId: u, jobId: l },
                p = { serviceConnectionId: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "69a319f4-28c1-4bfd-93e6-ea0ff5c6f1a2",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.create(c, t, f);
                let T = this.formatResponse(h.result, null, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getQueuedPlanGroups(t, i, a, u) {
        return J(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            J(this, void 0, void 0, function* () {
              let s = { scopeIdentifier: t, hubName: i },
                n = { statusFilter: a, count: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "0dd73091-3e36-4f43-b443-1b76dd426d84",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  ke.TypeInfo.TaskOrchestrationQueuedPlanGroup,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getQueuedPlanGroup(t, i, a) {
        return J(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            J(this, void 0, void 0, function* () {
              let r = { scopeIdentifier: t, hubName: i, planGroup: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "65fd0708-bc1e-447b-a731-0587c5464e5b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ke.TypeInfo.TaskOrchestrationQueuedPlanGroup,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getPlan(t, i, a) {
        return J(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            J(this, void 0, void 0, function* () {
              let r = { scopeIdentifier: t, hubName: i, planId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "distributedtask",
                    "5cecd946-d704-471e-a45f-3b4064fcfaba",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ke.TypeInfo.TaskOrchestrationPlan,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getRecords(t, i, a, u, l) {
        return J(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            J(this, void 0, void 0, function* () {
              let n = {
                  scopeIdentifier: t,
                  hubName: i,
                  planId: a,
                  timelineId: u,
                },
                o = { changeId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "8893bc5b-35b2-4be7-83cb-99e683551db4",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  ke.TypeInfo.TimelineRecord,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      updateRecords(t, i, a, u, l) {
        return J(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            J(this, void 0, void 0, function* () {
              let n = {
                scopeIdentifier: i,
                hubName: a,
                planId: u,
                timelineId: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "8893bc5b-35b2-4be7-83cb-99e683551db4",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  ke.TypeInfo.TimelineRecord,
                  !0
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      createTimeline(t, i, a, u) {
        return J(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            J(this, void 0, void 0, function* () {
              let s = { scopeIdentifier: i, hubName: a, planId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "83597576-cc2c-453c-bea6-2882ae6a1653",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, ke.TypeInfo.Timeline, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      deleteTimeline(t, i, a, u) {
        return J(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            J(this, void 0, void 0, function* () {
              let s = {
                scopeIdentifier: t,
                hubName: i,
                planId: a,
                timelineId: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "83597576-cc2c-453c-bea6-2882ae6a1653",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getTimeline(t, i, a, u, l, r) {
        return J(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            J(this, void 0, void 0, function* () {
              let o = {
                  scopeIdentifier: t,
                  hubName: i,
                  planId: a,
                  timelineId: u,
                },
                p = { changeId: l, includeRecords: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "83597576-cc2c-453c-bea6-2882ae6a1653",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, ke.TypeInfo.Timeline, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getTimelines(t, i, a) {
        return J(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            J(this, void 0, void 0, function* () {
              let r = { scopeIdentifier: t, hubName: i, planId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "distributedtask",
                    "83597576-cc2c-453c-bea6-2882ae6a1653",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, ke.TypeInfo.Timeline, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
    };
  en.TaskApi = La;
});
var ic = x((tn) => {
  "use strict";
  var O =
    (tn && tn.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(tn, "__esModule", { value: !0 });
  var kT = qe(),
    re = Ra(),
    Rs = class extends kT.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Test-api", a);
      }
      createTestIterationResultAttachment(t, i, a, u, l, r) {
        return O(this, void 0, void 0, function* () {
          if (l == null)
            throw new TypeError("iterationId can not be null or undefined");
          return new Promise((s, n) =>
            O(this, void 0, void 0, function* () {
              let o = { project: i, runId: a, testCaseResultId: u },
                p = { iterationId: l, actionPath: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.create(c, t, f);
                let T = this.formatResponse(h.result, null, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      createTestResultAttachment(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = { project: i, runId: a, testCaseResultId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createTestSubResultAttachment(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          if (l == null)
            throw new TypeError("testSubResultId can not be null or undefined");
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = { project: i, runId: a, testCaseResultId: u },
                o = { testSubResultId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getTestResultAttachmentContent(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = {
                project: t,
                runId: i,
                testCaseResultId: a,
                attachmentId: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("application/octet-stream", p);
                l((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getTestResultAttachments(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t, runId: i, testCaseResultId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  re.TypeInfo.TestAttachment,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getTestResultAttachmentZip(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = {
                project: t,
                runId: i,
                testCaseResultId: a,
                attachmentId: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("application/zip", p);
                l((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getTestSubResultAttachmentContent(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          if (l == null)
            throw new TypeError("testSubResultId can not be null or undefined");
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = {
                  project: t,
                  runId: i,
                  testCaseResultId: a,
                  attachmentId: u,
                },
                o = { testSubResultId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("application/octet-stream", c);
                r((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getTestSubResultAttachments(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          if (u == null)
            throw new TypeError("testSubResultId can not be null or undefined");
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = { project: t, runId: i, testCaseResultId: a },
                n = { testSubResultId: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  re.TypeInfo.TestAttachment,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getTestSubResultAttachmentZip(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          if (l == null)
            throw new TypeError("testSubResultId can not be null or undefined");
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = {
                  project: t,
                  runId: i,
                  testCaseResultId: a,
                  attachmentId: u,
                },
                o = { testSubResultId: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "2bffebe9-2f0f-4639-9af8-56129e9fed2d",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("application/zip", c);
                r((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      createTestRunAttachment(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: i, runId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "4f004af4-a507-489c-9b13-cb62060beb11",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getTestRunAttachmentContent(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t, runId: i, attachmentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "4f004af4-a507-489c-9b13-cb62060beb11",
                    r
                  ),
                  n = s.requestUrl,
                  o = s.apiVersion,
                  p = this.createAcceptHeader("application/octet-stream", o);
                u((yield this.http.get(n, { Accept: p })).message);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getTestRunAttachments(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, runId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "4f004af4-a507-489c-9b13-cb62060beb11",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.TestAttachment,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTestRunAttachmentZip(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t, runId: i, attachmentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "4f004af4-a507-489c-9b13-cb62060beb11",
                    r
                  ),
                  n = s.requestUrl,
                  o = s.apiVersion,
                  p = this.createAcceptHeader("application/zip", o);
                u((yield this.http.get(n, { Accept: p })).message);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBugsLinkedToTestResult(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t, runId: i, testCaseResultId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "6de20ca2-67de-4faf-97fa-38c5d585eb00",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBuildCodeCoverage(t, i, a) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("buildId can not be null or undefined");
          if (a == null)
            throw new TypeError("flags can not be null or undefined");
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { buildId: i, flags: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "77560e8a-4e8c-4d59-894e-a5f264c24444",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  re.TypeInfo.BuildCoverage,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getCodeCoverageSummary(t, i, a) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("buildId can not be null or undefined");
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { buildId: i, deltaBuildId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "77560e8a-4e8c-4d59-894e-a5f264c24444",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  re.TypeInfo.CodeCoverageSummary,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateCodeCoverageSummary(t, i, a) {
        return O(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("buildId can not be null or undefined");
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { buildId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "77560e8a-4e8c-4d59-894e-a5f264c24444",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getTestRunCodeCoverage(t, i, a) {
        return O(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("flags can not be null or undefined");
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t, runId: i },
                s = { flags: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "9629116f-3b89-4ed8-b358-d4694efda160",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      addCustomFields(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "8ce1923b-f4c7-4e22-b93b-f6284e525ec2",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.CustomTestFieldDefinition,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      queryCustomFields(t, i) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("scopeFilter can not be null or undefined");
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { scopeFilter: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "8ce1923b-f4c7-4e22-b93b-f6284e525ec2",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  re.TypeInfo.CustomTestFieldDefinition,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      queryTestResultHistory(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "234616f5-429c-4e7b-9192-affd76731dfd",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.TestResultHistory,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTestIteration(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = {
                  project: t,
                  runId: i,
                  testCaseResultId: a,
                  iterationId: u,
                },
                o = { includeActionResults: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "73eb9074-3446-4c44-8296-2f811950ff8d",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  re.TypeInfo.TestIterationDetailsModel,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getTestIterations(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = { project: t, runId: i, testCaseResultId: a },
                n = { includeActionResults: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "73eb9074-3446-4c44-8296-2f811950ff8d",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  re.TypeInfo.TestIterationDetailsModel,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getLinkedWorkItemsByQuery(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "a4dcb25b-9878-49ea-abfd-e440bd9b1dcd",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTestRunLogs(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, runId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "a1e55200-637e-42e9-a7c0-7e5bfdedb1b3",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.TestMessageLogDetails,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getPoint(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = { project: t, planId: i, suiteId: a, pointIds: u },
                o = { witFields: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "3bcfd5c8-be62-488e-b1da-b8289ce9299c",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  re.TypeInfo.TestPoint,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getPoints(t, i, a, u, l, r, s, n, o, p) {
        return O(this, void 0, void 0, function* () {
          return new Promise((d, c) =>
            O(this, void 0, void 0, function* () {
              let f = { project: t, planId: i, suiteId: a },
                h = {
                  witFields: u,
                  configurationId: l,
                  testCaseId: r,
                  testPointIds: s,
                  includePointDetails: n,
                  $skip: o,
                  $top: p,
                };
              try {
                let T = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "3bcfd5c8-be62-488e-b1da-b8289ce9299c",
                    f,
                    h
                  ),
                  q = T.requestUrl,
                  j = this.createRequestOptions(
                    "application/json",
                    T.apiVersion
                  ),
                  F;
                F = yield this.rest.get(q, j);
                let U = this.formatResponse(
                  F.result,
                  re.TypeInfo.TestPoint,
                  !0
                );
                d(U);
              } catch (T) {
                c(T);
              }
            })
          );
        });
      }
      updateTestPoints(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = { project: i, planId: a, suiteId: u, pointIds: l };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "3bcfd5c8-be62-488e-b1da-b8289ce9299c",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  re.TypeInfo.TestPoint,
                  !0
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getPointsByQuery(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = { project: i },
                n = { $skip: a, $top: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "b4264fd0-a5d1-43e2-82a5-b9c46b7da9ce",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  re.TypeInfo.TestPointsQuery,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getTestResultDetailsForBuild(t, i, a, u, l, r, s, n) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("buildId can not be null or undefined");
          return new Promise((o, p) =>
            O(this, void 0, void 0, function* () {
              let d = { project: t },
                c = {
                  buildId: i,
                  publishContext: a,
                  groupBy: u,
                  $filter: l,
                  $orderby: r,
                  shouldIncludeResults: s,
                  queryRunSummaryForInProgress: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "efb387b0-10d5-42e7-be40-95e06ee9430f",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(
                  q.result,
                  re.TypeInfo.TestResultsDetails,
                  !1
                );
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getTestResultDetailsForRelease(t, i, a, u, l, r, s, n, o) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("releaseId can not be null or undefined");
          if (a == null)
            throw new TypeError("releaseEnvId can not be null or undefined");
          return new Promise((p, d) =>
            O(this, void 0, void 0, function* () {
              let c = { project: t },
                f = {
                  releaseId: i,
                  releaseEnvId: a,
                  publishContext: u,
                  groupBy: l,
                  $filter: r,
                  $orderby: s,
                  shouldIncludeResults: n,
                  queryRunSummaryForInProgress: o,
                };
              try {
                let h = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "b834ec7e-35bb-450f-a3c8-802e70ca40dd",
                    c,
                    f
                  ),
                  T = h.requestUrl,
                  q = this.createRequestOptions(
                    "application/json",
                    h.apiVersion
                  ),
                  j;
                j = yield this.rest.get(T, q);
                let F = this.formatResponse(
                  j.result,
                  re.TypeInfo.TestResultsDetails,
                  !1
                );
                p(F);
              } catch (h) {
                d(h);
              }
            })
          );
        });
      }
      publishTestResultDocument(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: i, runId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "370ca04b-8eec-4ca8-8ba3-d24dca228791",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getResultGroupsByBuild(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("buildId can not be null or undefined");
          if (a == null)
            throw new TypeError("publishContext can not be null or undefined");
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = { project: t },
                o = {
                  buildId: i,
                  publishContext: a,
                  fields: u && u.join(","),
                  continuationToken: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "d279d052-c55a-4204-b913-42f733b52958",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getResultGroupsByRelease(t, i, a, u, l, r) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("releaseId can not be null or undefined");
          if (a == null)
            throw new TypeError("publishContext can not be null or undefined");
          return new Promise((s, n) =>
            O(this, void 0, void 0, function* () {
              let o = { project: t },
                p = {
                  releaseId: i,
                  publishContext: a,
                  releaseEnvId: u,
                  fields: l && l.join(","),
                  continuationToken: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "ef5ce5d4-a4e5-47ee-804c-354518f8d03f",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !0);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      queryTestResultsMetaData(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "afa7830e-67a7-4336-8090-2b448ca80295",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getResultRetentionSettings(t) {
        return O(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            O(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "a3206d9e-fa8d-42d3-88cb-f75c51e69cde",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(
                  n.result,
                  re.TypeInfo.ResultRetentionSettings,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateResultRetentionSettings(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "a3206d9e-fa8d-42d3-88cb-f75c51e69cde",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.ResultRetentionSettings,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addTestResultsToTestRun(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: i, runId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.6",
                    "Test",
                    "4637d869-3a76-4468-8057-0bb02aa385cf",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  re.TypeInfo.TestCaseResult,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getTestResultById(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = { project: t, runId: i, testCaseResultId: a },
                n = { detailsToInclude: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.6",
                    "Test",
                    "4637d869-3a76-4468-8057-0bb02aa385cf",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  re.TypeInfo.TestCaseResult,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getTestResults(t, i, a, u, l, r) {
        return O(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            O(this, void 0, void 0, function* () {
              let o = { project: t, runId: i },
                p = {
                  detailsToInclude: a,
                  $skip: u,
                  $top: l,
                  outcomes: r && r.join(","),
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.6",
                    "Test",
                    "4637d869-3a76-4468-8057-0bb02aa385cf",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  re.TypeInfo.TestCaseResult,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      updateTestResults(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: i, runId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.6",
                    "Test",
                    "4637d869-3a76-4468-8057-0bb02aa385cf",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  re.TypeInfo.TestCaseResult,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getTestResultsByQuery(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.6",
                    "Test",
                    "6711da49-8e6f-4d35-9f73-cef7a3c81a5b",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.TestResultsQuery,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTestResultsByBuild(t, i, a, u, l, r) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("buildId can not be null or undefined");
          return new Promise((s, n) =>
            O(this, void 0, void 0, function* () {
              let o = { project: t },
                p = {
                  buildId: i,
                  publishContext: a,
                  outcomes: u && u.join(","),
                  $top: l,
                  continuationToken: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "3c191b88-615b-4be2-b7d9-5ff9141e91d4",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !0);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getTestResultsByRelease(t, i, a, u, l, r, s) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("releaseId can not be null or undefined");
          return new Promise((n, o) =>
            O(this, void 0, void 0, function* () {
              let p = { project: t },
                d = {
                  releaseId: i,
                  releaseEnvid: a,
                  publishContext: u,
                  outcomes: l && l.join(","),
                  $top: r,
                  continuationToken: s,
                };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "ce01820b-83f3-4c15-a583-697a43292c4e",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(T.result, null, !0);
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      queryTestResultsReportForBuild(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("buildId can not be null or undefined");
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = { project: t },
                o = {
                  buildId: i,
                  publishContext: a,
                  includeFailureDetails: u,
                  buildToCompare: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "000ef77b-fea2-498d-a10d-ad1a037f559f",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  re.TypeInfo.TestResultSummary,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      queryTestResultsReportForRelease(t, i, a, u, l, r) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("releaseId can not be null or undefined");
          if (a == null)
            throw new TypeError("releaseEnvId can not be null or undefined");
          return new Promise((s, n) =>
            O(this, void 0, void 0, function* () {
              let o = { project: t },
                p = {
                  releaseId: i,
                  releaseEnvId: a,
                  publishContext: u,
                  includeFailureDetails: l,
                  releaseToCompare: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "85765790-ac68-494e-b268-af36c3929744",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  re.TypeInfo.TestResultSummary,
                  !1
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      queryTestResultsSummaryForReleases(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "85765790-ac68-494e-b268-af36c3929744",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.TestResultSummary,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      queryTestSummaryByRequirement(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: i },
                s = { workItemIds: a && a.join(",") };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "cd08294e-308d-4460-a46e-4cfdefba0b4b",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  re.TypeInfo.TestSummaryForWorkItem,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      queryResultTrendForBuild(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "fbc82a85-0786-4442-88bb-eb0fda6b01b0",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.AggregatedDataForResultTrend,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      queryResultTrendForRelease(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "dd178e93-d8dd-4887-9635-d6b9560b7b6e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.AggregatedDataForResultTrend,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTestRunStatistics(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, runId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "0a42c424-d764-4a16-a2d5-5c85f87d0ae8",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.TestRunStatistic,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      createTestRun(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "cadb3810-d47d-4a3c-a234-fe5f3be50138",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, re.TypeInfo.TestRun, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteTestRun(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, runId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "cadb3810-d47d-4a3c-a234-fe5f3be50138",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTestRunById(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t, runId: i },
                s = { includeDetails: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "cadb3810-d47d-4a3c-a234-fe5f3be50138",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, re.TypeInfo.TestRun, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getTestRuns(t, i, a, u, l, r, s, n, o) {
        return O(this, void 0, void 0, function* () {
          return new Promise((p, d) =>
            O(this, void 0, void 0, function* () {
              let c = { project: t },
                f = {
                  buildUri: i,
                  owner: a,
                  tmiRunId: u,
                  planId: l,
                  includeRunDetails: r,
                  automated: s,
                  $skip: n,
                  $top: o,
                };
              try {
                let h = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "cadb3810-d47d-4a3c-a234-fe5f3be50138",
                    c,
                    f
                  ),
                  T = h.requestUrl,
                  q = this.createRequestOptions(
                    "application/json",
                    h.apiVersion
                  ),
                  j;
                j = yield this.rest.get(T, q);
                let F = this.formatResponse(j.result, re.TypeInfo.TestRun, !0);
                p(F);
              } catch (h) {
                d(h);
              }
            })
          );
        });
      }
      queryTestRuns(t, i, a, u, l, r, s, n, o, p, d, c, f, h, T, q, j) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError(
              "minLastUpdatedDate can not be null or undefined"
            );
          if (a == null)
            throw new TypeError(
              "maxLastUpdatedDate can not be null or undefined"
            );
          return new Promise((F, U) =>
            O(this, void 0, void 0, function* () {
              let z = { project: t },
                W = {
                  minLastUpdatedDate: i,
                  maxLastUpdatedDate: a,
                  state: u,
                  planIds: l && l.join(","),
                  isAutomated: r,
                  publishContext: s,
                  buildIds: n && n.join(","),
                  buildDefIds: o && o.join(","),
                  branchName: p,
                  releaseIds: d && d.join(","),
                  releaseDefIds: c && c.join(","),
                  releaseEnvIds: f && f.join(","),
                  releaseEnvDefIds: h && h.join(","),
                  runTitle: T,
                  $top: q,
                  continuationToken: j,
                };
              try {
                let fe = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "cadb3810-d47d-4a3c-a234-fe5f3be50138",
                    z,
                    W
                  ),
                  Ie = fe.requestUrl,
                  Te = this.createRequestOptions(
                    "application/json",
                    fe.apiVersion
                  ),
                  Re;
                Re = yield this.rest.get(Ie, Te);
                let Ge = this.formatResponse(
                  Re.result,
                  re.TypeInfo.TestRun,
                  !0
                );
                F(Ge);
              } catch (fe) {
                U(fe);
              }
            })
          );
        });
      }
      updateTestRun(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: i, runId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "cadb3810-d47d-4a3c-a234-fe5f3be50138",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, re.TypeInfo.TestRun, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createTestSession(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "1500b4b4-6c69-4ca6-9b18-35e9e97fe2ac",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  re.TypeInfo.TestSession,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getTestSessions(t, i, a, u, l, r) {
        return O(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            O(this, void 0, void 0, function* () {
              let o = null,
                p = null;
              t && ((o = t.projectId || t.project), (p = t.teamId || t.team));
              let d = { project: o, team: p },
                c = {
                  period: i,
                  allSessions: a,
                  includeAllProperties: u,
                  source: l,
                  includeOnlyCompletedSessions: r,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "1500b4b4-6c69-4ca6-9b18-35e9e97fe2ac",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(
                  q.result,
                  re.TypeInfo.TestSession,
                  !0
                );
                s(j);
              } catch (f) {
                n(f);
              }
            })
          );
        });
      }
      updateTestSession(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "1500b4b4-6c69-4ca6-9b18-35e9e97fe2ac",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  re.TypeInfo.TestSession,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      deleteSharedParameter(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, sharedParameterId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "8300eeca-0f8c-4eff-a089-d2dda409c41f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteSharedStep(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, sharedStepId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "fabb3cc9-e3f8-40b7-8b62-24cc4b73fccf",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addTestCasesToSuite(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = {
                action: "TestCases",
                project: t,
                planId: i,
                suiteId: a,
                testCaseIds: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "a4a1ec1c-b03f-41ca-8857-704594ecf58e",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, null, p);
                let c = this.formatResponse(d.result, null, !0);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getTestCaseById(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = {
                action: "TestCases",
                project: t,
                planId: i,
                suiteId: a,
                testCaseIds: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "a4a1ec1c-b03f-41ca-8857-704594ecf58e",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getTestCases(t, i, a) {
        return O(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = {
                action: "TestCases",
                project: t,
                planId: i,
                suiteId: a,
              };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "a4a1ec1c-b03f-41ca-8857-704594ecf58e",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      removeTestCasesFromSuiteUrl(t, i, a, u) {
        return O(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            O(this, void 0, void 0, function* () {
              let s = {
                action: "TestCases",
                project: t,
                planId: i,
                suiteId: a,
                testCaseIds: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "a4a1ec1c-b03f-41ca-8857-704594ecf58e",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateSuiteTestCases(t, i, a, u, l) {
        return O(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            O(this, void 0, void 0, function* () {
              let n = {
                action: "TestCases",
                project: i,
                planId: a,
                suiteId: u,
                testCaseIds: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "Test",
                    "a4a1ec1c-b03f-41ca-8857-704594ecf58e",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, null, !0);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      deleteTestCase(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, testCaseId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "4d472e0f-e32c-4ef8-adf4-a4078772889c",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      queryTestHistory(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "Test",
                    "929fd86c-3e38-4d8c-b4b6-90df256e5971",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.TestHistoryQuery,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      createTestSettings(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "8133ce14-962f-42af-a5f9-6aa9defcb9c8",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteTestSettings(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, testSettingsId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "8133ce14-962f-42af-a5f9-6aa9defcb9c8",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTestSettingsById(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t, testSettingsId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "8133ce14-962f-42af-a5f9-6aa9defcb9c8",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addWorkItemToTestLinks(t, i) {
        return O(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "371b1655-ce05-412e-a113-64cc77bb78d2",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  re.TypeInfo.WorkItemToTestLinks,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteTestMethodToWorkItemLink(t, i, a) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("testName can not be null or undefined");
          if (a == null)
            throw new TypeError("workItemId can not be null or undefined");
          return new Promise((u, l) =>
            O(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { testName: i, workItemId: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "7b0bdee3-a354-47f9-a42c-89018d7808d5",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      queryTestMethodLinkedWorkItems(t, i) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("testName can not be null or undefined");
          return new Promise((a, u) =>
            O(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { testName: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "7b0bdee3-a354-47f9-a42c-89018d7808d5",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, null, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      queryTestResultWorkItems(t, i, a, u, l, r, s) {
        return O(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError(
              "workItemCategory can not be null or undefined"
            );
          return new Promise((n, o) =>
            O(this, void 0, void 0, function* () {
              let p = { project: t },
                d = {
                  workItemCategory: i,
                  automatedTestName: a,
                  testCaseId: u,
                  maxCompleteDate: l,
                  days: r,
                  $workItemCount: s,
                };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "Test",
                    "926ff5dc-137f-45f0-bd51-9412fa9810ce",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(T.result, null, !0);
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
    };
  Rs.RESOURCE_AREA_ID = "c2aa639c-3ccc-4740-b3b6-ce2a1e1d984e";
  tn.TestApi = Rs;
});
var rc = x((Z) => {
  "use strict";
  Object.defineProperty(Z, "__esModule", { value: !0 });
  var Vs = zi(),
    ET;
  (function (e) {
    (e[(e.RawText = 0)] = "RawText"),
      (e[(e.Base64Encoded = 1)] = "Base64Encoded");
  })((ET = Z.ItemContentType || (Z.ItemContentType = {})));
  var ST;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Previous = 1)] = "Previous"),
      (e[(e.UseRename = 2)] = "UseRename");
  })((ST = Z.TfvcVersionOption || (Z.TfvcVersionOption = {})));
  var NT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Changeset = 1)] = "Changeset"),
      (e[(e.Shelveset = 2)] = "Shelveset"),
      (e[(e.Change = 3)] = "Change"),
      (e[(e.Date = 4)] = "Date"),
      (e[(e.Latest = 5)] = "Latest"),
      (e[(e.Tip = 6)] = "Tip"),
      (e[(e.MergeSource = 7)] = "MergeSource");
  })((NT = Z.TfvcVersionType || (Z.TfvcVersionType = {})));
  var BT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Add = 1)] = "Add"),
      (e[(e.Edit = 2)] = "Edit"),
      (e[(e.Encoding = 4)] = "Encoding"),
      (e[(e.Rename = 8)] = "Rename"),
      (e[(e.Delete = 16)] = "Delete"),
      (e[(e.Undelete = 32)] = "Undelete"),
      (e[(e.Branch = 64)] = "Branch"),
      (e[(e.Merge = 128)] = "Merge"),
      (e[(e.Lock = 256)] = "Lock"),
      (e[(e.Rollback = 512)] = "Rollback"),
      (e[(e.SourceRename = 1024)] = "SourceRename"),
      (e[(e.TargetRename = 2048)] = "TargetRename"),
      (e[(e.Property = 4096)] = "Property"),
      (e[(e.All = 8191)] = "All");
  })((BT = Z.VersionControlChangeType || (Z.VersionControlChangeType = {})));
  var MT;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.OneLevel = 1)] = "OneLevel"),
      (e[(e.OneLevelPlusNestedEmptyFolders = 4)] =
        "OneLevelPlusNestedEmptyFolders"),
      (e[(e.Full = 120)] = "Full");
  })(
    (MT = Z.VersionControlRecursionType || (Z.VersionControlRecursionType = {}))
  );
  Z.TypeInfo = {
    Change: {},
    GitRepository: {},
    GitRepositoryRef: {},
    ItemContent: {},
    ItemContentType: { enumValues: { rawText: 0, base64Encoded: 1 } },
    TfvcBranch: {},
    TfvcBranchRef: {},
    TfvcChange: {},
    TfvcChangeset: {},
    TfvcChangesetRef: {},
    TfvcItem: {},
    TfvcItemDescriptor: {},
    TfvcItemRequestData: {},
    TfvcLabel: {},
    TfvcLabelRef: {},
    TfvcShelveset: {},
    TfvcShelvesetRef: {},
    TfvcVersionDescriptor: {},
    TfvcVersionOption: { enumValues: { none: 0, previous: 1, useRename: 2 } },
    TfvcVersionType: {
      enumValues: {
        none: 0,
        changeset: 1,
        shelveset: 2,
        change: 3,
        date: 4,
        latest: 5,
        tip: 6,
        mergeSource: 7,
      },
    },
    VersionControlChangeType: {
      enumValues: {
        none: 0,
        add: 1,
        edit: 2,
        encoding: 4,
        rename: 8,
        delete: 16,
        undelete: 32,
        branch: 64,
        merge: 128,
        lock: 256,
        rollback: 512,
        sourceRename: 1024,
        targetRename: 2048,
        property: 4096,
        all: 8191,
      },
    },
    VersionControlProjectInfo: {},
    VersionControlRecursionType: {
      enumValues: {
        none: 0,
        oneLevel: 1,
        oneLevelPlusNestedEmptyFolders: 4,
        full: 120,
      },
    },
  };
  Z.TypeInfo.Change.fields = {
    changeType: { enumType: Z.TypeInfo.VersionControlChangeType },
    newContent: { typeInfo: Z.TypeInfo.ItemContent },
  };
  Z.TypeInfo.GitRepository.fields = {
    parentRepository: { typeInfo: Z.TypeInfo.GitRepositoryRef },
    project: { typeInfo: Vs.TypeInfo.TeamProjectReference },
  };
  Z.TypeInfo.GitRepositoryRef.fields = {
    project: { typeInfo: Vs.TypeInfo.TeamProjectReference },
  };
  Z.TypeInfo.ItemContent.fields = {
    contentType: { enumType: Z.TypeInfo.ItemContentType },
  };
  Z.TypeInfo.TfvcBranch.fields = {
    children: { isArray: !0, typeInfo: Z.TypeInfo.TfvcBranch },
    createdDate: { isDate: !0 },
  };
  Z.TypeInfo.TfvcBranchRef.fields = { createdDate: { isDate: !0 } };
  Z.TypeInfo.TfvcChange.fields = {
    changeType: { enumType: Z.TypeInfo.VersionControlChangeType },
    newContent: { typeInfo: Z.TypeInfo.ItemContent },
  };
  Z.TypeInfo.TfvcChangeset.fields = {
    changes: { isArray: !0, typeInfo: Z.TypeInfo.TfvcChange },
    createdDate: { isDate: !0 },
  };
  Z.TypeInfo.TfvcChangesetRef.fields = { createdDate: { isDate: !0 } };
  Z.TypeInfo.TfvcItem.fields = { changeDate: { isDate: !0 } };
  Z.TypeInfo.TfvcItemDescriptor.fields = {
    recursionLevel: { enumType: Z.TypeInfo.VersionControlRecursionType },
    versionOption: { enumType: Z.TypeInfo.TfvcVersionOption },
    versionType: { enumType: Z.TypeInfo.TfvcVersionType },
  };
  Z.TypeInfo.TfvcItemRequestData.fields = {
    itemDescriptors: { isArray: !0, typeInfo: Z.TypeInfo.TfvcItemDescriptor },
  };
  Z.TypeInfo.TfvcLabel.fields = {
    items: { isArray: !0, typeInfo: Z.TypeInfo.TfvcItem },
    modifiedDate: { isDate: !0 },
  };
  Z.TypeInfo.TfvcLabelRef.fields = { modifiedDate: { isDate: !0 } };
  Z.TypeInfo.TfvcShelveset.fields = {
    changes: { isArray: !0, typeInfo: Z.TypeInfo.TfvcChange },
    createdDate: { isDate: !0 },
  };
  Z.TypeInfo.TfvcShelvesetRef.fields = { createdDate: { isDate: !0 } };
  Z.TypeInfo.TfvcVersionDescriptor.fields = {
    versionOption: { enumType: Z.TypeInfo.TfvcVersionOption },
    versionType: { enumType: Z.TypeInfo.TfvcVersionType },
  };
  Z.TypeInfo.VersionControlProjectInfo.fields = {
    defaultSourceControlType: { enumType: Vs.TypeInfo.SourceControlTypes },
    project: { typeInfo: Vs.TypeInfo.TeamProjectReference },
  };
});
var nc = x((rn) => {
  "use strict";
  var X =
    (rn && rn.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(rn, "__esModule", { value: !0 });
  var xT = qe(),
    We = rc(),
    bs = class extends xT.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Tfvc-api", a);
      }
      getBranch(t, i, a, u) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((l, r) =>
            X(this, void 0, void 0, function* () {
              let s = { project: i },
                n = { path: t, includeParent: a, includeChildren: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "bc1f417e-239d-42e7-85e1-76e80cb2d6eb",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  We.TypeInfo.TfvcBranch,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getBranches(t, i, a, u, l) {
        return X(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            X(this, void 0, void 0, function* () {
              let n = { project: t },
                o = {
                  includeParent: i,
                  includeChildren: a,
                  includeDeleted: u,
                  includeLinks: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "bc1f417e-239d-42e7-85e1-76e80cb2d6eb",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  We.TypeInfo.TfvcBranch,
                  !0
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getBranchRefs(t, i, a, u) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("scopePath can not be null or undefined");
          return new Promise((l, r) =>
            X(this, void 0, void 0, function* () {
              let s = { project: i },
                n = { scopePath: t, includeDeleted: a, includeLinks: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "bc1f417e-239d-42e7-85e1-76e80cb2d6eb",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  We.TypeInfo.TfvcBranchRef,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getChangesetChanges(t, i, a) {
        return X(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            X(this, void 0, void 0, function* () {
              let r = { id: t },
                s = { $skip: i, $top: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "f32b86f2-15b9-4fe6-81b1-6f8938617ee5",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  We.TypeInfo.TfvcChange,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      createChangeset(t, i) {
        return X(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            X(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "tfvc",
                    "0bc8f0a4-6bfb-42a9-ba84-139da7b99c49",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  We.TypeInfo.TfvcChangesetRef,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getChangeset(t, i, a, u, l, r, s, n, o, p, d) {
        return X(this, void 0, void 0, function* () {
          return new Promise((c, f) =>
            X(this, void 0, void 0, function* () {
              let h = { project: i, id: t },
                T = {
                  maxChangeCount: a,
                  includeDetails: u,
                  includeWorkItems: l,
                  maxCommentLength: r,
                  includeSourceRename: s,
                  $skip: n,
                  $top: o,
                  $orderby: p,
                  searchCriteria: d,
                };
              try {
                let q = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "tfvc",
                    "0bc8f0a4-6bfb-42a9-ba84-139da7b99c49",
                    h,
                    T
                  ),
                  j = q.requestUrl,
                  F = this.createRequestOptions(
                    "application/json",
                    q.apiVersion
                  ),
                  U;
                U = yield this.rest.get(j, F);
                let z = this.formatResponse(
                  U.result,
                  We.TypeInfo.TfvcChangeset,
                  !1
                );
                c(z);
              } catch (q) {
                f(q);
              }
            })
          );
        });
      }
      getChangesets(t, i, a, u, l, r) {
        return X(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            X(this, void 0, void 0, function* () {
              let o = { project: t },
                p = {
                  maxCommentLength: i,
                  $skip: a,
                  $top: u,
                  $orderby: l,
                  searchCriteria: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "tfvc",
                    "0bc8f0a4-6bfb-42a9-ba84-139da7b99c49",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  We.TypeInfo.TfvcChangesetRef,
                  !0
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getBatchedChangesets(t) {
        return X(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            X(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "b7e7c173-803c-4fea-9ec8-31ee35c5502a",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  We.TypeInfo.TfvcChangesetRef,
                  !0
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getChangesetWorkItems(t) {
        return X(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            X(this, void 0, void 0, function* () {
              let u = { id: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "64ae0bea-1d71-47c9-a9e5-fe73f5ea0ff4",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getItemsBatch(t, i) {
        return X(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            X(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "fe6f827b-5f64-480f-b8af-1eca3b80e833",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, We.TypeInfo.TfvcItem, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getItemsBatchZip(t, i) {
        return X(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            X(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "fe6f827b-5f64-480f-b8af-1eca3b80e833",
                    l
                  ),
                  s = r.requestUrl,
                  n = r.apiVersion,
                  o = this.createAcceptHeader("application/zip", n);
                a((yield this.http.get(s, { Accept: o })).message);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getItem(t, i, a, u, l, r, s, n) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((o, p) =>
            X(this, void 0, void 0, function* () {
              let d = { project: i },
                c = {
                  path: t,
                  fileName: a,
                  download: u,
                  scopePath: l,
                  recursionLevel: r,
                  versionDescriptor: s,
                  includeContent: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "ba9fc436-9a38-4578-89d6-e4f3241f5040",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.get(h, T);
                let j = this.formatResponse(q.result, We.TypeInfo.TfvcItem, !1);
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getItemContent(t, i, a, u, l, r, s, n) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((o, p) =>
            X(this, void 0, void 0, function* () {
              let d = { project: i },
                c = {
                  path: t,
                  fileName: a,
                  download: u,
                  scopePath: l,
                  recursionLevel: r,
                  versionDescriptor: s,
                  includeContent: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "ba9fc436-9a38-4578-89d6-e4f3241f5040",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = f.apiVersion,
                  q = this.createAcceptHeader("application/octet-stream", T);
                o((yield this.http.get(h, { Accept: q })).message);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getItems(t, i, a, u, l) {
        return X(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            X(this, void 0, void 0, function* () {
              let n = { project: t },
                o = {
                  scopePath: i,
                  recursionLevel: a,
                  includeLinks: u,
                  versionDescriptor: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "ba9fc436-9a38-4578-89d6-e4f3241f5040",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, We.TypeInfo.TfvcItem, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getItemText(t, i, a, u, l, r, s, n) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((o, p) =>
            X(this, void 0, void 0, function* () {
              let d = { project: i },
                c = {
                  path: t,
                  fileName: a,
                  download: u,
                  scopePath: l,
                  recursionLevel: r,
                  versionDescriptor: s,
                  includeContent: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "ba9fc436-9a38-4578-89d6-e4f3241f5040",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = f.apiVersion,
                  q = this.createAcceptHeader("text/plain", T);
                o((yield this.http.get(h, { Accept: q })).message);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getItemZip(t, i, a, u, l, r, s, n) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((o, p) =>
            X(this, void 0, void 0, function* () {
              let d = { project: i },
                c = {
                  path: t,
                  fileName: a,
                  download: u,
                  scopePath: l,
                  recursionLevel: r,
                  versionDescriptor: s,
                  includeContent: n,
                };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "ba9fc436-9a38-4578-89d6-e4f3241f5040",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = f.apiVersion,
                  q = this.createAcceptHeader("application/zip", T);
                o((yield this.http.get(h, { Accept: q })).message);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getLabelItems(t, i, a) {
        return X(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            X(this, void 0, void 0, function* () {
              let r = { labelId: t },
                s = { $top: i, $skip: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "06166e34-de17-4b60-8cd1-23182a346fda",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, We.TypeInfo.TfvcItem, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getLabel(t, i, a) {
        return X(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("requestData can not be null or undefined");
          return new Promise((u, l) =>
            X(this, void 0, void 0, function* () {
              let r = { project: a, labelId: t },
                s = { requestData: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "a5d9bd7f-b661-4d0e-b9be-d9c16affae54",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  We.TypeInfo.TfvcLabel,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getLabels(t, i, a, u) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("requestData can not be null or undefined");
          return new Promise((l, r) =>
            X(this, void 0, void 0, function* () {
              let s = { project: i },
                n = { requestData: t, $top: a, $skip: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "a5d9bd7f-b661-4d0e-b9be-d9c16affae54",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  We.TypeInfo.TfvcLabelRef,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getShelvesetChanges(t, i, a) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("shelvesetId can not be null or undefined");
          return new Promise((u, l) =>
            X(this, void 0, void 0, function* () {
              let r = {},
                s = { shelvesetId: t, $top: i, $skip: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "dbaf075b-0445-4c34-9e5b-82292f856522",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  We.TypeInfo.TfvcChange,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getShelveset(t, i) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("shelvesetId can not be null or undefined");
          return new Promise((a, u) =>
            X(this, void 0, void 0, function* () {
              let l = {},
                r = { shelvesetId: t, requestData: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "e36d44fb-e907-4b0a-b194-f83f1ed32ad3",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  We.TypeInfo.TfvcShelveset,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getShelvesets(t, i, a) {
        return X(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            X(this, void 0, void 0, function* () {
              let r = {},
                s = { requestData: t, $top: i, $skip: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "e36d44fb-e907-4b0a-b194-f83f1ed32ad3",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  We.TypeInfo.TfvcShelvesetRef,
                  !0
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getShelvesetWorkItems(t) {
        return X(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("shelvesetId can not be null or undefined");
          return new Promise((i, a) =>
            X(this, void 0, void 0, function* () {
              let u = {},
                l = { shelvesetId: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "a7a0c1c1-373e-425a-b031-a519474d743d",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getTfvcStatistics(t, i) {
        return X(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            X(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { scopePath: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "tfvc",
                    "e15c74c0-3605-40e0-aed4-4cc61e549ed8",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !1);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
    };
  bs.RESOURCE_AREA_ID = "8aa40520-446d-40e6-89f6-9c9f9ce44c48";
  rn.TfvcApi = bs;
});
var sc = x((ce) => {
  "use strict";
  Object.defineProperty(ce, "__esModule", { value: !0 });
  var _T;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Reactions = 1)] = "Reactions"),
      (e[(e.RenderedText = 8)] = "RenderedText"),
      (e[(e.RenderedTextOnly = 16)] = "RenderedTextOnly"),
      (e[(e.Children = 32)] = "Children"),
      (e[(e.All = -17)] = "All");
  })((_T = ce.CommentExpandOptions || (ce.CommentExpandOptions = {})));
  var GT;
  (function (e) {
    (e[(e.Markdown = 0)] = "Markdown"), (e[(e.Html = 1)] = "Html");
  })((GT = ce.CommentFormat || (ce.CommentFormat = {})));
  var FT;
  (function (e) {
    (e[(e.Person = 0)] = "Person"),
      (e[(e.WorkItem = 1)] = "WorkItem"),
      (e[(e.PullRequest = 2)] = "PullRequest");
  })((FT = ce.CommentMentionType || (ce.CommentMentionType = {})));
  var LT;
  (function (e) {
    (e[(e.Like = 0)] = "Like"),
      (e[(e.Dislike = 1)] = "Dislike"),
      (e[(e.Heart = 2)] = "Heart"),
      (e[(e.Hooray = 3)] = "Hooray"),
      (e[(e.Smile = 4)] = "Smile"),
      (e[(e.Confused = 5)] = "Confused");
  })((LT = ce.CommentReactionType || (ce.CommentReactionType = {})));
  var WT;
  (function (e) {
    (e[(e.Asc = 1)] = "Asc"), (e[(e.Desc = 2)] = "Desc");
  })((WT = ce.CommentSortOrder || (ce.CommentSortOrder = {})));
  var $T;
  (function (e) {
    (e[(e.Active = 0)] = "Active"),
      (e[(e.Resolved = 1)] = "Resolved"),
      (e[(e.Closed = 2)] = "Closed");
  })(($T = ce.CommentState || (ce.CommentState = {})));
  ce.TypeInfo = {
    Comment: {},
    CommentAttachment: {},
    CommentExpandOptions: {
      enumValues: {
        none: 0,
        reactions: 1,
        renderedText: 8,
        renderedTextOnly: 16,
        children: 32,
        all: -17,
      },
    },
    CommentFormat: { enumValues: { markdown: 0, html: 1 } },
    CommentList: {},
    CommentMention: {},
    CommentMentionType: {
      enumValues: { person: 0, workItem: 1, pullRequest: 2 },
    },
    CommentReaction: {},
    CommentReactionType: {
      enumValues: {
        like: 0,
        dislike: 1,
        heart: 2,
        hooray: 3,
        smile: 4,
        confused: 5,
      },
    },
    CommentSortOrder: { enumValues: { asc: 1, desc: 2 } },
    CommentState: { enumValues: { active: 0, resolved: 1, closed: 2 } },
    CommentUpdateParameters: {},
    CommentVersion: {},
  };
  ce.TypeInfo.Comment.fields = {
    createdDate: { isDate: !0 },
    mentions: { isArray: !0, typeInfo: ce.TypeInfo.CommentMention },
    modifiedDate: { isDate: !0 },
    reactions: { isArray: !0, typeInfo: ce.TypeInfo.CommentReaction },
    replies: { typeInfo: ce.TypeInfo.CommentList },
    state: { enumType: ce.TypeInfo.CommentState },
  };
  ce.TypeInfo.CommentAttachment.fields = { createdDate: { isDate: !0 } };
  ce.TypeInfo.CommentList.fields = {
    comments: { isArray: !0, typeInfo: ce.TypeInfo.Comment },
  };
  ce.TypeInfo.CommentMention.fields = {
    type: { enumType: ce.TypeInfo.CommentMentionType },
  };
  ce.TypeInfo.CommentReaction.fields = {
    type: { enumType: ce.TypeInfo.CommentReactionType },
  };
  ce.TypeInfo.CommentUpdateParameters.fields = {
    state: { enumType: ce.TypeInfo.CommentState },
  };
  ce.TypeInfo.CommentVersion.fields = {
    createdDate: { isDate: !0 },
    modifiedDate: { isDate: !0 },
    state: { enumType: ce.TypeInfo.CommentState },
  };
});
var oc = x(($e) => {
  "use strict";
  Object.defineProperty($e, "__esModule", { value: !0 });
  var Ds = Ua(),
    HT;
  (function (e) {
    (e[(e.ProjectWiki = 0)] = "ProjectWiki"),
      (e[(e.CodeWiki = 1)] = "CodeWiki");
  })((HT = $e.WikiType || ($e.WikiType = {})));
  $e.TypeInfo = {
    Wiki: {},
    WikiCreateBaseParameters: {},
    WikiCreateParametersV2: {},
    WikiPageDetail: {},
    WikiPageStat: {},
    WikiPageViewStats: {},
    WikiType: { enumValues: { projectWiki: 0, codeWiki: 1 } },
    WikiUpdateParameters: {},
    WikiV2: {},
  };
  $e.TypeInfo.Wiki.fields = {
    repository: { typeInfo: Ds.TypeInfo.GitRepository },
  };
  $e.TypeInfo.WikiCreateBaseParameters.fields = {
    type: { enumType: $e.TypeInfo.WikiType },
  };
  $e.TypeInfo.WikiCreateParametersV2.fields = {
    type: { enumType: $e.TypeInfo.WikiType },
    version: { typeInfo: Ds.TypeInfo.GitVersionDescriptor },
  };
  $e.TypeInfo.WikiPageDetail.fields = {
    viewStats: { isArray: !0, typeInfo: $e.TypeInfo.WikiPageStat },
  };
  $e.TypeInfo.WikiPageStat.fields = { day: { isDate: !0 } };
  $e.TypeInfo.WikiPageViewStats.fields = { lastViewedTime: { isDate: !0 } };
  $e.TypeInfo.WikiUpdateParameters.fields = {
    versions: { isArray: !0, typeInfo: Ds.TypeInfo.GitVersionDescriptor },
  };
  $e.TypeInfo.WikiV2.fields = {
    type: { enumType: $e.TypeInfo.WikiType },
    versions: { isArray: !0, typeInfo: Ds.TypeInfo.GitVersionDescriptor },
  };
});
var ac = x((nn) => {
  "use strict";
  var te =
    (nn && nn.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(nn, "__esModule", { value: !0 });
  var zT = qe(),
    Ii = sc(),
    Zt = oc(),
    ws = class extends zT.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Wiki-api", a);
      }
      createCommentAttachment(t, i, a, u, l) {
        return te(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            te(this, void 0, void 0, function* () {
              let n = { project: a, wikiIdentifier: u, pageId: l };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "5100d976-363d-42e7-a19d-4171ecb44782",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  );
                d.additionalHeaders = t;
                let c;
                c = yield this.rest.uploadStream("POST", p, i, d);
                let f = this.formatResponse(
                  c.result,
                  Ii.TypeInfo.CommentAttachment,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getAttachmentContent(t, i, a, u) {
        return te(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            te(this, void 0, void 0, function* () {
              let s = {
                project: t,
                wikiIdentifier: i,
                pageId: a,
                attachmentId: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "5100d976-363d-42e7-a19d-4171ecb44782",
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("application/octet-stream", p);
                l((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      addCommentReaction(t, i, a, u, l) {
        return te(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            te(this, void 0, void 0, function* () {
              let n = {
                project: t,
                wikiIdentifier: i,
                pageId: a,
                commentId: u,
                type: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "7a5bc693-aab7-4d48-8f34-36f373022063",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, null, d);
                let f = this.formatResponse(
                  c.result,
                  Ii.TypeInfo.CommentReaction,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      deleteCommentReaction(t, i, a, u, l) {
        return te(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            te(this, void 0, void 0, function* () {
              let n = {
                project: t,
                wikiIdentifier: i,
                pageId: a,
                commentId: u,
                type: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "7a5bc693-aab7-4d48-8f34-36f373022063",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(
                  c.result,
                  Ii.TypeInfo.CommentReaction,
                  !1
                );
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getEngagedUsers(t, i, a, u, l, r, s) {
        return te(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            te(this, void 0, void 0, function* () {
              let p = {
                  project: t,
                  wikiIdentifier: i,
                  pageId: a,
                  commentId: u,
                  type: l,
                },
                d = { $top: r, $skip: s };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "598a5268-41a7-4162-b7dc-344131e4d1fa",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(T.result, null, !0);
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      addComment(t, i, a, u) {
        return te(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            te(this, void 0, void 0, function* () {
              let s = { project: i, wikiIdentifier: a, pageId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "9b394e93-7db5-46cb-9c26-09a36aa5c895",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, Ii.TypeInfo.Comment, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      deleteComment(t, i, a, u) {
        return te(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            te(this, void 0, void 0, function* () {
              let s = { project: t, wikiIdentifier: i, pageId: a, id: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "9b394e93-7db5-46cb-9c26-09a36aa5c895",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getComment(t, i, a, u, l, r) {
        return te(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            te(this, void 0, void 0, function* () {
              let o = { project: t, wikiIdentifier: i, pageId: a, id: u },
                p = { excludeDeleted: l, $expand: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "9b394e93-7db5-46cb-9c26-09a36aa5c895",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, Ii.TypeInfo.Comment, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      listComments(t, i, a, u, l, r, s, n, o) {
        return te(this, void 0, void 0, function* () {
          return new Promise((p, d) =>
            te(this, void 0, void 0, function* () {
              let c = { project: t, wikiIdentifier: i, pageId: a },
                f = {
                  $top: u,
                  continuationToken: l,
                  excludeDeleted: r,
                  $expand: s,
                  order: n,
                  parentId: o,
                };
              try {
                let h = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "9b394e93-7db5-46cb-9c26-09a36aa5c895",
                    c,
                    f
                  ),
                  T = h.requestUrl,
                  q = this.createRequestOptions(
                    "application/json",
                    h.apiVersion
                  ),
                  j;
                j = yield this.rest.get(T, q);
                let F = this.formatResponse(
                  j.result,
                  Ii.TypeInfo.CommentList,
                  !1
                );
                p(F);
              } catch (h) {
                d(h);
              }
            })
          );
        });
      }
      updateComment(t, i, a, u, l) {
        return te(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            te(this, void 0, void 0, function* () {
              let n = { project: i, wikiIdentifier: a, pageId: u, id: l };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "9b394e93-7db5-46cb-9c26-09a36aa5c895",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, Ii.TypeInfo.Comment, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      getPageText(t, i, a, u, l, r) {
        return te(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            te(this, void 0, void 0, function* () {
              let o = { project: t, wikiIdentifier: i },
                p = {
                  path: a,
                  recursionLevel: u,
                  versionDescriptor: l,
                  includeContent: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "25d3fbc7-fe3d-46cb-b5a5-0b6f79caf27b",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = d.apiVersion,
                  h = this.createAcceptHeader("text/plain", f);
                s((yield this.http.get(c, { Accept: h })).message);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getPageZip(t, i, a, u, l, r) {
        return te(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            te(this, void 0, void 0, function* () {
              let o = { project: t, wikiIdentifier: i },
                p = {
                  path: a,
                  recursionLevel: u,
                  versionDescriptor: l,
                  includeContent: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "25d3fbc7-fe3d-46cb-b5a5-0b6f79caf27b",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = d.apiVersion,
                  h = this.createAcceptHeader("application/zip", f);
                s((yield this.http.get(c, { Accept: h })).message);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getPageByIdText(t, i, a, u, l) {
        return te(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            te(this, void 0, void 0, function* () {
              let n = { project: t, wikiIdentifier: i, id: a },
                o = { recursionLevel: u, includeContent: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "ceddcf75-1068-452d-8b13-2d4d76e1f970",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("text/plain", c);
                r((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getPageByIdZip(t, i, a, u, l) {
        return te(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            te(this, void 0, void 0, function* () {
              let n = { project: t, wikiIdentifier: i, id: a },
                o = { recursionLevel: u, includeContent: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "ceddcf75-1068-452d-8b13-2d4d76e1f970",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = p.apiVersion,
                  f = this.createAcceptHeader("application/zip", c);
                r((yield this.http.get(d, { Accept: f })).message);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getPagesBatch(t, i, a, u) {
        return te(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            te(this, void 0, void 0, function* () {
              let s = { project: i, wikiIdentifier: a },
                n = { versionDescriptor: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "71323c46-2592-4398-8771-ced73dd87207",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  Zt.TypeInfo.WikiPageDetail,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getPageData(t, i, a, u) {
        return te(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            te(this, void 0, void 0, function* () {
              let s = { project: t, wikiIdentifier: i, pageId: a },
                n = { pageViewsForDays: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "81c4e0fe-7663-4d62-ad46-6ab78459f274",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Zt.TypeInfo.WikiPageDetail,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      createOrUpdatePageViewStats(t, i, a, u, l) {
        return te(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("wikiVersion can not be null or undefined");
          if (u == null)
            throw new TypeError("path can not be null or undefined");
          return new Promise((r, s) =>
            te(this, void 0, void 0, function* () {
              let n = { project: t, wikiIdentifier: i },
                o = { wikiVersion: a, path: u, oldPath: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wiki",
                    "1087b746-5d15-41b9-bea6-14e325e7f880",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, null, c);
                let h = this.formatResponse(
                  f.result,
                  Zt.TypeInfo.WikiPageViewStats,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      createWiki(t, i) {
        return te(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            te(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wiki",
                    "288d122c-dbd4-451d-aa5f-7dbbba070728",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, Zt.TypeInfo.WikiV2, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteWiki(t, i) {
        return te(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            te(this, void 0, void 0, function* () {
              let l = { project: i, wikiIdentifier: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wiki",
                    "288d122c-dbd4-451d-aa5f-7dbbba070728",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, Zt.TypeInfo.WikiV2, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getAllWikis(t) {
        return te(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            te(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wiki",
                    "288d122c-dbd4-451d-aa5f-7dbbba070728",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, Zt.TypeInfo.WikiV2, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getWiki(t, i) {
        return te(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            te(this, void 0, void 0, function* () {
              let l = { project: i, wikiIdentifier: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wiki",
                    "288d122c-dbd4-451d-aa5f-7dbbba070728",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, Zt.TypeInfo.WikiV2, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateWiki(t, i, a) {
        return te(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            te(this, void 0, void 0, function* () {
              let r = { project: a, wikiIdentifier: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wiki",
                    "288d122c-dbd4-451d-aa5f-7dbbba070728",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, Zt.TypeInfo.WikiV2, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
    };
  ws.RESOURCE_AREA_ID = "bf7d82a0-8aa5-4613-94ef-6172a5ea01f3";
  nn.WikiApi = ws;
});
var lc = x((sn) => {
  "use strict";
  Object.defineProperty(sn, "__esModule", { value: !0 });
  var QT;
  (function (e) {
    (e[(e.Sunday = 0)] = "Sunday"),
      (e[(e.Monday = 1)] = "Monday"),
      (e[(e.Tuesday = 2)] = "Tuesday"),
      (e[(e.Wednesday = 3)] = "Wednesday"),
      (e[(e.Thursday = 4)] = "Thursday"),
      (e[(e.Friday = 5)] = "Friday"),
      (e[(e.Saturday = 6)] = "Saturday");
  })((QT = sn.DayOfWeek || (sn.DayOfWeek = {})));
  sn.TypeInfo = {
    DayOfWeek: {
      enumValues: {
        sunday: 0,
        monday: 1,
        tuesday: 2,
        wednesday: 3,
        thursday: 4,
        friday: 5,
        saturday: 6,
      },
    },
  };
});
var pc = x((M) => {
  "use strict";
  Object.defineProperty(M, "__esModule", { value: !0 });
  var uc = lc(),
    JT;
  (function (e) {
    (e[(e.Portfolio = 0)] = "Portfolio"),
      (e[(e.Requirement = 1)] = "Requirement"),
      (e[(e.Task = 2)] = "Task");
  })((JT = M.BacklogType || (M.BacklogType = {})));
  var KT;
  (function (e) {
    (e[(e.InProgressColumns = 0)] = "InProgressColumns"),
      (e[(e.AllColumns = 1)] = "AllColumns"),
      (e[(e.CustomColumns = 2)] = "CustomColumns");
  })((KT = M.BoardBadgeColumnOptions || (M.BoardBadgeColumnOptions = {})));
  var XT;
  (function (e) {
    (e[(e.Incoming = 0)] = "Incoming"),
      (e[(e.InProgress = 1)] = "InProgress"),
      (e[(e.Outgoing = 2)] = "Outgoing");
  })((XT = M.BoardColumnType || (M.BoardColumnType = {})));
  var ZT;
  (function (e) {
    (e[(e.Off = 0)] = "Off"),
      (e[(e.AsRequirements = 1)] = "AsRequirements"),
      (e[(e.AsTasks = 2)] = "AsTasks");
  })((ZT = M.BugsBehavior || (M.BugsBehavior = {})));
  var YT;
  (function (e) {
    (e[(e.String = 0)] = "String"),
      (e[(e.PlainText = 1)] = "PlainText"),
      (e[(e.Integer = 2)] = "Integer"),
      (e[(e.DateTime = 3)] = "DateTime"),
      (e[(e.TreePath = 4)] = "TreePath"),
      (e[(e.Boolean = 5)] = "Boolean"),
      (e[(e.Double = 6)] = "Double");
  })((YT = M.FieldType || (M.FieldType = {})));
  var eR;
  (function (e) {
    (e[(e.AvatarOnly = 0)] = "AvatarOnly"),
      (e[(e.FullName = 1)] = "FullName"),
      (e[(e.AvatarAndFullName = 2)] = "AvatarAndFullName");
  })((eR = M.IdentityDisplayFormat || (M.IdentityDisplayFormat = {})));
  var tR;
  (function (e) {
    e[(e.DeliveryTimelineView = 0)] = "DeliveryTimelineView";
  })((tR = M.PlanType || (M.PlanType = {})));
  var iR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.View = 1)] = "View"),
      (e[(e.Edit = 2)] = "Edit"),
      (e[(e.Delete = 4)] = "Delete"),
      (e[(e.Manage = 8)] = "Manage"),
      (e[(e.AllPermissions = 15)] = "AllPermissions");
  })((iR = M.PlanUserPermissions || (M.PlanUserPermissions = {})));
  var rR;
  (function (e) {
    (e[(e.Past = 0)] = "Past"),
      (e[(e.Current = 1)] = "Current"),
      (e[(e.Future = 2)] = "Future");
  })((rR = M.TimeFrame || (M.TimeFrame = {})));
  var nR;
  (function (e) {
    (e[(e.OK = 0)] = "OK"),
      (e[(e.InvalidFilterClause = 1)] = "InvalidFilterClause"),
      (e[(e.Unknown = 2)] = "Unknown");
  })(
    (nR = M.TimelineCriteriaStatusCode || (M.TimelineCriteriaStatusCode = {}))
  );
  var sR;
  (function (e) {
    (e[(e.OK = 0)] = "OK"), (e[(e.IsOverlapping = 1)] = "IsOverlapping");
  })(
    (sR = M.TimelineIterationStatusCode || (M.TimelineIterationStatusCode = {}))
  );
  var oR;
  (function (e) {
    (e[(e.OK = 0)] = "OK"),
      (e[(e.DoesntExistOrAccessDenied = 1)] = "DoesntExistOrAccessDenied"),
      (e[(e.MaxTeamsExceeded = 2)] = "MaxTeamsExceeded"),
      (e[(e.MaxTeamFieldsExceeded = 3)] = "MaxTeamFieldsExceeded"),
      (e[(e.BacklogInError = 4)] = "BacklogInError"),
      (e[(e.MissingTeamFieldValue = 5)] = "MissingTeamFieldValue"),
      (e[(e.NoIterationsExist = 6)] = "NoIterationsExist");
  })((oR = M.TimelineTeamStatusCode || (M.TimelineTeamStatusCode = {})));
  M.TypeInfo = {
    BacklogConfiguration: {},
    BacklogLevelConfiguration: {},
    BacklogType: { enumValues: { portfolio: 0, requirement: 1, task: 2 } },
    Board: {},
    BoardBadgeColumnOptions: {
      enumValues: { inProgressColumns: 0, allColumns: 1, customColumns: 2 },
    },
    BoardColumn: {},
    BoardColumnType: {
      enumValues: { incoming: 0, inProgress: 1, outgoing: 2 },
    },
    BugsBehavior: { enumValues: { off: 0, asRequirements: 1, asTasks: 2 } },
    CapacityContractBase: {},
    CapacityPatch: {},
    CardFieldSettings: {},
    CardSettings: {},
    CreatePlan: {},
    DateRange: {},
    DeliveryViewData: {},
    DeliveryViewPropertyCollection: {},
    FieldInfo: {},
    FieldType: {
      enumValues: {
        string: 0,
        plainText: 1,
        integer: 2,
        dateTime: 3,
        treePath: 4,
        boolean: 5,
        double: 6,
      },
    },
    IdentityDisplayFormat: {
      enumValues: { avatarOnly: 0, fullName: 1, avatarAndFullName: 2 },
    },
    Marker: {},
    Plan: {},
    PlanMetadata: {},
    PlanType: { enumValues: { deliveryTimelineView: 0 } },
    PlanUserPermissions: {
      enumValues: {
        none: 0,
        view: 1,
        edit: 2,
        delete: 4,
        manage: 8,
        allPermissions: 15,
      },
    },
    TeamCapacity: {},
    TeamIterationAttributes: {},
    TeamMemberCapacity: {},
    TeamMemberCapacityIdentityRef: {},
    TeamSetting: {},
    TeamSettingsDaysOff: {},
    TeamSettingsDaysOffPatch: {},
    TeamSettingsIteration: {},
    TeamSettingsPatch: {},
    TimeFrame: { enumValues: { past: 0, current: 1, future: 2 } },
    TimelineCriteriaStatus: {},
    TimelineCriteriaStatusCode: {
      enumValues: { ok: 0, invalidFilterClause: 1, unknown: 2 },
    },
    TimelineIterationStatus: {},
    TimelineIterationStatusCode: { enumValues: { ok: 0, isOverlapping: 1 } },
    TimelineTeamData: {},
    TimelineTeamIteration: {},
    TimelineTeamStatus: {},
    TimelineTeamStatusCode: {
      enumValues: {
        ok: 0,
        doesntExistOrAccessDenied: 1,
        maxTeamsExceeded: 2,
        maxTeamFieldsExceeded: 3,
        backlogInError: 4,
        missingTeamFieldValue: 5,
        noIterationsExist: 6,
      },
    },
    UpdatePlan: {},
  };
  M.TypeInfo.BacklogConfiguration.fields = {
    bugsBehavior: { enumType: M.TypeInfo.BugsBehavior },
    portfolioBacklogs: {
      isArray: !0,
      typeInfo: M.TypeInfo.BacklogLevelConfiguration,
    },
    requirementBacklog: { typeInfo: M.TypeInfo.BacklogLevelConfiguration },
    taskBacklog: { typeInfo: M.TypeInfo.BacklogLevelConfiguration },
  };
  M.TypeInfo.BacklogLevelConfiguration.fields = {
    type: { enumType: M.TypeInfo.BacklogType },
  };
  M.TypeInfo.Board.fields = {
    columns: { isArray: !0, typeInfo: M.TypeInfo.BoardColumn },
  };
  M.TypeInfo.BoardColumn.fields = {
    columnType: { enumType: M.TypeInfo.BoardColumnType },
  };
  M.TypeInfo.CapacityContractBase.fields = {
    daysOff: { isArray: !0, typeInfo: M.TypeInfo.DateRange },
  };
  M.TypeInfo.CapacityPatch.fields = {
    daysOff: { isArray: !0, typeInfo: M.TypeInfo.DateRange },
  };
  M.TypeInfo.CardFieldSettings.fields = {
    additionalFields: { isArray: !0, typeInfo: M.TypeInfo.FieldInfo },
    assignedToDisplayFormat: { enumType: M.TypeInfo.IdentityDisplayFormat },
    coreFields: { isArray: !0, typeInfo: M.TypeInfo.FieldInfo },
  };
  M.TypeInfo.CardSettings.fields = {
    fields: { typeInfo: M.TypeInfo.CardFieldSettings },
  };
  M.TypeInfo.CreatePlan.fields = { type: { enumType: M.TypeInfo.PlanType } };
  M.TypeInfo.DateRange.fields = { end: { isDate: !0 }, start: { isDate: !0 } };
  M.TypeInfo.DeliveryViewData.fields = {
    criteriaStatus: { typeInfo: M.TypeInfo.TimelineCriteriaStatus },
    endDate: { isDate: !0 },
    startDate: { isDate: !0 },
    teams: { isArray: !0, typeInfo: M.TypeInfo.TimelineTeamData },
  };
  M.TypeInfo.DeliveryViewPropertyCollection.fields = {
    cardSettings: { typeInfo: M.TypeInfo.CardSettings },
    markers: { isArray: !0, typeInfo: M.TypeInfo.Marker },
  };
  M.TypeInfo.FieldInfo.fields = {
    fieldType: { enumType: M.TypeInfo.FieldType },
  };
  M.TypeInfo.Marker.fields = { date: { isDate: !0 } };
  M.TypeInfo.Plan.fields = {
    createdDate: { isDate: !0 },
    lastAccessed: { isDate: !0 },
    modifiedDate: { isDate: !0 },
    type: { enumType: M.TypeInfo.PlanType },
    userPermissions: { enumType: M.TypeInfo.PlanUserPermissions },
  };
  M.TypeInfo.PlanMetadata.fields = {
    modifiedDate: { isDate: !0 },
    userPermissions: { enumType: M.TypeInfo.PlanUserPermissions },
  };
  M.TypeInfo.TeamCapacity.fields = {
    teamMembers: {
      isArray: !0,
      typeInfo: M.TypeInfo.TeamMemberCapacityIdentityRef,
    },
  };
  M.TypeInfo.TeamIterationAttributes.fields = {
    finishDate: { isDate: !0 },
    startDate: { isDate: !0 },
    timeFrame: { enumType: M.TypeInfo.TimeFrame },
  };
  M.TypeInfo.TeamMemberCapacity.fields = {
    daysOff: { isArray: !0, typeInfo: M.TypeInfo.DateRange },
  };
  M.TypeInfo.TeamMemberCapacityIdentityRef.fields = {
    daysOff: { isArray: !0, typeInfo: M.TypeInfo.DateRange },
  };
  M.TypeInfo.TeamSetting.fields = {
    backlogIteration: { typeInfo: M.TypeInfo.TeamSettingsIteration },
    bugsBehavior: { enumType: M.TypeInfo.BugsBehavior },
    defaultIteration: { typeInfo: M.TypeInfo.TeamSettingsIteration },
    workingDays: { isArray: !0, enumType: uc.TypeInfo.DayOfWeek },
  };
  M.TypeInfo.TeamSettingsDaysOff.fields = {
    daysOff: { isArray: !0, typeInfo: M.TypeInfo.DateRange },
  };
  M.TypeInfo.TeamSettingsDaysOffPatch.fields = {
    daysOff: { isArray: !0, typeInfo: M.TypeInfo.DateRange },
  };
  M.TypeInfo.TeamSettingsIteration.fields = {
    attributes: { typeInfo: M.TypeInfo.TeamIterationAttributes },
  };
  M.TypeInfo.TeamSettingsPatch.fields = {
    bugsBehavior: { enumType: M.TypeInfo.BugsBehavior },
    workingDays: { isArray: !0, enumType: uc.TypeInfo.DayOfWeek },
  };
  M.TypeInfo.TimelineCriteriaStatus.fields = {
    type: { enumType: M.TypeInfo.TimelineCriteriaStatusCode },
  };
  M.TypeInfo.TimelineIterationStatus.fields = {
    type: { enumType: M.TypeInfo.TimelineIterationStatusCode },
  };
  M.TypeInfo.TimelineTeamData.fields = {
    iterations: { isArray: !0, typeInfo: M.TypeInfo.TimelineTeamIteration },
    status: { typeInfo: M.TypeInfo.TimelineTeamStatus },
  };
  M.TypeInfo.TimelineTeamIteration.fields = {
    finishDate: { isDate: !0 },
    startDate: { isDate: !0 },
    status: { typeInfo: M.TypeInfo.TimelineIterationStatus },
  };
  M.TypeInfo.TimelineTeamStatus.fields = {
    type: { enumType: M.TypeInfo.TimelineTeamStatusCode },
  };
  M.TypeInfo.UpdatePlan.fields = { type: { enumType: M.TypeInfo.PlanType } };
});
var dc = x((on) => {
  "use strict";
  var E =
    (on && on.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(on, "__esModule", { value: !0 });
  var aR = qe(),
    Oe = pc(),
    qs = class extends aR.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-Work-api", a);
      }
      getBacklogConfigurations(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = null,
                l = null;
              t && ((u = t.projectId || t.project), (l = t.teamId || t.team));
              let r = { project: u, team: l };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "7799f497-3cb5-4f16-ad4f-5cd06012db64",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Oe.TypeInfo.BacklogConfiguration,
                  !1
                );
                i(d);
              } catch (s) {
                a(s);
              }
            })
          );
        });
      }
      getBacklogLevelWorkItems(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, backlogId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "7c468d96-ab1d-4294-a360-92f07e9ccd98",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getBacklog(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, id: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "a93726f9-7867-4e38-b4f2-0bfafc2f6a94",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Oe.TypeInfo.BacklogLevelConfiguration,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getBacklogs(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = null,
                l = null;
              t && ((u = t.projectId || t.project), (l = t.teamId || t.team));
              let r = { project: u, team: l };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "a93726f9-7867-4e38-b4f2-0bfafc2f6a94",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Oe.TypeInfo.BacklogLevelConfiguration,
                  !0
                );
                i(d);
              } catch (s) {
                a(s);
              }
            })
          );
        });
      }
      getBoardBadge(t, i, a, u) {
        return E(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            E(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              t && ((s = t.projectId || t.project), (n = t.teamId || t.team));
              let o = { project: s, team: n, id: i },
                p = { columnOptions: a, columns: u && u.join(",") };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0120b002-ab6c-4ca0-98cf-a8d7492f865c",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !1);
                l(T);
              } catch (d) {
                r(d);
              }
            })
          );
        });
      }
      getBoardBadgeData(t, i, a, u) {
        return E(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            E(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              t && ((s = t.projectId || t.project), (n = t.teamId || t.team));
              let o = { project: s, team: n, id: i },
                p = { columnOptions: a, columns: u && u.join(",") };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0120b002-ab6c-4ca0-98cf-a8d7492f865c",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !1);
                l(T);
              } catch (d) {
                r(d);
              }
            })
          );
        });
      }
      getColumnSuggestedValues(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "eb7ec5a3-1ba3-4fd1-b834-49a5a387e57d",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getBoardMappingParentItems(t, i, a) {
        return E(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError(
              "childBacklogContextCategoryRefName can not be null or undefined"
            );
          if (a == null)
            throw new TypeError("workitemIds can not be null or undefined");
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              t && ((r = t.projectId || t.project), (s = t.teamId || t.team));
              let n = { project: r, team: s },
                o = {
                  childBacklogContextCategoryRefName: i,
                  workitemIds: a && a.join(","),
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "186abea3-5c35-432f-9e28-7a15b4312a0e",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !0);
                u(h);
              } catch (p) {
                l(p);
              }
            })
          );
        });
      }
      getRowSuggestedValues(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "bb494cc6-a0f5-4c6c-8dca-ea6912e79eb9",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getBoard(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, id: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "23ad19fc-3b8e-4877-8462-b3f92bc06b40",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, Oe.TypeInfo.Board, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getBoards(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = null,
                l = null;
              t && ((u = t.projectId || t.project), (l = t.teamId || t.team));
              let r = { project: u, team: l };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "23ad19fc-3b8e-4877-8462-b3f92bc06b40",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                i(d);
              } catch (s) {
                a(s);
              }
            })
          );
        });
      }
      setBoardOptions(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, id: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "23ad19fc-3b8e-4877-8462-b3f92bc06b40",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, d, d);
                let f = this.formatResponse(c.result, null, !0);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      getBoardUserSettings(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, board: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "b30d9f58-1891-4b0a-b168-c46408f919b0",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      updateBoardUserSettings(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, board: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "b30d9f58-1891-4b0a-b168-c46408f919b0",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      getCapacitiesWithIdentityRefAndTotals(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, iterationId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "work",
                    "74412d15-8c1a-4352-a48d-ef1ed5587d57",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Oe.TypeInfo.TeamCapacity,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getCapacityWithIdentityRef(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              t && ((r = t.projectId || t.project), (s = t.teamId || t.team));
              let n = { project: r, team: s, iterationId: i, teamMemberId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "work",
                    "74412d15-8c1a-4352-a48d-ef1ed5587d57",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Oe.TypeInfo.TeamMemberCapacityIdentityRef,
                  !1
                );
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      replaceCapacitiesWithIdentityRef(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, iterationId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "work",
                    "74412d15-8c1a-4352-a48d-ef1ed5587d57",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  Oe.TypeInfo.TeamMemberCapacityIdentityRef,
                  !0
                );
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      updateCapacityWithIdentityRef(t, i, a, u) {
        return E(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            E(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              i && ((s = i.projectId || i.project), (n = i.teamId || i.team));
              let o = { project: s, team: n, iterationId: a, teamMemberId: u };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "work",
                    "74412d15-8c1a-4352-a48d-ef1ed5587d57",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(
                  f.result,
                  Oe.TypeInfo.TeamMemberCapacityIdentityRef,
                  !1
                );
                l(h);
              } catch (p) {
                r(p);
              }
            })
          );
        });
      }
      getBoardCardRuleSettings(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, board: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "work",
                    "b044a3d9-02ea-49c7-91a1-b730949cc896",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      updateBoardCardRuleSettings(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, board: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "work",
                    "b044a3d9-02ea-49c7-91a1-b730949cc896",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      updateTaskboardCardRuleSettings(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "work",
                    "3f84a8d1-1aab-423e-a94b-6dcbdcca511f",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getBoardCardSettings(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, board: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "work",
                    "07c3b467-bc60-4f05-8e34-599ce288fafc",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      updateBoardCardSettings(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, board: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "work",
                    "07c3b467-bc60-4f05-8e34-599ce288fafc",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      updateTaskboardCardSettings(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "work",
                    "0d63745f-31f3-4cf3-9056-2a064e567637",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getBoardChart(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              t && ((r = t.projectId || t.project), (s = t.teamId || t.team));
              let n = { project: r, team: s, board: i, name: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "45fe888c-239e-49fd-958c-df1a1ab21d97",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !1);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      getBoardCharts(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, board: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "45fe888c-239e-49fd-958c-df1a1ab21d97",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      updateBoardChart(t, i, a, u) {
        return E(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            E(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              i && ((s = i.projectId || i.project), (n = i.teamId || i.team));
              let o = { project: s, team: n, board: a, name: u };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "45fe888c-239e-49fd-958c-df1a1ab21d97",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                l(h);
              } catch (p) {
                r(p);
              }
            })
          );
        });
      }
      getBoardColumns(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, board: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c555d7ff-84e1-47df-9923-a3fe0cd8751b",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Oe.TypeInfo.BoardColumn,
                  !0
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      updateBoardColumns(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, board: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c555d7ff-84e1-47df-9923-a3fe0cd8751b",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  Oe.TypeInfo.BoardColumn,
                  !0
                );
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      getDeliveryTimelineData(t, i, a, u, l) {
        return E(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            E(this, void 0, void 0, function* () {
              let n = { project: t, id: i },
                o = { revision: a, startDate: u, endDate: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "bdd0834e-101f-49f0-a6ae-509f384a12b4",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  Oe.TypeInfo.DeliveryViewData,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getTotalIterationCapacities(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = { project: t, iterationId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "1e385ce0-396b-4273-8171-d64562c18d37",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteTeamIteration(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, id: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c9175577-28a1-4b06-9197-8636af9f64ad",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getTeamIteration(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, id: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c9175577-28a1-4b06-9197-8636af9f64ad",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Oe.TypeInfo.TeamSettingsIteration,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getTeamIterations(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r },
                n = { $timeframe: i };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c9175577-28a1-4b06-9197-8636af9f64ad",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  Oe.TypeInfo.TeamSettingsIteration,
                  !0
                );
                a(f);
              } catch (o) {
                u(o);
              }
            })
          );
        });
      }
      postTeamIteration(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c9175577-28a1-4b06-9197-8636af9f64ad",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  Oe.TypeInfo.TeamSettingsIteration,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      createPlan(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0b42cb47-cd73-4810-ac90-19c9ba147453",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, Oe.TypeInfo.Plan, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deletePlan(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = { project: t, id: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0b42cb47-cd73-4810-ac90-19c9ba147453",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getPlan(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = { project: t, id: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0b42cb47-cd73-4810-ac90-19c9ba147453",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, Oe.TypeInfo.Plan, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getPlans(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0b42cb47-cd73-4810-ac90-19c9ba147453",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, Oe.TypeInfo.Plan, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updatePlan(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = { project: i, id: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0b42cb47-cd73-4810-ac90-19c9ba147453",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(p.result, Oe.TypeInfo.Plan, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getProcessConfiguration(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "f901ba42-86d2-4b0c-89c1-3f86d06daa84",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getBoardRows(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, board: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0863355d-aefd-4d63-8669-984c9b7b0e78",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      updateBoardRows(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, board: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "0863355d-aefd-4d63-8669-984c9b7b0e78",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, t, d);
                let f = this.formatResponse(c.result, null, !0);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      getColumns(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = null,
                l = null;
              t && ((u = t.projectId || t.project), (l = t.teamId || t.team));
              let r = { project: u, team: l };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c6815dbe-8e7e-4ffe-9a79-e83ee712aa92",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !1);
                i(d);
              } catch (s) {
                a(s);
              }
            })
          );
        });
      }
      updateColumns(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c6815dbe-8e7e-4ffe-9a79-e83ee712aa92",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getWorkItemColumns(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, iterationId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "1be23c36-8872-4abc-b57d-402cd6c669d9",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      updateWorkItemColumn(t, i, a, u) {
        return E(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            E(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              i && ((s = i.projectId || i.project), (n = i.teamId || i.team));
              let o = { project: s, team: n, iterationId: a, workItemId: u };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "1be23c36-8872-4abc-b57d-402cd6c669d9",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                l(h);
              } catch (p) {
                r(p);
              }
            })
          );
        });
      }
      getTeamDaysOff(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, iterationId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "2d4faa2e-9150-4cbf-a47a-932b1b4a0773",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  Oe.TypeInfo.TeamSettingsDaysOff,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      updateTeamDaysOff(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, iterationId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "2d4faa2e-9150-4cbf-a47a-932b1b4a0773",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  Oe.TypeInfo.TeamSettingsDaysOff,
                  !1
                );
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      getTeamFieldValues(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = null,
                l = null;
              t && ((u = t.projectId || t.project), (l = t.teamId || t.team));
              let r = { project: u, team: l };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "07ced576-58ed-49e6-9c1e-5cb53ab8bf2a",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !1);
                i(d);
              } catch (s) {
                a(s);
              }
            })
          );
        });
      }
      updateTeamFieldValues(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "07ced576-58ed-49e6-9c1e-5cb53ab8bf2a",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getTeamSettings(t) {
        return E(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            E(this, void 0, void 0, function* () {
              let u = null,
                l = null;
              t && ((u = t.projectId || t.project), (l = t.teamId || t.team));
              let r = { project: u, team: l };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c3c1012b-bea7-49d7-b45e-1664e566f84c",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  Oe.TypeInfo.TeamSetting,
                  !1
                );
                i(d);
              } catch (s) {
                a(s);
              }
            })
          );
        });
      }
      updateTeamSettings(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "c3c1012b-bea7-49d7-b45e-1664e566f84c",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  Oe.TypeInfo.TeamSetting,
                  !1
                );
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getIterationWorkItems(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, iterationId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "5b3ef1a6-d3ab-44cd-bafd-c7f45db850fa",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      reorderBacklogWorkItems(t, i) {
        return E(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            E(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "1c22b714-e7e4-41b9-85e0-56ee13ef55ed",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, null, !0);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      reorderIterationWorkItems(t, i, a) {
        return E(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            E(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, iterationId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "work",
                    "47755db2-d7eb-405a-8c25-675401525fc9",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, null, !0);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
    };
  qs.RESOURCE_AREA_ID = "1d4f49f9-02b9-4e26-b826-2cdb6195f2a9";
  on.WorkApi = qs;
});
var cc = x((S) => {
  "use strict";
  Object.defineProperty(S, "__esModule", { value: !0 });
  var lR;
  (function (e) {
    (e[(e.Fail = 1)] = "Fail"), (e[(e.Omit = 2)] = "Omit");
  })(
    (lR =
      S.ClassificationNodesErrorPolicy ||
      (S.ClassificationNodesErrorPolicy = {}))
  );
  var uR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Reactions = 1)] = "Reactions"),
      (e[(e.RenderedText = 8)] = "RenderedText"),
      (e[(e.RenderedTextOnly = 16)] = "RenderedTextOnly"),
      (e[(e.All = -17)] = "All");
  })((uR = S.CommentExpandOptions || (S.CommentExpandOptions = {})));
  var pR;
  (function (e) {
    (e[(e.Like = 0)] = "Like"),
      (e[(e.Dislike = 1)] = "Dislike"),
      (e[(e.Heart = 2)] = "Heart"),
      (e[(e.Hooray = 3)] = "Hooray"),
      (e[(e.Smile = 4)] = "Smile"),
      (e[(e.Confused = 5)] = "Confused");
  })((pR = S.CommentReactionType || (S.CommentReactionType = {})));
  var dR;
  (function (e) {
    (e[(e.Asc = 1)] = "Asc"), (e[(e.Desc = 2)] = "Desc");
  })((dR = S.CommentSortOrder || (S.CommentSortOrder = {})));
  var cR;
  (function (e) {
    (e[(e.String = 0)] = "String"),
      (e[(e.Integer = 1)] = "Integer"),
      (e[(e.DateTime = 2)] = "DateTime"),
      (e[(e.PlainText = 3)] = "PlainText"),
      (e[(e.Html = 4)] = "Html"),
      (e[(e.TreePath = 5)] = "TreePath"),
      (e[(e.History = 6)] = "History"),
      (e[(e.Double = 7)] = "Double"),
      (e[(e.Guid = 8)] = "Guid"),
      (e[(e.Boolean = 9)] = "Boolean"),
      (e[(e.Identity = 10)] = "Identity"),
      (e[(e.PicklistString = 11)] = "PicklistString"),
      (e[(e.PicklistInteger = 12)] = "PicklistInteger"),
      (e[(e.PicklistDouble = 13)] = "PicklistDouble");
  })((cR = S.FieldType || (S.FieldType = {})));
  var fR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.WorkItem = 1)] = "WorkItem"),
      (e[(e.WorkItemLink = 2)] = "WorkItemLink"),
      (e[(e.Tree = 3)] = "Tree"),
      (e[(e.WorkItemTypeExtension = 4)] = "WorkItemTypeExtension");
  })((fR = S.FieldUsage || (S.FieldUsage = {})));
  var hR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.ExtensionFields = 1)] = "ExtensionFields"),
      (e[(e.IncludeDeleted = 2)] = "IncludeDeleted");
  })((hR = S.GetFieldsExpand || (S.GetFieldsExpand = {})));
  var yR;
  (function (e) {
    (e[(e.WorkItems = 0)] = "WorkItems"),
      (e[(e.LinksOneHopMustContain = 1)] = "LinksOneHopMustContain"),
      (e[(e.LinksOneHopMayContain = 2)] = "LinksOneHopMayContain"),
      (e[(e.LinksOneHopDoesNotContain = 3)] = "LinksOneHopDoesNotContain"),
      (e[(e.LinksRecursiveMustContain = 4)] = "LinksRecursiveMustContain"),
      (e[(e.LinksRecursiveMayContain = 5)] = "LinksRecursiveMayContain"),
      (e[(e.LinksRecursiveDoesNotContain = 6)] =
        "LinksRecursiveDoesNotContain");
  })((yR = S.LinkQueryMode || (S.LinkQueryMode = {})));
  var vR;
  (function (e) {
    (e[(e.NONE = 0)] = "NONE"),
      (e[(e.AND = 1)] = "AND"),
      (e[(e.OR = 2)] = "OR");
  })((vR = S.LogicalOperation || (S.LogicalOperation = {})));
  var mR;
  (function (e) {
    (e[(e.Import = 0)] = "Import"), (e[(e.Validate = 1)] = "Validate");
  })((mR = S.ProvisioningActionType || (S.ProvisioningActionType = {})));
  var gR;
  (function (e) {
    (e[(e.Fail = 1)] = "Fail"), (e[(e.Omit = 2)] = "Omit");
  })((gR = S.QueryErrorPolicy || (S.QueryErrorPolicy = {})));
  var IR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Wiql = 1)] = "Wiql"),
      (e[(e.Clauses = 2)] = "Clauses"),
      (e[(e.All = 3)] = "All"),
      (e[(e.Minimal = 4)] = "Minimal");
  })((IR = S.QueryExpand || (S.QueryExpand = {})));
  var TR;
  (function (e) {
    (e[(e.Doing = 1)] = "Doing"),
      (e[(e.Done = 2)] = "Done"),
      (e[(e.Followed = 3)] = "Followed");
  })((TR = S.QueryOption || (S.QueryOption = {})));
  var RR;
  (function (e) {
    (e[(e.ParentFirst = 0)] = "ParentFirst"),
      (e[(e.ChildFirst = 1)] = "ChildFirst");
  })((RR = S.QueryRecursionOption || (S.QueryRecursionOption = {})));
  var VR;
  (function (e) {
    (e[(e.WorkItem = 1)] = "WorkItem"),
      (e[(e.WorkItemLink = 2)] = "WorkItemLink");
  })((VR = S.QueryResultType || (S.QueryResultType = {})));
  var bR;
  (function (e) {
    (e[(e.Flat = 1)] = "Flat"),
      (e[(e.Tree = 2)] = "Tree"),
      (e[(e.OneHop = 3)] = "OneHop");
  })((bR = S.QueryType || (S.QueryType = {})));
  var DR;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.Fields = 1)] = "Fields");
  })((DR = S.ReportingRevisionsExpand || (S.ReportingRevisionsExpand = {})));
  var wR;
  (function (e) {
    (e[(e.WorkItemType = 0)] = "WorkItemType"),
      (e[(e.GlobalWorkflow = 1)] = "GlobalWorkflow");
  })((wR = S.TemplateType || (S.TemplateType = {})));
  var qR;
  (function (e) {
    (e[(e.Area = 0)] = "Area"), (e[(e.Iteration = 1)] = "Iteration");
  })((qR = S.TreeNodeStructureType || (S.TreeNodeStructureType = {})));
  var PR;
  (function (e) {
    (e[(e.Areas = 0)] = "Areas"), (e[(e.Iterations = 1)] = "Iterations");
  })((PR = S.TreeStructureGroup || (S.TreeStructureGroup = {})));
  var CR;
  (function (e) {
    (e[(e.Fail = 1)] = "Fail"), (e[(e.Omit = 2)] = "Omit");
  })((CR = S.WorkItemErrorPolicy || (S.WorkItemErrorPolicy = {})));
  var jR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Relations = 1)] = "Relations"),
      (e[(e.Fields = 2)] = "Fields"),
      (e[(e.Links = 3)] = "Links"),
      (e[(e.All = 4)] = "All");
  })((jR = S.WorkItemExpand || (S.WorkItemExpand = {})));
  var AR;
  (function (e) {
    (e[(e.Visited = 0)] = "Visited"),
      (e[(e.Edited = 1)] = "Edited"),
      (e[(e.Deleted = 2)] = "Deleted"),
      (e[(e.Restored = 3)] = "Restored");
  })(
    (AR = S.WorkItemRecentActivityType || (S.WorkItemRecentActivityType = {}))
  );
  var OR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.AllowedValues = 1)] = "AllowedValues"),
      (e[(e.DependentFields = 2)] = "DependentFields"),
      (e[(e.All = 3)] = "All");
  })(
    (OR =
      S.WorkItemTypeFieldsExpandLevel || (S.WorkItemTypeFieldsExpandLevel = {}))
  );
  S.TypeInfo = {
    AccountMyWorkResult: {},
    AccountRecentActivityWorkItemModel: {},
    AccountRecentActivityWorkItemModel2: {},
    AccountRecentActivityWorkItemModelBase: {},
    AccountRecentMentionWorkItemModel: {},
    AccountWorkWorkItemModel: {},
    ClassificationNodesErrorPolicy: { enumValues: { fail: 1, omit: 2 } },
    Comment: {},
    CommentExpandOptions: {
      enumValues: {
        none: 0,
        reactions: 1,
        renderedText: 8,
        renderedTextOnly: 16,
        all: -17,
      },
    },
    CommentList: {},
    CommentReaction: {},
    CommentReactionType: {
      enumValues: {
        like: 0,
        dislike: 1,
        heart: 2,
        hooray: 3,
        smile: 4,
        confused: 5,
      },
    },
    CommentSortOrder: { enumValues: { asc: 1, desc: 2 } },
    CommentVersion: {},
    ExternalDeployment: {},
    FieldType: {
      enumValues: {
        string: 0,
        integer: 1,
        dateTime: 2,
        plainText: 3,
        html: 4,
        treePath: 5,
        history: 6,
        double: 7,
        guid: 8,
        boolean: 9,
        identity: 10,
        picklistString: 11,
        picklistInteger: 12,
        picklistDouble: 13,
      },
    },
    FieldUsage: {
      enumValues: {
        none: 0,
        workItem: 1,
        workItemLink: 2,
        tree: 3,
        workItemTypeExtension: 4,
      },
    },
    GetFieldsExpand: {
      enumValues: { none: 0, extensionFields: 1, includeDeleted: 2 },
    },
    LinkQueryMode: {
      enumValues: {
        workItems: 0,
        linksOneHopMustContain: 1,
        linksOneHopMayContain: 2,
        linksOneHopDoesNotContain: 3,
        linksRecursiveMustContain: 4,
        linksRecursiveMayContain: 5,
        linksRecursiveDoesNotContain: 6,
      },
    },
    LogicalOperation: { enumValues: { none: 0, and: 1, or: 2 } },
    ProvisioningActionType: { enumValues: { import: 0, validate: 1 } },
    QueryBatchGetRequest: {},
    QueryErrorPolicy: { enumValues: { fail: 1, omit: 2 } },
    QueryExpand: {
      enumValues: { none: 0, wiql: 1, clauses: 2, all: 3, minimal: 4 },
    },
    QueryHierarchyItem: {},
    QueryHierarchyItemsResult: {},
    QueryOption: { enumValues: { doing: 1, done: 2, followed: 3 } },
    QueryRecursionOption: { enumValues: { parentFirst: 0, childFirst: 1 } },
    QueryResultType: { enumValues: { workItem: 1, workItemLink: 2 } },
    QueryType: { enumValues: { flat: 1, tree: 2, oneHop: 3 } },
    ReportingRevisionsExpand: { enumValues: { none: 0, fields: 1 } },
    TemplateType: { enumValues: { workItemType: 0, globalWorkflow: 1 } },
    TreeNodeStructureType: { enumValues: { area: 0, iteration: 1 } },
    TreeStructureGroup: { enumValues: { areas: 0, iterations: 1 } },
    WorkItemBatchGetRequest: {},
    WorkItemClassificationNode: {},
    WorkItemComment: {},
    WorkItemComments: {},
    WorkItemErrorPolicy: { enumValues: { fail: 1, omit: 2 } },
    WorkItemExpand: {
      enumValues: { none: 0, relations: 1, fields: 2, links: 3, all: 4 },
    },
    WorkItemField: {},
    WorkItemField2: {},
    WorkItemHistory: {},
    WorkItemQueryClause: {},
    WorkItemQueryResult: {},
    WorkItemRecentActivityType: {
      enumValues: { visited: 0, edited: 1, deleted: 2, restored: 3 },
    },
    WorkItemTagDefinition: {},
    WorkItemTypeFieldsExpandLevel: {
      enumValues: { none: 0, allowedValues: 1, dependentFields: 2, all: 3 },
    },
    WorkItemTypeTemplateUpdateModel: {},
    WorkItemUpdate: {},
  };
  S.TypeInfo.AccountMyWorkResult.fields = {
    workItemDetails: {
      isArray: !0,
      typeInfo: S.TypeInfo.AccountWorkWorkItemModel,
    },
  };
  S.TypeInfo.AccountRecentActivityWorkItemModel.fields = {
    activityDate: { isDate: !0 },
    activityType: { enumType: S.TypeInfo.WorkItemRecentActivityType },
    changedDate: { isDate: !0 },
  };
  S.TypeInfo.AccountRecentActivityWorkItemModel2.fields = {
    activityDate: { isDate: !0 },
    activityType: { enumType: S.TypeInfo.WorkItemRecentActivityType },
    changedDate: { isDate: !0 },
  };
  S.TypeInfo.AccountRecentActivityWorkItemModelBase.fields = {
    activityDate: { isDate: !0 },
    activityType: { enumType: S.TypeInfo.WorkItemRecentActivityType },
    changedDate: { isDate: !0 },
  };
  S.TypeInfo.AccountRecentMentionWorkItemModel.fields = {
    mentionedDateField: { isDate: !0 },
  };
  S.TypeInfo.AccountWorkWorkItemModel.fields = { changedDate: { isDate: !0 } };
  S.TypeInfo.Comment.fields = {
    createdDate: { isDate: !0 },
    createdOnBehalfDate: { isDate: !0 },
    modifiedDate: { isDate: !0 },
    reactions: { isArray: !0, typeInfo: S.TypeInfo.CommentReaction },
  };
  S.TypeInfo.CommentList.fields = {
    comments: { isArray: !0, typeInfo: S.TypeInfo.Comment },
  };
  S.TypeInfo.CommentReaction.fields = {
    type: { enumType: S.TypeInfo.CommentReactionType },
  };
  S.TypeInfo.CommentVersion.fields = {
    createdDate: { isDate: !0 },
    createdOnBehalfDate: { isDate: !0 },
    modifiedDate: { isDate: !0 },
  };
  S.TypeInfo.ExternalDeployment.fields = { statusDate: { isDate: !0 } };
  S.TypeInfo.QueryBatchGetRequest.fields = {
    $expand: { enumType: S.TypeInfo.QueryExpand },
    errorPolicy: { enumType: S.TypeInfo.QueryErrorPolicy },
  };
  S.TypeInfo.QueryHierarchyItem.fields = {
    children: { isArray: !0, typeInfo: S.TypeInfo.QueryHierarchyItem },
    clauses: { typeInfo: S.TypeInfo.WorkItemQueryClause },
    createdDate: { isDate: !0 },
    filterOptions: { enumType: S.TypeInfo.LinkQueryMode },
    lastExecutedDate: { isDate: !0 },
    lastModifiedDate: { isDate: !0 },
    linkClauses: { typeInfo: S.TypeInfo.WorkItemQueryClause },
    queryRecursionOption: { enumType: S.TypeInfo.QueryRecursionOption },
    queryType: { enumType: S.TypeInfo.QueryType },
    sourceClauses: { typeInfo: S.TypeInfo.WorkItemQueryClause },
    targetClauses: { typeInfo: S.TypeInfo.WorkItemQueryClause },
  };
  S.TypeInfo.QueryHierarchyItemsResult.fields = {
    value: { isArray: !0, typeInfo: S.TypeInfo.QueryHierarchyItem },
  };
  S.TypeInfo.WorkItemBatchGetRequest.fields = {
    $expand: { enumType: S.TypeInfo.WorkItemExpand },
    asOf: { isDate: !0 },
    errorPolicy: { enumType: S.TypeInfo.WorkItemErrorPolicy },
  };
  S.TypeInfo.WorkItemClassificationNode.fields = {
    children: { isArray: !0, typeInfo: S.TypeInfo.WorkItemClassificationNode },
    structureType: { enumType: S.TypeInfo.TreeNodeStructureType },
  };
  S.TypeInfo.WorkItemComment.fields = { revisedDate: { isDate: !0 } };
  S.TypeInfo.WorkItemComments.fields = {
    comments: { isArray: !0, typeInfo: S.TypeInfo.WorkItemComment },
  };
  S.TypeInfo.WorkItemField.fields = {
    type: { enumType: S.TypeInfo.FieldType },
    usage: { enumType: S.TypeInfo.FieldUsage },
  };
  S.TypeInfo.WorkItemField2.fields = {
    type: { enumType: S.TypeInfo.FieldType },
    usage: { enumType: S.TypeInfo.FieldUsage },
  };
  S.TypeInfo.WorkItemHistory.fields = { revisedDate: { isDate: !0 } };
  S.TypeInfo.WorkItemQueryClause.fields = {
    clauses: { isArray: !0, typeInfo: S.TypeInfo.WorkItemQueryClause },
    logicalOperator: { enumType: S.TypeInfo.LogicalOperation },
  };
  S.TypeInfo.WorkItemQueryResult.fields = {
    asOf: { isDate: !0 },
    queryResultType: { enumType: S.TypeInfo.QueryResultType },
    queryType: { enumType: S.TypeInfo.QueryType },
  };
  S.TypeInfo.WorkItemTagDefinition.fields = { lastUpdated: { isDate: !0 } };
  S.TypeInfo.WorkItemTypeTemplateUpdateModel.fields = {
    actionType: { enumType: S.TypeInfo.ProvisioningActionType },
    templateType: { enumType: S.TypeInfo.TemplateType },
  };
  S.TypeInfo.WorkItemUpdate.fields = { revisedDate: { isDate: !0 } };
});
var fc = x((an) => {
  "use strict";
  var D =
    (an && an.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(an, "__esModule", { value: !0 });
  var UR = qe(),
    de = cc(),
    Ps = class extends UR.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-WorkItemTracking-api", a);
      }
      getAccountMyWorkData(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = {},
                l = { $queryOption: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "def3d688-ddf5-4096-9024-69beea15cdbd",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  de.TypeInfo.AccountMyWorkResult,
                  !1
                );
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getRecentActivityData() {
        return D(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            D(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "1bc988f4-c15f-4072-ad35-497c87e3a909",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(
                  s.result,
                  de.TypeInfo.AccountRecentActivityWorkItemModel2,
                  !0
                );
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getRecentMentions() {
        return D(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            D(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "d60eeb6e-e18c-4478-9e94-a0094e28f41c",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(
                  s.result,
                  de.TypeInfo.AccountRecentMentionWorkItemModel,
                  !0
                );
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getWorkArtifactLinkTypes() {
        return D(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            D(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "1a31de40-e318-41cd-a6c6-881077df52e3",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      queryWorkItemsForArtifactUris(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "a9a9aa7a-8c09-44d3-ad1b-46e855c1e3d3",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      createAttachment(t, i, a, u, l, r) {
        return D(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            D(this, void 0, void 0, function* () {
              let o = { project: l },
                p = { fileName: a, uploadType: u, areaPath: r };
              (t = t || {}), (t["Content-Type"] = "application/octet-stream");
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "e07b5fa4-1499-494d-a496-64b860fd64ff",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  );
                f.additionalHeaders = t;
                let h;
                h = yield this.rest.uploadStream("POST", c, i, f);
                let T = this.formatResponse(h.result, null, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      getAttachmentContent(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: a, id: t },
                n = { fileName: i, download: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "e07b5fa4-1499-494d-a496-64b860fd64ff",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = o.apiVersion,
                  c = this.createAcceptHeader("application/octet-stream", d);
                l((yield this.http.get(p, { Accept: c })).message);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getAttachmentZip(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: a, id: t },
                n = { fileName: i, download: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "e07b5fa4-1499-494d-a496-64b860fd64ff",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = o.apiVersion,
                  c = this.createAcceptHeader("application/zip", d);
                l((yield this.http.get(p, { Accept: c })).message);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getClassificationNodes(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("ids can not be null or undefined");
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { ids: i && i.join(","), $depth: a, errorPolicy: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a70579d1-f53a-48ee-a5be-7be8659023b9",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  de.TypeInfo.WorkItemClassificationNode,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getRootNodes(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { $depth: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a70579d1-f53a-48ee-a5be-7be8659023b9",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  de.TypeInfo.WorkItemClassificationNode,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      createOrUpdateClassificationNode(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: i, structureGroup: a, path: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "5a172953-1b41-49d3-840a-33f79c3ce89f",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  de.TypeInfo.WorkItemClassificationNode,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      deleteClassificationNode(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: t, structureGroup: i, path: a },
                n = { $reclassifyId: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "5a172953-1b41-49d3-840a-33f79c3ce89f",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getClassificationNode(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: t, structureGroup: i, path: a },
                n = { $depth: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "5a172953-1b41-49d3-840a-33f79c3ce89f",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  de.TypeInfo.WorkItemClassificationNode,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      updateClassificationNode(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: i, structureGroup: a, path: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "5a172953-1b41-49d3-840a-33f79c3ce89f",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  de.TypeInfo.WorkItemClassificationNode,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getEngagedUsers(t, i, a, u, l, r) {
        return D(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            D(this, void 0, void 0, function* () {
              let o = {
                  project: t,
                  workItemId: i,
                  commentId: a,
                  reactionType: u,
                },
                p = { $top: l, $skip: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "e33ca5e0-2349-4285-af3d-d72d86781c35",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !0);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      addComment(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: i, workItemId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "608aac0a-32e1-4493-a863-b9cf4566d257",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, de.TypeInfo.Comment, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteComment(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: t, workItemId: i, commentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "608aac0a-32e1-4493-a863-b9cf4566d257",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getComment(t, i, a, u, l) {
        return D(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            D(this, void 0, void 0, function* () {
              let n = { project: t, workItemId: i, commentId: a },
                o = { includeDeleted: u, $expand: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "608aac0a-32e1-4493-a863-b9cf4566d257",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, de.TypeInfo.Comment, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getComments(t, i, a, u, l, r, s) {
        return D(this, void 0, void 0, function* () {
          return new Promise((n, o) =>
            D(this, void 0, void 0, function* () {
              let p = { project: t, workItemId: i },
                d = {
                  $top: a,
                  continuationToken: u,
                  includeDeleted: l,
                  $expand: r,
                  order: s,
                };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "608aac0a-32e1-4493-a863-b9cf4566d257",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.get(f, h);
                let q = this.formatResponse(
                  T.result,
                  de.TypeInfo.CommentList,
                  !1
                );
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      getCommentsBatch(t, i, a, u, l) {
        return D(this, void 0, void 0, function* () {
          if (a == null)
            throw new TypeError("ids can not be null or undefined");
          return new Promise((r, s) =>
            D(this, void 0, void 0, function* () {
              let n = { project: t, workItemId: i },
                o = { ids: a && a.join(","), includeDeleted: u, $expand: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "608aac0a-32e1-4493-a863-b9cf4566d257",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  de.TypeInfo.CommentList,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      updateComment(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: i, workItemId: a, commentId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "608aac0a-32e1-4493-a863-b9cf4566d257",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, de.TypeInfo.Comment, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createCommentReaction(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = {
                project: t,
                workItemId: i,
                commentId: a,
                reactionType: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "f6cb3f27-1028-4851-af96-887e570dc21f",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, null, p);
                let c = this.formatResponse(
                  d.result,
                  de.TypeInfo.CommentReaction,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      deleteCommentReaction(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = {
                project: t,
                workItemId: i,
                commentId: a,
                reactionType: u,
              };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "f6cb3f27-1028-4851-af96-887e570dc21f",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(
                  d.result,
                  de.TypeInfo.CommentReaction,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getCommentReactions(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: t, workItemId: i, commentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "f6cb3f27-1028-4851-af96-887e570dc21f",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  de.TypeInfo.CommentReaction,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getCommentVersion(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: t, workItemId: i, commentId: a, version: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "49e03b34-3be0-42e3-8a5d-e8dfb88ac954",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  de.TypeInfo.CommentVersion,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      getCommentVersions(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: t, workItemId: i, commentId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "49e03b34-3be0-42e3-8a5d-e8dfb88ac954",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  de.TypeInfo.CommentVersion,
                  !0
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createField(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b51fd764-e5c2-4b9b-aaf7-3395cf4bdd94",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  de.TypeInfo.WorkItemField,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteField(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i, fieldNameOrRefName: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b51fd764-e5c2-4b9b-aaf7-3395cf4bdd94",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getField(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i, fieldNameOrRefName: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b51fd764-e5c2-4b9b-aaf7-3395cf4bdd94",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  de.TypeInfo.WorkItemField,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getFields(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: t },
                r = { $expand: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b51fd764-e5c2-4b9b-aaf7-3395cf4bdd94",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  de.TypeInfo.WorkItemField,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      updateField(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: a, fieldNameOrRefName: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b51fd764-e5c2-4b9b-aaf7-3395cf4bdd94",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  de.TypeInfo.WorkItemField,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      migrateProjectsProcess(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "19801631-d4e5-47e9-8166-0330de0ff1e6",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      createQuery(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: i, query: a },
                n = { validateWiqlOnly: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a67d190c-c41f-424b-814d-0e906f659301",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  de.TypeInfo.QueryHierarchyItem,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      deleteQuery(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: t, query: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a67d190c-c41f-424b-814d-0e906f659301",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getQueries(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: t },
                n = { $expand: i, $depth: a, $includeDeleted: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a67d190c-c41f-424b-814d-0e906f659301",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  de.TypeInfo.QueryHierarchyItem,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getQuery(t, i, a, u, l, r) {
        return D(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            D(this, void 0, void 0, function* () {
              let o = { project: t, query: i },
                p = {
                  $expand: a,
                  $depth: u,
                  $includeDeleted: l,
                  $useIsoDateFormat: r,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a67d190c-c41f-424b-814d-0e906f659301",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  de.TypeInfo.QueryHierarchyItem,
                  !1
                );
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      searchQueries(t, i, a, u, l) {
        return D(this, void 0, void 0, function* () {
          if (i == null)
            throw new TypeError("filter can not be null or undefined");
          return new Promise((r, s) =>
            D(this, void 0, void 0, function* () {
              let n = { project: t },
                o = { $filter: i, $top: a, $expand: u, $includeDeleted: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a67d190c-c41f-424b-814d-0e906f659301",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(
                  f.result,
                  de.TypeInfo.QueryHierarchyItemsResult,
                  !1
                );
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      updateQuery(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: i, query: a },
                n = { $undeleteDescendants: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a67d190c-c41f-424b-814d-0e906f659301",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(
                  c.result,
                  de.TypeInfo.QueryHierarchyItem,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getQueriesBatch(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "549816f9-09b0-4e75-9e81-01fbfcd07426",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  de.TypeInfo.QueryHierarchyItem,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      destroyWorkItem(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i, id: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b70d8d39-926c-465e-b927-b1bf0e5ca0e0",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getDeletedWorkItem(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i, id: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b70d8d39-926c-465e-b927-b1bf0e5ca0e0",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getDeletedWorkItems(t, i) {
        return D(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("ids can not be null or undefined");
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i },
                r = { ids: t && t.join(",") };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b70d8d39-926c-465e-b927-b1bf0e5ca0e0",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getDeletedWorkItemShallowReferences(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b70d8d39-926c-465e-b927-b1bf0e5ca0e0",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      restoreWorkItem(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: a, id: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "b70d8d39-926c-465e-b927-b1bf0e5ca0e0",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getRevision(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: u, id: t, revisionNumber: i },
                n = { $expand: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "a00c85a5-80fa-4565-99c3-bcd2181434bb",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getRevisions(t, i, a, u, l) {
        return D(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            D(this, void 0, void 0, function* () {
              let n = { project: l, id: t },
                o = { $top: i, $skip: a, $expand: u };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "a00c85a5-80fa-4565-99c3-bcd2181434bb",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !0);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      sendMail(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "12438500-2f84-4fa7-9f1a-c31871b4959d",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteTag(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: t, tagIdOrName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "bc15bc60-e7a8-43cb-ab01-2106be3983a1",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTag(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: t, tagIdOrName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "bc15bc60-e7a8-43cb-ab01-2106be3983a1",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getTags(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "bc15bc60-e7a8-43cb-ab01-2106be3983a1",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateTag(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: i, tagIdOrName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "bc15bc60-e7a8-43cb-ab01-2106be3983a1",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createTemplate(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              i && ((l = i.projectId || i.project), (r = i.teamId || i.team));
              let s = { project: l, team: r };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "6a90345f-a676-4969-afce-8e163e1d5642",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getTemplates(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r },
                n = { workitemtypename: i };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "6a90345f-a676-4969-afce-8e163e1d5642",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !0);
                a(f);
              } catch (o) {
                u(o);
              }
            })
          );
        });
      }
      deleteTemplate(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, templateId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "fb10264a-8836-48a0-8033-1b0ccd2748d5",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      getTemplate(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = null,
                r = null;
              t && ((l = t.projectId || t.project), (r = t.teamId || t.team));
              let s = { project: l, team: r, templateId: i };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "fb10264a-8836-48a0-8033-1b0ccd2748d5",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                a(c);
              } catch (n) {
                u(n);
              }
            })
          );
        });
      }
      replaceTemplate(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = null,
                s = null;
              i && ((r = i.projectId || i.project), (s = i.teamId || i.team));
              let n = { project: r, team: s, templateId: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "fb10264a-8836-48a0-8033-1b0ccd2748d5",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.replace(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                u(f);
              } catch (o) {
                l(o);
              }
            })
          );
        });
      }
      getUpdate(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: a, id: t, updateNumber: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "6570bf97-d02c-4a91-8d93-3abe9895b1a9",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  de.TypeInfo.WorkItemUpdate,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getUpdates(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: u, id: t },
                n = { $top: i, $skip: a };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "6570bf97-d02c-4a91-8d93-3abe9895b1a9",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  de.TypeInfo.WorkItemUpdate,
                  !0
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      queryByWiql(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              i && ((s = i.projectId || i.project), (n = i.teamId || i.team));
              let o = { project: s, team: n },
                p = { timePrecision: a, $top: u };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "1a9c53f7-f243-4447-b110-35ef023636e4",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.create(c, t, f);
                let T = this.formatResponse(
                  h.result,
                  de.TypeInfo.WorkItemQueryResult,
                  !1
                );
                l(T);
              } catch (d) {
                r(d);
              }
            })
          );
        });
      }
      queryById(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = null,
                n = null;
              i && ((s = i.projectId || i.project), (n = i.teamId || i.team));
              let o = { project: s, team: n, id: t },
                p = { timePrecision: a, $top: u };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "a02355f5-5f8a-4671-8e32-369d23aac83d",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(
                  h.result,
                  de.TypeInfo.WorkItemQueryResult,
                  !1
                );
                l(T);
              } catch (d) {
                r(d);
              }
            })
          );
        });
      }
      getWorkItemIconJson(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { icon: t },
                s = { color: i, v: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "4e1eb4a5-1970-4228-a682-ec48eb2dca30",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getWorkItemIcons() {
        return D(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            D(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "4e1eb4a5-1970-4228-a682-ec48eb2dca30",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      getWorkItemIconSvg(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { icon: t },
                s = { color: i, v: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "4e1eb4a5-1970-4228-a682-ec48eb2dca30",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("image/svg+xml", p);
                u((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getWorkItemIconXaml(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { icon: t },
                s = { color: i, v: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "4e1eb4a5-1970-4228-a682-ec48eb2dca30",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = n.apiVersion,
                  d = this.createAcceptHeader("image/xaml+xml", p);
                u((yield this.http.get(o, { Accept: d })).message);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getReportingLinksByLinkType(t, i, a, u, l) {
        return D(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            D(this, void 0, void 0, function* () {
              let n = { project: t },
                o = {
                  linkTypes: i && i.join(","),
                  types: a && a.join(","),
                  continuationToken: u,
                  startDateTime: l,
                };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "b5b5b6d0-0308-40a1-b3f4-b9bb3c66878f",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getRelationType(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = { relation: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "f5d33bc9-5b49-4a3c-a9bd-f3cd46dd2165",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getRelationTypes() {
        return D(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            D(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "f5d33bc9-5b49-4a3c-a9bd-f3cd46dd2165",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      readReportingRevisionsGet(t, i, a, u, l, r, s, n, o, p, d, c) {
        return D(this, void 0, void 0, function* () {
          return new Promise((f, h) =>
            D(this, void 0, void 0, function* () {
              let T = { project: t },
                q = {
                  fields: i && i.join(","),
                  types: a && a.join(","),
                  continuationToken: u,
                  startDateTime: l,
                  includeIdentityRef: r,
                  includeDeleted: s,
                  includeTagRef: n,
                  includeLatestOnly: o,
                  $expand: p,
                  includeDiscussionChangesOnly: d,
                  $maxPageSize: c,
                };
              try {
                let j = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "f828fe59-dd87-495d-a17c-7a8d6211ca6c",
                    T,
                    q
                  ),
                  F = j.requestUrl,
                  U = this.createRequestOptions(
                    "application/json",
                    j.apiVersion
                  ),
                  z;
                z = yield this.rest.get(F, U);
                let W = this.formatResponse(z.result, null, !1);
                f(W);
              } catch (j) {
                h(j);
              }
            })
          );
        });
      }
      readReportingRevisionsPost(t, i, a, u, l) {
        return D(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            D(this, void 0, void 0, function* () {
              let n = { project: i },
                o = { continuationToken: a, startDateTime: u, $expand: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "f828fe59-dd87-495d-a17c-7a8d6211ca6c",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.create(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      readReportingDiscussions(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: t },
                s = { continuationToken: i, $maxPageSize: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "4a644469-90c5-4fcc-9a9f-be0827d369ec",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      createWorkItem(t, i, a, u, l, r, s, n) {
        return D(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            D(this, void 0, void 0, function* () {
              let d = { project: a, type: u },
                c = {
                  validateOnly: l,
                  bypassRules: r,
                  suppressNotifications: s,
                  $expand: n,
                };
              (t = t || {}),
                (t["Content-Type"] = "application/json-patch+json");
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "62d3d110-0047-428c-ad3c-4fe872c91c74",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  );
                T.additionalHeaders = t;
                let q;
                q = yield this.rest.create(h, i, T);
                let j = this.formatResponse(q.result, null, !1);
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getWorkItemTemplate(t, i, a, u, l) {
        return D(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            D(this, void 0, void 0, function* () {
              let n = { project: t, type: i },
                o = { fields: a, asOf: u, $expand: l };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "62d3d110-0047-428c-ad3c-4fe872c91c74",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      deleteWorkItem(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: i, id: t },
                s = { destroy: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "72c7ddf8-2cdc-4f60-90cd-ab71c14a399b",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getWorkItem(t, i, a, u, l) {
        return D(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            D(this, void 0, void 0, function* () {
              let n = { project: l, id: t },
                o = { fields: i && i.join(","), asOf: a, $expand: u };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "72c7ddf8-2cdc-4f60-90cd-ab71c14a399b",
                    n,
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.get(d, c);
                let h = this.formatResponse(f.result, null, !1);
                r(h);
              } catch (p) {
                s(p);
              }
            })
          );
        });
      }
      getWorkItems(t, i, a, u, l, r) {
        return D(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("ids can not be null or undefined");
          return new Promise((s, n) =>
            D(this, void 0, void 0, function* () {
              let o = { project: r },
                p = {
                  ids: t && t.join(","),
                  fields: i && i.join(","),
                  asOf: a,
                  $expand: u,
                  errorPolicy: l,
                };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "72c7ddf8-2cdc-4f60-90cd-ab71c14a399b",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.get(c, f);
                let T = this.formatResponse(h.result, null, !0);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      updateWorkItem(t, i, a, u, l, r, s, n) {
        return D(this, void 0, void 0, function* () {
          return new Promise((o, p) =>
            D(this, void 0, void 0, function* () {
              let d = { project: u, id: a },
                c = {
                  validateOnly: l,
                  bypassRules: r,
                  suppressNotifications: s,
                  $expand: n,
                };
              (t = t || {}),
                (t["Content-Type"] = "application/json-patch+json");
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "72c7ddf8-2cdc-4f60-90cd-ab71c14a399b",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  );
                T.additionalHeaders = t;
                let q;
                q = yield this.rest.update(h, i, T);
                let j = this.formatResponse(q.result, null, !1);
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      getWorkItemsBatch(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "908509b6-4248-4475-a1cd-829139ba419f",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getWorkItemStateColors(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "0b83df8a-3496-4ddb-ba44-63634f4cda61",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getWorkItemNextStatesOnCheckinAction(t, i) {
        return D(this, void 0, void 0, function* () {
          if (t == null)
            throw new TypeError("ids can not be null or undefined");
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = {},
                r = { ids: t && t.join(","), action: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "afae844b-e2f6-44c2-8053-17b3bb936a40",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !0);
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      getWorkItemTypeCategories(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "9b9f5734-36c8-415e-ba67-f83b45c31408",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getWorkItemTypeCategory(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: t, category: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "9b9f5734-36c8-415e-ba67-f83b45c31408",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getWorkItemTypeColors(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "958fde80-115e-43fb-bd65-749c48057faf",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getWorkItemTypeColorAndIcons(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "f0f8dc62-3975-48ce-8051-f636b68b52e3",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getWorkItemType(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: t, type: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "7c8d7a76-4a09-43e8-b5df-bd792f4ac6aa",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getWorkItemTypes(t) {
        return D(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            D(this, void 0, void 0, function* () {
              let u = { project: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "wit",
                    "7c8d7a76-4a09-43e8-b5df-bd792f4ac6aa",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getWorkItemTypeFieldsWithReferences(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: t, type: i },
                s = { $expand: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "bd293ce5-3d25-4192-8e67-e8092e879efb",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !0);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getWorkItemTypeFieldWithReferences(t, i, a, u) {
        return D(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            D(this, void 0, void 0, function* () {
              let s = { project: t, type: i, field: a },
                n = { $expand: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.3",
                    "wit",
                    "bd293ce5-3d25-4192-8e67-e8092e879efb",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(c.result, null, !1);
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      getWorkItemTypeStates(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: t, type: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "7c9d7a76-4a09-43e8-b5df-bd792f4ac6aa",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      exportWorkItemTypeDefinition(t, i, a) {
        return D(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            D(this, void 0, void 0, function* () {
              let r = { project: t, type: i },
                s = { exportGlobalLists: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "8637ac8b-5eb6-4f90-b3f7-4f2ff576a459",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(d.result, null, !1);
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      updateWorkItemTypeDefinition(t, i) {
        return D(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            D(this, void 0, void 0, function* () {
              let l = { project: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "wit",
                    "8637ac8b-5eb6-4f90-b3f7-4f2ff576a459",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
    };
  Ps.RESOURCE_AREA_ID = "5264459e-e5e0-4bd8-b118-0985e68a4ec5";
  an.WorkItemTrackingApi = Ps;
});
var hc = x(($) => {
  "use strict";
  Object.defineProperty($, "__esModule", { value: !0 });
  var kR;
  (function (e) {
    (e[(e.System = 1)] = "System"),
      (e[(e.Inherited = 2)] = "Inherited"),
      (e[(e.Custom = 3)] = "Custom");
  })((kR = $.CustomizationType || ($.CustomizationType = {})));
  var ER;
  (function (e) {
    (e[(e.String = 1)] = "String"),
      (e[(e.Integer = 2)] = "Integer"),
      (e[(e.DateTime = 3)] = "DateTime"),
      (e[(e.PlainText = 5)] = "PlainText"),
      (e[(e.Html = 7)] = "Html"),
      (e[(e.TreePath = 8)] = "TreePath"),
      (e[(e.History = 9)] = "History"),
      (e[(e.Double = 10)] = "Double"),
      (e[(e.Guid = 11)] = "Guid"),
      (e[(e.Boolean = 12)] = "Boolean"),
      (e[(e.Identity = 13)] = "Identity"),
      (e[(e.PicklistInteger = 14)] = "PicklistInteger"),
      (e[(e.PicklistString = 15)] = "PicklistString"),
      (e[(e.PicklistDouble = 16)] = "PicklistDouble");
  })((ER = $.FieldType || ($.FieldType = {})));
  var SR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.Fields = 1)] = "Fields"),
      (e[(e.CombinedFields = 2)] = "CombinedFields");
  })((SR = $.GetBehaviorsExpand || ($.GetBehaviorsExpand = {})));
  var NR;
  (function (e) {
    (e[(e.None = 0)] = "None"), (e[(e.Projects = 1)] = "Projects");
  })((NR = $.GetProcessExpandLevel || ($.GetProcessExpandLevel = {})));
  var BR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.States = 1)] = "States"),
      (e[(e.Behaviors = 2)] = "Behaviors"),
      (e[(e.Layout = 4)] = "Layout");
  })((BR = $.GetWorkItemTypeExpand || ($.GetWorkItemTypeExpand = {})));
  var MR;
  (function (e) {
    (e[(e.Custom = 1)] = "Custom"),
      (e[(e.History = 2)] = "History"),
      (e[(e.Links = 3)] = "Links"),
      (e[(e.Attachments = 4)] = "Attachments");
  })((MR = $.PageType || ($.PageType = {})));
  var xR;
  (function (e) {
    (e[(e.System = 0)] = "System"),
      (e[(e.Derived = 1)] = "Derived"),
      (e[(e.Custom = 2)] = "Custom");
  })((xR = $.ProcessClass || ($.ProcessClass = {})));
  var _R;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.AllowedValues = 1)] = "AllowedValues"),
      (e[(e.All = 2)] = "All");
  })(
    (_R =
      $.ProcessWorkItemTypeFieldsExpandLevel ||
      ($.ProcessWorkItemTypeFieldsExpandLevel = {}))
  );
  var GR;
  (function (e) {
    (e[(e.MakeRequired = 1)] = "MakeRequired"),
      (e[(e.MakeReadOnly = 2)] = "MakeReadOnly"),
      (e[(e.SetDefaultValue = 3)] = "SetDefaultValue"),
      (e[(e.SetDefaultFromClock = 4)] = "SetDefaultFromClock"),
      (e[(e.SetDefaultFromCurrentUser = 5)] = "SetDefaultFromCurrentUser"),
      (e[(e.SetDefaultFromField = 6)] = "SetDefaultFromField"),
      (e[(e.CopyValue = 7)] = "CopyValue"),
      (e[(e.CopyFromClock = 8)] = "CopyFromClock"),
      (e[(e.CopyFromCurrentUser = 9)] = "CopyFromCurrentUser"),
      (e[(e.CopyFromField = 10)] = "CopyFromField"),
      (e[(e.SetValueToEmpty = 11)] = "SetValueToEmpty"),
      (e[(e.CopyFromServerClock = 12)] = "CopyFromServerClock"),
      (e[(e.CopyFromServerCurrentUser = 13)] = "CopyFromServerCurrentUser"),
      (e[(e.HideTargetField = 14)] = "HideTargetField"),
      (e[(e.DisallowValue = 15)] = "DisallowValue");
  })((GR = $.RuleActionType || ($.RuleActionType = {})));
  var FR;
  (function (e) {
    (e[(e.When = 1)] = "When"),
      (e[(e.WhenNot = 2)] = "WhenNot"),
      (e[(e.WhenChanged = 3)] = "WhenChanged"),
      (e[(e.WhenNotChanged = 4)] = "WhenNotChanged"),
      (e[(e.WhenWas = 5)] = "WhenWas"),
      (e[(e.WhenStateChangedTo = 6)] = "WhenStateChangedTo"),
      (e[(e.WhenStateChangedFromAndTo = 7)] = "WhenStateChangedFromAndTo"),
      (e[(e.WhenWorkItemIsCreated = 8)] = "WhenWorkItemIsCreated"),
      (e[(e.WhenValueIsDefined = 9)] = "WhenValueIsDefined"),
      (e[(e.WhenValueIsNotDefined = 10)] = "WhenValueIsNotDefined"),
      (e[(e.WhenCurrentUserIsMemberOfGroup = 11)] =
        "WhenCurrentUserIsMemberOfGroup"),
      (e[(e.WhenCurrentUserIsNotMemberOfGroup = 12)] =
        "WhenCurrentUserIsNotMemberOfGroup");
  })((FR = $.RuleConditionType || ($.RuleConditionType = {})));
  var LR;
  (function (e) {
    (e[(e.System = 0)] = "System"),
      (e[(e.Derived = 1)] = "Derived"),
      (e[(e.Custom = 2)] = "Custom");
  })((LR = $.WorkItemTypeClass || ($.WorkItemTypeClass = {})));
  $.TypeInfo = {
    CreateProcessRuleRequest: {},
    CustomizationType: { enumValues: { system: 1, inherited: 2, custom: 3 } },
    FieldModel: {},
    FieldType: {
      enumValues: {
        string: 1,
        integer: 2,
        dateTime: 3,
        plainText: 5,
        html: 7,
        treePath: 8,
        history: 9,
        double: 10,
        guid: 11,
        boolean: 12,
        identity: 13,
        picklistInteger: 14,
        picklistString: 15,
        picklistDouble: 16,
      },
    },
    FormLayout: {},
    GetBehaviorsExpand: {
      enumValues: { none: 0, fields: 1, combinedFields: 2 },
    },
    GetProcessExpandLevel: { enumValues: { none: 0, projects: 1 } },
    GetWorkItemTypeExpand: {
      enumValues: { none: 0, states: 1, behaviors: 2, layout: 4 },
    },
    Page: {},
    PageType: {
      enumValues: { custom: 1, history: 2, links: 3, attachments: 4 },
    },
    ProcessBehavior: {},
    ProcessClass: { enumValues: { system: 0, derived: 1, custom: 2 } },
    ProcessInfo: {},
    ProcessModel: {},
    ProcessProperties: {},
    ProcessRule: {},
    ProcessWorkItemType: {},
    ProcessWorkItemTypeField: {},
    ProcessWorkItemTypeFieldsExpandLevel: {
      enumValues: { none: 0, allowedValues: 1, all: 2 },
    },
    RuleAction: {},
    RuleActionType: {
      enumValues: {
        makeRequired: 1,
        makeReadOnly: 2,
        setDefaultValue: 3,
        setDefaultFromClock: 4,
        setDefaultFromCurrentUser: 5,
        setDefaultFromField: 6,
        copyValue: 7,
        copyFromClock: 8,
        copyFromCurrentUser: 9,
        copyFromField: 10,
        setValueToEmpty: 11,
        copyFromServerClock: 12,
        copyFromServerCurrentUser: 13,
        hideTargetField: 14,
        disallowValue: 15,
      },
    },
    RuleCondition: {},
    RuleConditionType: {
      enumValues: {
        when: 1,
        whenNot: 2,
        whenChanged: 3,
        whenNotChanged: 4,
        whenWas: 5,
        whenStateChangedTo: 6,
        whenStateChangedFromAndTo: 7,
        whenWorkItemIsCreated: 8,
        whenValueIsDefined: 9,
        whenValueIsNotDefined: 10,
        whenCurrentUserIsMemberOfGroup: 11,
        whenCurrentUserIsNotMemberOfGroup: 12,
      },
    },
    UpdateProcessRuleRequest: {},
    WorkItemStateResultModel: {},
    WorkItemTypeClass: { enumValues: { system: 0, derived: 1, custom: 2 } },
    WorkItemTypeModel: {},
  };
  $.TypeInfo.CreateProcessRuleRequest.fields = {
    actions: { isArray: !0, typeInfo: $.TypeInfo.RuleAction },
    conditions: { isArray: !0, typeInfo: $.TypeInfo.RuleCondition },
  };
  $.TypeInfo.FieldModel.fields = { type: { enumType: $.TypeInfo.FieldType } };
  $.TypeInfo.FormLayout.fields = {
    pages: { isArray: !0, typeInfo: $.TypeInfo.Page },
  };
  $.TypeInfo.Page.fields = { pageType: { enumType: $.TypeInfo.PageType } };
  $.TypeInfo.ProcessBehavior.fields = {
    customization: { enumType: $.TypeInfo.CustomizationType },
  };
  $.TypeInfo.ProcessInfo.fields = {
    customizationType: { enumType: $.TypeInfo.CustomizationType },
  };
  $.TypeInfo.ProcessModel.fields = {
    properties: { typeInfo: $.TypeInfo.ProcessProperties },
  };
  $.TypeInfo.ProcessProperties.fields = {
    class: { enumType: $.TypeInfo.ProcessClass },
  };
  $.TypeInfo.ProcessRule.fields = {
    actions: { isArray: !0, typeInfo: $.TypeInfo.RuleAction },
    conditions: { isArray: !0, typeInfo: $.TypeInfo.RuleCondition },
    customizationType: { enumType: $.TypeInfo.CustomizationType },
  };
  $.TypeInfo.ProcessWorkItemType.fields = {
    customization: { enumType: $.TypeInfo.CustomizationType },
    layout: { typeInfo: $.TypeInfo.FormLayout },
    states: { isArray: !0, typeInfo: $.TypeInfo.WorkItemStateResultModel },
  };
  $.TypeInfo.ProcessWorkItemTypeField.fields = {
    customization: { enumType: $.TypeInfo.CustomizationType },
    type: { enumType: $.TypeInfo.FieldType },
  };
  $.TypeInfo.RuleAction.fields = {
    actionType: { enumType: $.TypeInfo.RuleActionType },
  };
  $.TypeInfo.RuleCondition.fields = {
    conditionType: { enumType: $.TypeInfo.RuleConditionType },
  };
  $.TypeInfo.UpdateProcessRuleRequest.fields = {
    actions: { isArray: !0, typeInfo: $.TypeInfo.RuleAction },
    conditions: { isArray: !0, typeInfo: $.TypeInfo.RuleCondition },
  };
  $.TypeInfo.WorkItemStateResultModel.fields = {
    customizationType: { enumType: $.TypeInfo.CustomizationType },
  };
  $.TypeInfo.WorkItemTypeModel.fields = {
    class: { enumType: $.TypeInfo.WorkItemTypeClass },
    layout: { typeInfo: $.TypeInfo.FormLayout },
    states: { isArray: !0, typeInfo: $.TypeInfo.WorkItemStateResultModel },
  };
});
var yc = x((ln) => {
  "use strict";
  var k =
    (ln && ln.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(ln, "__esModule", { value: !0 });
  var WR = qe(),
    ve = hc(),
    Cs = class extends WR.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-WorkItemTracking-api", a);
      }
      createProcessBehavior(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "d1800200-f184-4e75-a5f2-ad0b04b4373e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  ve.TypeInfo.ProcessBehavior,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteProcessBehavior(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t, behaviorRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "d1800200-f184-4e75-a5f2-ad0b04b4373e",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getProcessBehavior(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, behaviorRefName: i },
                s = { $expand: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "d1800200-f184-4e75-a5f2-ad0b04b4373e",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  ve.TypeInfo.ProcessBehavior,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getProcessBehaviors(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t },
                r = { $expand: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "d1800200-f184-4e75-a5f2-ad0b04b4373e",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.ProcessBehavior,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      updateProcessBehavior(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, behaviorRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "d1800200-f184-4e75-a5f2-ad0b04b4373e",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.ProcessBehavior,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createControlInGroup(t, i, a, u) {
        return k(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            k(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, groupId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "1f59b363-a2d0-4b7e-9bc6-eb9f5f3f0e58",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      moveControlToGroup(t, i, a, u, l, r) {
        return k(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            k(this, void 0, void 0, function* () {
              let o = { processId: i, witRefName: a, groupId: u, controlId: l },
                p = { removeFromGroupId: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "1f59b363-a2d0-4b7e-9bc6-eb9f5f3f0e58",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.replace(c, t, f);
                let T = this.formatResponse(h.result, null, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      removeControlFromGroup(t, i, a, u) {
        return k(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            k(this, void 0, void 0, function* () {
              let s = { processId: t, witRefName: i, groupId: a, controlId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "1f59b363-a2d0-4b7e-9bc6-eb9f5f3f0e58",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateControl(t, i, a, u, l) {
        return k(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            k(this, void 0, void 0, function* () {
              let n = { processId: i, witRefName: a, groupId: u, controlId: l };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "1f59b363-a2d0-4b7e-9bc6-eb9f5f3f0e58",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      addFieldToWorkItemType(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "bc0ad8dc-e3f3-46b0-b06c-5bf861793196",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.ProcessWorkItemTypeField,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getAllWorkItemTypeFields(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "bc0ad8dc-e3f3-46b0-b06c-5bf861793196",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ve.TypeInfo.ProcessWorkItemTypeField,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getWorkItemTypeField(t, i, a, u) {
        return k(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            k(this, void 0, void 0, function* () {
              let s = { processId: t, witRefName: i, fieldRefName: a },
                n = { $expand: u };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "bc0ad8dc-e3f3-46b0-b06c-5bf861793196",
                    s,
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.get(p, d);
                let f = this.formatResponse(
                  c.result,
                  ve.TypeInfo.ProcessWorkItemTypeField,
                  !1
                );
                l(f);
              } catch (o) {
                r(o);
              }
            })
          );
        });
      }
      removeWorkItemTypeField(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, fieldRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "bc0ad8dc-e3f3-46b0-b06c-5bf861793196",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateWorkItemTypeField(t, i, a, u) {
        return k(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            k(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, fieldRefName: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "bc0ad8dc-e3f3-46b0-b06c-5bf861793196",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  ve.TypeInfo.ProcessWorkItemTypeField,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      addGroup(t, i, a, u, l) {
        return k(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            k(this, void 0, void 0, function* () {
              let n = { processId: i, witRefName: a, pageId: u, sectionId: l };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "766e44e1-36a8-41d7-9050-c343ff02f7a5",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      moveGroupToPage(t, i, a, u, l, r, s, n) {
        return k(this, void 0, void 0, function* () {
          if (s == null)
            throw new TypeError(
              "removeFromPageId can not be null or undefined"
            );
          if (n == null)
            throw new TypeError(
              "removeFromSectionId can not be null or undefined"
            );
          return new Promise((o, p) =>
            k(this, void 0, void 0, function* () {
              let d = {
                  processId: i,
                  witRefName: a,
                  pageId: u,
                  sectionId: l,
                  groupId: r,
                },
                c = { removeFromPageId: s, removeFromSectionId: n };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "766e44e1-36a8-41d7-9050-c343ff02f7a5",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.replace(h, t, T);
                let j = this.formatResponse(q.result, null, !1);
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      moveGroupToSection(t, i, a, u, l, r, s) {
        return k(this, void 0, void 0, function* () {
          if (s == null)
            throw new TypeError(
              "removeFromSectionId can not be null or undefined"
            );
          return new Promise((n, o) =>
            k(this, void 0, void 0, function* () {
              let p = {
                  processId: i,
                  witRefName: a,
                  pageId: u,
                  sectionId: l,
                  groupId: r,
                },
                d = { removeFromSectionId: s };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "766e44e1-36a8-41d7-9050-c343ff02f7a5",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.replace(f, t, h);
                let q = this.formatResponse(T.result, null, !1);
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      removeGroup(t, i, a, u, l) {
        return k(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            k(this, void 0, void 0, function* () {
              let n = {
                processId: t,
                witRefName: i,
                pageId: a,
                sectionId: u,
                groupId: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "766e44e1-36a8-41d7-9050-c343ff02f7a5",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      updateGroup(t, i, a, u, l, r) {
        return k(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            k(this, void 0, void 0, function* () {
              let o = {
                processId: i,
                witRefName: a,
                pageId: u,
                sectionId: l,
                groupId: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "766e44e1-36a8-41d7-9050-c343ff02f7a5",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      getFormLayout(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "fa8646eb-43cd-4b71-9564-40106fd63e40",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ve.TypeInfo.FormLayout,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      createList(t) {
        return k(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            k(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "01e15468-e27c-4e20-a974-bd957dcccebc",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteList(t) {
        return k(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            k(this, void 0, void 0, function* () {
              let u = { listId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "01e15468-e27c-4e20-a974-bd957dcccebc",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getList(t) {
        return k(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            k(this, void 0, void 0, function* () {
              let u = { listId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "01e15468-e27c-4e20-a974-bd957dcccebc",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getListsMetadata() {
        return k(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            k(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "01e15468-e27c-4e20-a974-bd957dcccebc",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      updateList(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { listId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "01e15468-e27c-4e20-a974-bd957dcccebc",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addPage(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "1cc7b29f-6697-4d9d-b0a1-2650d3e1d584",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, ve.TypeInfo.Page, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      removePage(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, pageId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "1cc7b29f-6697-4d9d-b0a1-2650d3e1d584",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updatePage(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "1cc7b29f-6697-4d9d-b0a1-2650d3e1d584",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, ve.TypeInfo.Page, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createNewProcess(t) {
        return k(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            k(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "02cc6a73-5cfb-427d-8c8e-b49fb086e8af",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(
                  n.result,
                  ve.TypeInfo.ProcessInfo,
                  !1
                );
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteProcessById(t) {
        return k(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            k(this, void 0, void 0, function* () {
              let u = { processTypeId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "02cc6a73-5cfb-427d-8c8e-b49fb086e8af",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      editProcess(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processTypeId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "02cc6a73-5cfb-427d-8c8e-b49fb086e8af",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  ve.TypeInfo.ProcessInfo,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getListOfProcesses(t) {
        return k(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            k(this, void 0, void 0, function* () {
              let u = {},
                l = { $expand: t };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "02cc6a73-5cfb-427d-8c8e-b49fb086e8af",
                    u,
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ve.TypeInfo.ProcessInfo,
                  !0
                );
                i(p);
              } catch (r) {
                a(r);
              }
            })
          );
        });
      }
      getProcessByItsId(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processTypeId: t },
                r = { $expand: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "02cc6a73-5cfb-427d-8c8e-b49fb086e8af",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.ProcessInfo,
                  !1
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      addProcessWorkItemTypeRule(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "76fe3432-d825-479d-a5f6-983bbb78b4f3",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.ProcessRule,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteProcessWorkItemTypeRule(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, ruleId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "76fe3432-d825-479d-a5f6-983bbb78b4f3",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getProcessWorkItemTypeRule(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, ruleId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "76fe3432-d825-479d-a5f6-983bbb78b4f3",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.ProcessRule,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getProcessWorkItemTypeRules(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "76fe3432-d825-479d-a5f6-983bbb78b4f3",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ve.TypeInfo.ProcessRule,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateProcessWorkItemTypeRule(t, i, a, u) {
        return k(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            k(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, ruleId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "76fe3432-d825-479d-a5f6-983bbb78b4f3",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  ve.TypeInfo.ProcessRule,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createStateDefinition(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "31015d57-2dff-4a46-adb3-2fb4ee3dcec9",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.WorkItemStateResultModel,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteStateDefinition(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, stateId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "31015d57-2dff-4a46-adb3-2fb4ee3dcec9",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getStateDefinition(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, stateId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "31015d57-2dff-4a46-adb3-2fb4ee3dcec9",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.WorkItemStateResultModel,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getStateDefinitions(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "31015d57-2dff-4a46-adb3-2fb4ee3dcec9",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ve.TypeInfo.WorkItemStateResultModel,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      hideStateDefinition(t, i, a, u) {
        return k(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            k(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, stateId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "31015d57-2dff-4a46-adb3-2fb4ee3dcec9",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  ve.TypeInfo.WorkItemStateResultModel,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateStateDefinition(t, i, a, u) {
        return k(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            k(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, stateId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "31015d57-2dff-4a46-adb3-2fb4ee3dcec9",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(
                  d.result,
                  ve.TypeInfo.WorkItemStateResultModel,
                  !1
                );
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      deleteSystemControl(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, controlId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "ff9a3d2c-32b7-4c6c-991c-d5a251fb9098",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !0);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getSystemControls(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "ff9a3d2c-32b7-4c6c-991c-d5a251fb9098",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateSystemControl(t, i, a, u) {
        return k(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            k(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, controlId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "ff9a3d2c-32b7-4c6c-991c-d5a251fb9098",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      createProcessWorkItemType(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "e2e9d1a6-432d-4062-8870-bfcb8c324ad7",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  ve.TypeInfo.ProcessWorkItemType,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteProcessWorkItemType(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "e2e9d1a6-432d-4062-8870-bfcb8c324ad7",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getProcessWorkItemType(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i },
                s = { $expand: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "e2e9d1a6-432d-4062-8870-bfcb8c324ad7",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  ve.TypeInfo.ProcessWorkItemType,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getProcessWorkItemTypes(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t },
                r = { $expand: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "e2e9d1a6-432d-4062-8870-bfcb8c324ad7",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.ProcessWorkItemType,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      updateProcessWorkItemType(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.2",
                    "processes",
                    "e2e9d1a6-432d-4062-8870-bfcb8c324ad7",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ve.TypeInfo.ProcessWorkItemType,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addBehaviorToWorkItemType(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, witRefNameForBehaviors: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "6d765a2e-4e1b-4b11-be93-f953be676024",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBehaviorForWorkItemType(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = {
                processId: t,
                witRefNameForBehaviors: i,
                behaviorRefName: a,
              };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "6d765a2e-4e1b-4b11-be93-f953be676024",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBehaviorsForWorkItemType(t, i) {
        return k(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            k(this, void 0, void 0, function* () {
              let l = { processId: t, witRefNameForBehaviors: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "6d765a2e-4e1b-4b11-be93-f953be676024",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      removeBehaviorFromWorkItemType(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = {
                processId: t,
                witRefNameForBehaviors: i,
                behaviorRefName: a,
              };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "6d765a2e-4e1b-4b11-be93-f953be676024",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateBehaviorToWorkItemType(t, i, a) {
        return k(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            k(this, void 0, void 0, function* () {
              let r = { processId: i, witRefNameForBehaviors: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processes",
                    "6d765a2e-4e1b-4b11-be93-f953be676024",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
    };
  Cs.RESOURCE_AREA_ID = "5264459e-e5e0-4bd8-b118-0985e68a4ec5";
  ln.WorkItemTrackingProcessApi = Cs;
});
var vc = x((je) => {
  "use strict";
  Object.defineProperty(je, "__esModule", { value: !0 });
  var $R;
  (function (e) {
    (e[(e.String = 1)] = "String"),
      (e[(e.Integer = 2)] = "Integer"),
      (e[(e.DateTime = 3)] = "DateTime"),
      (e[(e.PlainText = 5)] = "PlainText"),
      (e[(e.Html = 7)] = "Html"),
      (e[(e.TreePath = 8)] = "TreePath"),
      (e[(e.History = 9)] = "History"),
      (e[(e.Double = 10)] = "Double"),
      (e[(e.Guid = 11)] = "Guid"),
      (e[(e.Boolean = 12)] = "Boolean"),
      (e[(e.Identity = 13)] = "Identity"),
      (e[(e.PicklistInteger = 14)] = "PicklistInteger"),
      (e[(e.PicklistString = 15)] = "PicklistString"),
      (e[(e.PicklistDouble = 16)] = "PicklistDouble");
  })(($R = je.FieldType || (je.FieldType = {})));
  var HR;
  (function (e) {
    (e[(e.None = 0)] = "None"),
      (e[(e.States = 1)] = "States"),
      (e[(e.Behaviors = 2)] = "Behaviors"),
      (e[(e.Layout = 4)] = "Layout");
  })((HR = je.GetWorkItemTypeExpand || (je.GetWorkItemTypeExpand = {})));
  var zR;
  (function (e) {
    (e[(e.Custom = 1)] = "Custom"),
      (e[(e.History = 2)] = "History"),
      (e[(e.Links = 3)] = "Links"),
      (e[(e.Attachments = 4)] = "Attachments");
  })((zR = je.PageType || (je.PageType = {})));
  var QR;
  (function (e) {
    (e[(e.System = 0)] = "System"),
      (e[(e.Derived = 1)] = "Derived"),
      (e[(e.Custom = 2)] = "Custom");
  })((QR = je.WorkItemTypeClass || (je.WorkItemTypeClass = {})));
  je.TypeInfo = {
    FieldModel: {},
    FieldType: {
      enumValues: {
        string: 1,
        integer: 2,
        dateTime: 3,
        plainText: 5,
        html: 7,
        treePath: 8,
        history: 9,
        double: 10,
        guid: 11,
        boolean: 12,
        identity: 13,
        picklistInteger: 14,
        picklistString: 15,
        picklistDouble: 16,
      },
    },
    FormLayout: {},
    GetWorkItemTypeExpand: {
      enumValues: { none: 0, states: 1, behaviors: 2, layout: 4 },
    },
    Page: {},
    PageType: {
      enumValues: { custom: 1, history: 2, links: 3, attachments: 4 },
    },
    WorkItemTypeClass: { enumValues: { system: 0, derived: 1, custom: 2 } },
    WorkItemTypeFieldModel: {},
    WorkItemTypeFieldModel2: {},
    WorkItemTypeModel: {},
  };
  je.TypeInfo.FieldModel.fields = { type: { enumType: je.TypeInfo.FieldType } };
  je.TypeInfo.FormLayout.fields = {
    pages: { isArray: !0, typeInfo: je.TypeInfo.Page },
  };
  je.TypeInfo.Page.fields = { pageType: { enumType: je.TypeInfo.PageType } };
  je.TypeInfo.WorkItemTypeFieldModel.fields = {
    type: { enumType: je.TypeInfo.FieldType },
  };
  je.TypeInfo.WorkItemTypeFieldModel2.fields = {
    type: { enumType: je.TypeInfo.FieldType },
  };
  je.TypeInfo.WorkItemTypeModel.fields = {
    class: { enumType: je.TypeInfo.WorkItemTypeClass },
    layout: { typeInfo: je.TypeInfo.FormLayout },
  };
});
var mc = x((un) => {
  "use strict";
  var G =
    (un && un.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(un, "__esModule", { value: !0 });
  var JR = qe(),
    ut = vc(),
    js = class extends JR.ClientApiBase {
      constructor(t, i, a) {
        super(t, i, "node-WorkItemTracking-api", a);
      }
      createBehavior(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "47a651f4-fb70-43bf-b96b-7c0ba947142b",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteBehavior(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: t, behaviorId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "47a651f4-fb70-43bf-b96b-7c0ba947142b",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getBehavior(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: t, behaviorId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "47a651f4-fb70-43bf-b96b-7c0ba947142b",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getBehaviors(t) {
        return G(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            G(this, void 0, void 0, function* () {
              let u = { processId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "47a651f4-fb70-43bf-b96b-7c0ba947142b",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !0);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      replaceBehavior(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, behaviorId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "47a651f4-fb70-43bf-b96b-7c0ba947142b",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.replace(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addControlToGroup(t, i, a, u) {
        return G(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            G(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, groupId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "e2e3166a-627a-4e9b-85b2-d6a097bbd731",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.create(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      editControl(t, i, a, u, l) {
        return G(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            G(this, void 0, void 0, function* () {
              let n = { processId: i, witRefName: a, groupId: u, controlId: l };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "e2e3166a-627a-4e9b-85b2-d6a097bbd731",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.update(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      removeControlFromGroup(t, i, a, u) {
        return G(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            G(this, void 0, void 0, function* () {
              let s = { processId: t, witRefName: i, groupId: a, controlId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "e2e3166a-627a-4e9b-85b2-d6a097bbd731",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.del(o, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      setControlInGroup(t, i, a, u, l, r) {
        return G(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            G(this, void 0, void 0, function* () {
              let o = { processId: i, witRefName: a, groupId: u, controlId: l },
                p = { removeFromGroupId: r };
              try {
                let d = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "e2e3166a-627a-4e9b-85b2-d6a097bbd731",
                    o,
                    p
                  ),
                  c = d.requestUrl,
                  f = this.createRequestOptions(
                    "application/json",
                    d.apiVersion
                  ),
                  h;
                h = yield this.rest.replace(c, t, f);
                let T = this.formatResponse(h.result, null, !1);
                s(T);
              } catch (d) {
                n(d);
              }
            })
          );
        });
      }
      createField(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "f36c66c7-911d-4163-8938-d3c5d0d7f5aa",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  ut.TypeInfo.FieldModel,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      updateField(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "f36c66c7-911d-4163-8938-d3c5d0d7f5aa",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.update(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  ut.TypeInfo.FieldModel,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addGroup(t, i, a, u, l) {
        return G(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            G(this, void 0, void 0, function* () {
              let n = { processId: i, witRefName: a, pageId: u, sectionId: l };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "2617828b-e850-4375-a92a-04855704d4c3",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.create(p, t, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      editGroup(t, i, a, u, l, r) {
        return G(this, void 0, void 0, function* () {
          return new Promise((s, n) =>
            G(this, void 0, void 0, function* () {
              let o = {
                processId: i,
                witRefName: a,
                pageId: u,
                sectionId: l,
                groupId: r,
              };
              try {
                let p = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "2617828b-e850-4375-a92a-04855704d4c3",
                    o
                  ),
                  d = p.requestUrl,
                  c = this.createRequestOptions(
                    "application/json",
                    p.apiVersion
                  ),
                  f;
                f = yield this.rest.update(d, t, c);
                let h = this.formatResponse(f.result, null, !1);
                s(h);
              } catch (p) {
                n(p);
              }
            })
          );
        });
      }
      removeGroup(t, i, a, u, l) {
        return G(this, void 0, void 0, function* () {
          return new Promise((r, s) =>
            G(this, void 0, void 0, function* () {
              let n = {
                processId: t,
                witRefName: i,
                pageId: a,
                sectionId: u,
                groupId: l,
              };
              try {
                let o = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "2617828b-e850-4375-a92a-04855704d4c3",
                    n
                  ),
                  p = o.requestUrl,
                  d = this.createRequestOptions(
                    "application/json",
                    o.apiVersion
                  ),
                  c;
                c = yield this.rest.del(p, d);
                let f = this.formatResponse(c.result, null, !1);
                r(f);
              } catch (o) {
                s(o);
              }
            })
          );
        });
      }
      setGroupInPage(t, i, a, u, l, r, s, n) {
        return G(this, void 0, void 0, function* () {
          if (s == null)
            throw new TypeError(
              "removeFromPageId can not be null or undefined"
            );
          if (n == null)
            throw new TypeError(
              "removeFromSectionId can not be null or undefined"
            );
          return new Promise((o, p) =>
            G(this, void 0, void 0, function* () {
              let d = {
                  processId: i,
                  witRefName: a,
                  pageId: u,
                  sectionId: l,
                  groupId: r,
                },
                c = { removeFromPageId: s, removeFromSectionId: n };
              try {
                let f = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "2617828b-e850-4375-a92a-04855704d4c3",
                    d,
                    c
                  ),
                  h = f.requestUrl,
                  T = this.createRequestOptions(
                    "application/json",
                    f.apiVersion
                  ),
                  q;
                q = yield this.rest.replace(h, t, T);
                let j = this.formatResponse(q.result, null, !1);
                o(j);
              } catch (f) {
                p(f);
              }
            })
          );
        });
      }
      setGroupInSection(t, i, a, u, l, r, s) {
        return G(this, void 0, void 0, function* () {
          if (s == null)
            throw new TypeError(
              "removeFromSectionId can not be null or undefined"
            );
          return new Promise((n, o) =>
            G(this, void 0, void 0, function* () {
              let p = {
                  processId: i,
                  witRefName: a,
                  pageId: u,
                  sectionId: l,
                  groupId: r,
                },
                d = { removeFromSectionId: s };
              try {
                let c = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "2617828b-e850-4375-a92a-04855704d4c3",
                    p,
                    d
                  ),
                  f = c.requestUrl,
                  h = this.createRequestOptions(
                    "application/json",
                    c.apiVersion
                  ),
                  T;
                T = yield this.rest.replace(f, t, h);
                let q = this.formatResponse(T.result, null, !1);
                n(q);
              } catch (c) {
                o(c);
              }
            })
          );
        });
      }
      getFormLayout(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "3eacc80a-ddca-4404-857a-6331aac99063",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ut.TypeInfo.FormLayout,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getListsMetadata() {
        return G(this, void 0, void 0, function* () {
          return new Promise((t, i) =>
            G(this, void 0, void 0, function* () {
              let a = {};
              try {
                let u = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "b45cc931-98e3-44a1-b1cd-2e8e9c6dc1c6",
                    a
                  ),
                  l = u.requestUrl,
                  r = this.createRequestOptions(
                    "application/json",
                    u.apiVersion
                  ),
                  s;
                s = yield this.rest.get(l, r);
                let n = this.formatResponse(s.result, null, !0);
                t(n);
              } catch (u) {
                i(u);
              }
            })
          );
        });
      }
      createList(t) {
        return G(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            G(this, void 0, void 0, function* () {
              let u = {};
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "0b6179e2-23ce-46b2-b094-2ffa5ee70286",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.create(r, t, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      deleteList(t) {
        return G(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            G(this, void 0, void 0, function* () {
              let u = { listId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "0b6179e2-23ce-46b2-b094-2ffa5ee70286",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.del(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      getList(t) {
        return G(this, void 0, void 0, function* () {
          return new Promise((i, a) =>
            G(this, void 0, void 0, function* () {
              let u = { listId: t };
              try {
                let l = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "0b6179e2-23ce-46b2-b094-2ffa5ee70286",
                    u
                  ),
                  r = l.requestUrl,
                  s = this.createRequestOptions(
                    "application/json",
                    l.apiVersion
                  ),
                  n;
                n = yield this.rest.get(r, s);
                let o = this.formatResponse(n.result, null, !1);
                i(o);
              } catch (l) {
                a(l);
              }
            })
          );
        });
      }
      updateList(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { listId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "0b6179e2-23ce-46b2-b094-2ffa5ee70286",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.replace(s, t, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      addPage(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "1b4ac126-59b2-4f37-b4df-0a48ba807edb",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, ut.TypeInfo.Page, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      editPage(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "1b4ac126-59b2-4f37-b4df-0a48ba807edb",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, ut.TypeInfo.Page, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      removePage(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, pageId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "1b4ac126-59b2-4f37-b4df-0a48ba807edb",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createStateDefinition(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "4303625d-08f4-4461-b14b-32c65bba5599",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      deleteStateDefinition(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, stateId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "4303625d-08f4-4461-b14b-32c65bba5599",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getStateDefinition(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i, stateId: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "4303625d-08f4-4461-b14b-32c65bba5599",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getStateDefinitions(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "4303625d-08f4-4461-b14b-32c65bba5599",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      hideStateDefinition(t, i, a, u) {
        return G(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            G(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, stateId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "4303625d-08f4-4461-b14b-32c65bba5599",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.replace(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      updateStateDefinition(t, i, a, u) {
        return G(this, void 0, void 0, function* () {
          return new Promise((l, r) =>
            G(this, void 0, void 0, function* () {
              let s = { processId: i, witRefName: a, stateId: u };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "4303625d-08f4-4461-b14b-32c65bba5599",
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.update(o, t, p);
                let c = this.formatResponse(d.result, null, !1);
                l(c);
              } catch (n) {
                r(n);
              }
            })
          );
        });
      }
      addBehaviorToWorkItemType(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, witRefNameForBehaviors: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "921dfb88-ef57-4c69-94e5-dd7da2d7031d",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBehaviorForWorkItemType(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = {
                processId: t,
                witRefNameForBehaviors: i,
                behaviorRefName: a,
              };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "921dfb88-ef57-4c69-94e5-dd7da2d7031d",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getBehaviorsForWorkItemType(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: t, witRefNameForBehaviors: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "921dfb88-ef57-4c69-94e5-dd7da2d7031d",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(o.result, null, !0);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      removeBehaviorFromWorkItemType(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = {
                processId: t,
                witRefNameForBehaviors: i,
                behaviorRefName: a,
              };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "921dfb88-ef57-4c69-94e5-dd7da2d7031d",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateBehaviorToWorkItemType(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, witRefNameForBehaviors: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "921dfb88-ef57-4c69-94e5-dd7da2d7031d",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      createWorkItemType(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "1ce0acad-4638-49c3-969c-04aa65ba6bea",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.create(s, t, n);
                let p = this.formatResponse(
                  o.result,
                  ut.TypeInfo.WorkItemTypeModel,
                  !1
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      deleteWorkItemType(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: t, witRefName: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "1ce0acad-4638-49c3-969c-04aa65ba6bea",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.del(s, n);
                let p = this.formatResponse(o.result, null, !1);
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      getWorkItemType(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: t, witRefName: i },
                s = { $expand: a };
              try {
                let n = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "1ce0acad-4638-49c3-969c-04aa65ba6bea",
                    r,
                    s
                  ),
                  o = n.requestUrl,
                  p = this.createRequestOptions(
                    "application/json",
                    n.apiVersion
                  ),
                  d;
                d = yield this.rest.get(o, p);
                let c = this.formatResponse(
                  d.result,
                  ut.TypeInfo.WorkItemTypeModel,
                  !1
                );
                u(c);
              } catch (n) {
                l(n);
              }
            })
          );
        });
      }
      getWorkItemTypes(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: t },
                r = { $expand: i };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "1ce0acad-4638-49c3-969c-04aa65ba6bea",
                    l,
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ut.TypeInfo.WorkItemTypeModel,
                  !0
                );
                a(d);
              } catch (s) {
                u(s);
              }
            })
          );
        });
      }
      updateWorkItemType(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, witRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "1ce0acad-4638-49c3-969c-04aa65ba6bea",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ut.TypeInfo.WorkItemTypeModel,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      addFieldToWorkItemType(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, witRefNameForFields: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "976713b4-a62e-499e-94dc-eeb869ea9126",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.create(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ut.TypeInfo.WorkItemTypeFieldModel2,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getWorkItemTypeField(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: t, witRefNameForFields: i, fieldRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "976713b4-a62e-499e-94dc-eeb869ea9126",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.get(n, o);
                let d = this.formatResponse(
                  p.result,
                  ut.TypeInfo.WorkItemTypeFieldModel2,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      getWorkItemTypeFields(t, i) {
        return G(this, void 0, void 0, function* () {
          return new Promise((a, u) =>
            G(this, void 0, void 0, function* () {
              let l = { processId: t, witRefNameForFields: i };
              try {
                let r = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "976713b4-a62e-499e-94dc-eeb869ea9126",
                    l
                  ),
                  s = r.requestUrl,
                  n = this.createRequestOptions(
                    "application/json",
                    r.apiVersion
                  ),
                  o;
                o = yield this.rest.get(s, n);
                let p = this.formatResponse(
                  o.result,
                  ut.TypeInfo.WorkItemTypeFieldModel2,
                  !0
                );
                a(p);
              } catch (r) {
                u(r);
              }
            })
          );
        });
      }
      removeFieldFromWorkItemType(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: t, witRefNameForFields: i, fieldRefName: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "976713b4-a62e-499e-94dc-eeb869ea9126",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.del(n, o);
                let d = this.formatResponse(p.result, null, !1);
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
      updateWorkItemTypeField(t, i, a) {
        return G(this, void 0, void 0, function* () {
          return new Promise((u, l) =>
            G(this, void 0, void 0, function* () {
              let r = { processId: i, witRefNameForFields: a };
              try {
                let s = yield this.vsoClient.getVersioningData(
                    "7.1-preview.1",
                    "processDefinitions",
                    "976713b4-a62e-499e-94dc-eeb869ea9126",
                    r
                  ),
                  n = s.requestUrl,
                  o = this.createRequestOptions(
                    "application/json",
                    s.apiVersion
                  ),
                  p;
                p = yield this.rest.update(n, t, o);
                let d = this.formatResponse(
                  p.result,
                  ut.TypeInfo.WorkItemTypeFieldModel2,
                  !1
                );
                u(d);
              } catch (s) {
                l(s);
              }
            })
          );
        });
      }
    };
  js.RESOURCE_AREA_ID = "5264459e-e5e0-4bd8-b118-0985e68a4ec5";
  un.WorkItemTrackingProcessDefinitionsApi = js;
});
var gc = x(($a) => {
  "use strict";
  Object.defineProperty($a, "__esModule", { value: !0 });
  var Wa = class {
    constructor(t, i, a) {
      (this.username = t),
        (this.password = i),
        (this.allowCrossOriginAuthentication = a);
    }
    prepareRequest(t) {
      this.origin || (this.origin = t.host),
        (this.origin === t.host || this.allowCrossOriginAuthentication) &&
          (t.headers.Authorization = `Basic ${Buffer.from(
            `${this.username}:${this.password}`
          ).toString("base64")}`),
        (t.headers["X-TFS-FedAuthRedirect"] = "Suppress");
    }
    canHandleAuthentication(t) {
      return !1;
    }
    handleAuthentication(t, i, a) {
      return null;
    }
  };
  $a.BasicCredentialHandler = Wa;
});
var Ic = x((za) => {
  "use strict";
  Object.defineProperty(za, "__esModule", { value: !0 });
  var Ha = class {
    constructor(t, i) {
      (this.token = t), (this.allowCrossOriginAuthentication = i);
    }
    prepareRequest(t) {
      this.origin || (this.origin = t.host),
        (this.origin === t.host || this.allowCrossOriginAuthentication) &&
          (t.headers.Authorization = `Bearer ${this.token}`),
        (t.headers["X-TFS-FedAuthRedirect"] = "Suppress");
    }
    canHandleAuthentication(t) {
      return !1;
    }
    handleAuthentication(t, i, a) {
      return null;
    }
  };
  za.BearerCredentialHandler = Ha;
});
var pn,
  Qa,
  dn,
  As,
  Ja,
  Tc,
  wt,
  Mt,
  Rc,
  Ka,
  Vc,
  bc,
  Xa,
  Za,
  Ya,
  Dc,
  wc,
  Os,
  el,
  qc,
  Pe = A(() => {
    (pn = "1.13.6"),
      (Qa =
        (typeof self == "object" && self.self === self && self) ||
        (typeof global == "object" && global.global === global && global) ||
        Function("return this")() ||
        {}),
      (dn = Array.prototype),
      (As = Object.prototype),
      (Ja = typeof Symbol < "u" ? Symbol.prototype : null),
      (Tc = dn.push),
      (wt = dn.slice),
      (Mt = As.toString),
      (Rc = As.hasOwnProperty),
      (Ka = typeof ArrayBuffer < "u"),
      (Vc = typeof DataView < "u"),
      (bc = Array.isArray),
      (Xa = Object.keys),
      (Za = Object.create),
      (Ya = Ka && ArrayBuffer.isView),
      (Dc = isNaN),
      (wc = isFinite),
      (Os = !{ toString: null }.propertyIsEnumerable("toString")),
      (el = [
        "valueOf",
        "isPrototypeOf",
        "toString",
        "propertyIsEnumerable",
        "hasOwnProperty",
        "toLocaleString",
      ]),
      (qc = Math.pow(2, 53) - 1);
  });
function he(e, t) {
  return (
    (t = t == null ? e.length - 1 : +t),
    function () {
      for (
        var i = Math.max(arguments.length - t, 0), a = Array(i), u = 0;
        u < i;
        u++
      )
        a[u] = arguments[u + t];
      switch (t) {
        case 0:
          return e.call(this, a);
        case 1:
          return e.call(this, arguments[0], a);
        case 2:
          return e.call(this, arguments[0], arguments[1], a);
      }
      var l = Array(t + 1);
      for (u = 0; u < t; u++) l[u] = arguments[u];
      return (l[t] = a), e.apply(this, l);
    }
  );
}
var nt = A(() => {});
function Xe(e) {
  var t = typeof e;
  return t === "function" || (t === "object" && !!e);
}
var Yt = A(() => {});
function Us(e) {
  return e === null;
}
var Pc = A(() => {});
function Qi(e) {
  return e === void 0;
}
var tl = A(() => {});
function Ji(e) {
  return e === !0 || e === !1 || Mt.call(e) === "[object Boolean]";
}
var il = A(() => {
  Pe();
});
function ks(e) {
  return !!(e && e.nodeType === 1);
}
var Cc = A(() => {});
function pe(e) {
  var t = "[object " + e + "]";
  return function (i) {
    return Mt.call(i) === t;
  };
}
var He = A(() => {
  Pe();
});
var Ti,
  Es = A(() => {
    He();
    Ti = pe("String");
  });
var cn,
  rl = A(() => {
    He();
    cn = pe("Number");
  });
var nl,
  jc = A(() => {
    He();
    nl = pe("Date");
  });
var sl,
  Ac = A(() => {
    He();
    sl = pe("RegExp");
  });
var ol,
  Oc = A(() => {
    He();
    ol = pe("Error");
  });
var fn,
  al = A(() => {
    He();
    fn = pe("Symbol");
  });
var hn,
  ll = A(() => {
    He();
    hn = pe("ArrayBuffer");
  });
var Uc,
  KR,
  me,
  pt = A(() => {
    He();
    Pe();
    (Uc = pe("Function")), (KR = Qa.document && Qa.document.childNodes);
    typeof /./ != "function" &&
      typeof Int8Array != "object" &&
      typeof KR != "function" &&
      (Uc = function (e) {
        return typeof e == "function" || !1;
      });
    me = Uc;
  });
var ul,
  kc = A(() => {
    He();
    ul = pe("Object");
  });
var Ss,
  Ki,
  Xi = A(() => {
    Pe();
    kc();
    (Ss = Vc && ul(new DataView(new ArrayBuffer(8)))),
      (Ki = typeof Map < "u" && ul(new Map()));
  });
function ZR(e) {
  return e != null && me(e.getInt8) && hn(e.buffer);
}
var XR,
  ei,
  Ns = A(() => {
    He();
    pt();
    ll();
    Xi();
    XR = pe("DataView");
    ei = Ss ? ZR : XR;
  });
var et,
  ti = A(() => {
    Pe();
    He();
    et = bc || pe("Array");
  });
function ze(e, t) {
  return e != null && Rc.call(e, t);
}
var xt = A(() => {
  Pe();
});
var pl,
  Ri,
  Bs = A(() => {
    He();
    xt();
    pl = pe("Arguments");
    (function () {
      pl(arguments) ||
        (pl = function (e) {
          return ze(e, "callee");
        });
    })();
    Ri = pl;
  });
function Ms(e) {
  return !fn(e) && wc(e) && !isNaN(parseFloat(e));
}
var Ec = A(() => {
  Pe();
  al();
});
function Zi(e) {
  return cn(e) && Dc(e);
}
var dl = A(() => {
  Pe();
  rl();
});
function Yi(e) {
  return function () {
    return e;
  };
}
var cl = A(() => {});
function yn(e) {
  return function (t) {
    var i = e(t);
    return typeof i == "number" && i >= 0 && i <= qc;
  };
}
var fl = A(() => {
  Pe();
});
function vn(e) {
  return function (t) {
    return t?.[e];
  };
}
var hl = A(() => {});
var Vi,
  xs = A(() => {
    hl();
    Vi = vn("byteLength");
  });
var Sc,
  Nc = A(() => {
    fl();
    xs();
    Sc = yn(Vi);
  });
function eV(e) {
  return Ya ? Ya(e) && !ei(e) : Sc(e) && YR.test(Mt.call(e));
}
var YR,
  mn,
  yl = A(() => {
    Pe();
    Ns();
    cl();
    Nc();
    YR =
      /\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\]/;
    mn = Ka ? eV : Yi(!1);
  });
var De,
  dt = A(() => {
    hl();
    De = vn("length");
  });
function tV(e) {
  for (var t = {}, i = e.length, a = 0; a < i; ++a) t[e[a]] = !0;
  return {
    contains: function (u) {
      return t[u] === !0;
    },
    push: function (u) {
      return (t[u] = !0), e.push(u);
    },
  };
}
function gn(e, t) {
  t = tV(t);
  var i = el.length,
    a = e.constructor,
    u = (me(a) && a.prototype) || As,
    l = "constructor";
  for (ze(e, l) && !t.contains(l) && t.push(l); i--; )
    (l = el[i]), l in e && e[l] !== u[l] && !t.contains(l) && t.push(l);
}
var vl = A(() => {
  Pe();
  pt();
  xt();
});
function se(e) {
  if (!Xe(e)) return [];
  if (Xa) return Xa(e);
  var t = [];
  for (var i in e) ze(e, i) && t.push(i);
  return Os && gn(e, t), t;
}
var xe = A(() => {
  Yt();
  Pe();
  xt();
  vl();
});
function _s(e) {
  if (e == null) return !0;
  var t = De(e);
  return typeof t == "number" && (et(e) || Ti(e) || Ri(e))
    ? t === 0
    : De(se(e)) === 0;
}
var Bc = A(() => {
  dt();
  ti();
  Es();
  Bs();
  xe();
});
function er(e, t) {
  var i = se(t),
    a = i.length;
  if (e == null) return !a;
  for (var u = Object(e), l = 0; l < a; l++) {
    var r = i[l];
    if (t[r] !== u[r] || !(r in u)) return !1;
  }
  return !0;
}
var ml = A(() => {
  xe();
});
function ie(e) {
  if (e instanceof ie) return e;
  if (!(this instanceof ie)) return new ie(e);
  this._wrapped = e;
}
var st = A(() => {
  Pe();
  ie.VERSION = pn;
  ie.prototype.value = function () {
    return this._wrapped;
  };
  ie.prototype.valueOf = ie.prototype.toJSON = ie.prototype.value;
  ie.prototype.toString = function () {
    return String(this._wrapped);
  };
});
function Gs(e) {
  return new Uint8Array(e.buffer || e, e.byteOffset || 0, Vi(e));
}
var Mc = A(() => {
  xs();
});
function gl(e, t, i, a) {
  if (e === t) return e !== 0 || 1 / e === 1 / t;
  if (e == null || t == null) return !1;
  if (e !== e) return t !== t;
  var u = typeof e;
  return u !== "function" && u !== "object" && typeof t != "object"
    ? !1
    : _c(e, t, i, a);
}
function _c(e, t, i, a) {
  e instanceof ie && (e = e._wrapped), t instanceof ie && (t = t._wrapped);
  var u = Mt.call(e);
  if (u !== Mt.call(t)) return !1;
  if (Ss && u == "[object Object]" && ei(e)) {
    if (!ei(t)) return !1;
    u = xc;
  }
  switch (u) {
    case "[object RegExp]":
    case "[object String]":
      return "" + e == "" + t;
    case "[object Number]":
      return +e != +e ? +t != +t : +e == 0 ? 1 / +e === 1 / t : +e == +t;
    case "[object Date]":
    case "[object Boolean]":
      return +e == +t;
    case "[object Symbol]":
      return Ja.valueOf.call(e) === Ja.valueOf.call(t);
    case "[object ArrayBuffer]":
    case xc:
      return _c(Gs(e), Gs(t), i, a);
  }
  var l = u === "[object Array]";
  if (!l && mn(e)) {
    var r = Vi(e);
    if (r !== Vi(t)) return !1;
    if (e.buffer === t.buffer && e.byteOffset === t.byteOffset) return !0;
    l = !0;
  }
  if (!l) {
    if (typeof e != "object" || typeof t != "object") return !1;
    var s = e.constructor,
      n = t.constructor;
    if (
      s !== n &&
      !(me(s) && s instanceof s && me(n) && n instanceof n) &&
      "constructor" in e &&
      "constructor" in t
    )
      return !1;
  }
  (i = i || []), (a = a || []);
  for (var o = i.length; o--; ) if (i[o] === e) return a[o] === t;
  if ((i.push(e), a.push(t), l)) {
    if (((o = e.length), o !== t.length)) return !1;
    for (; o--; ) if (!gl(e[o], t[o], i, a)) return !1;
  } else {
    var p = se(e),
      d;
    if (((o = p.length), se(t).length !== o)) return !1;
    for (; o--; )
      if (((d = p[o]), !(ze(t, d) && gl(e[d], t[d], i, a)))) return !1;
  }
  return i.pop(), a.pop(), !0;
}
function Fs(e, t) {
  return gl(e, t);
}
var xc,
  Gc = A(() => {
    st();
    Pe();
    xs();
    yl();
    pt();
    Xi();
    Ns();
    xe();
    xt();
    Mc();
    xc = "[object DataView]";
  });
function vt(e) {
  if (!Xe(e)) return [];
  var t = [];
  for (var i in e) t.push(i);
  return Os && gn(e, t), t;
}
var tr = A(() => {
  Yt();
  Pe();
  vl();
});
function ir(e) {
  var t = De(e);
  return function (i) {
    if (i == null) return !1;
    var a = vt(i);
    if (De(a)) return !1;
    for (var u = 0; u < t; u++) if (!me(i[e[u]])) return !1;
    return e !== Rl || !me(i[Il]);
  };
}
var Il,
  Fc,
  Tl,
  Lc,
  Wc,
  Rl,
  $c,
  Ls = A(() => {
    dt();
    pt();
    tr();
    (Il = "forEach"),
      (Fc = "has"),
      (Tl = ["clear", "delete"]),
      (Lc = ["get", Fc, "set"]),
      (Wc = Tl.concat(Il, Lc)),
      (Rl = Tl.concat(Lc)),
      ($c = ["add"].concat(Tl, Il, Fc));
  });
var Vl,
  Hc = A(() => {
    He();
    Xi();
    Ls();
    Vl = Ki ? ir(Wc) : pe("Map");
  });
var bl,
  zc = A(() => {
    He();
    Xi();
    Ls();
    bl = Ki ? ir(Rl) : pe("WeakMap");
  });
var Dl,
  Qc = A(() => {
    He();
    Xi();
    Ls();
    Dl = Ki ? ir($c) : pe("Set");
  });
var wl,
  Jc = A(() => {
    He();
    wl = pe("WeakSet");
  });
function ot(e) {
  for (var t = se(e), i = t.length, a = Array(i), u = 0; u < i; u++)
    a[u] = e[t[u]];
  return a;
}
var bi = A(() => {
  xe();
});
function Ws(e) {
  for (var t = se(e), i = t.length, a = Array(i), u = 0; u < i; u++)
    a[u] = [t[u], e[t[u]]];
  return a;
}
var Kc = A(() => {
  xe();
});
function rr(e) {
  for (var t = {}, i = se(e), a = 0, u = i.length; a < u; a++)
    t[e[i[a]]] = i[a];
  return t;
}
var ql = A(() => {
  xe();
});
function Di(e) {
  var t = [];
  for (var i in e) me(e[i]) && t.push(i);
  return t.sort();
}
var Pl = A(() => {
  pt();
});
function wi(e, t) {
  return function (i) {
    var a = arguments.length;
    if ((t && (i = Object(i)), a < 2 || i == null)) return i;
    for (var u = 1; u < a; u++)
      for (var l = arguments[u], r = e(l), s = r.length, n = 0; n < s; n++) {
        var o = r[n];
        (!t || i[o] === void 0) && (i[o] = l[o]);
      }
    return i;
  };
}
var $s = A(() => {});
var In,
  Cl = A(() => {
    $s();
    tr();
    In = wi(vt);
  });
var ii,
  Hs = A(() => {
    $s();
    xe();
    ii = wi(se);
  });
var Tn,
  jl = A(() => {
    $s();
    tr();
    Tn = wi(vt, !0);
  });
function iV() {
  return function () {};
}
function Rn(e) {
  if (!Xe(e)) return {};
  if (Za) return Za(e);
  var t = iV();
  t.prototype = e;
  var i = new t();
  return (t.prototype = null), i;
}
var Al = A(() => {
  Yt();
  Pe();
});
function zs(e, t) {
  var i = Rn(e);
  return t && ii(i, t), i;
}
var Xc = A(() => {
  Al();
  Hs();
});
function Qs(e) {
  return Xe(e) ? (et(e) ? e.slice() : In({}, e)) : e;
}
var Zc = A(() => {
  Yt();
  ti();
  Cl();
});
function Js(e, t) {
  return t(e), e;
}
var Yc = A(() => {});
function Vn(e) {
  return et(e) ? e : [e];
}
var Ol = A(() => {
  st();
  ti();
  ie.toPath = Vn;
});
function It(e) {
  return ie.toPath(e);
}
var nr = A(() => {
  st();
  Ol();
});
function qi(e, t) {
  for (var i = t.length, a = 0; a < i; a++) {
    if (e == null) return;
    e = e[t[a]];
  }
  return i ? e : void 0;
}
var Ks = A(() => {});
function sr(e, t, i) {
  var a = qi(e, It(t));
  return Qi(a) ? i : a;
}
var Ul = A(() => {
  nr();
  Ks();
  tl();
});
function Xs(e, t) {
  t = It(t);
  for (var i = t.length, a = 0; a < i; a++) {
    var u = t[a];
    if (!ze(e, u)) return !1;
    e = e[u];
  }
  return !!i;
}
var ef = A(() => {
  xt();
  nr();
});
function ri(e) {
  return e;
}
var Zs = A(() => {});
function Tt(e) {
  return (
    (e = ii({}, e)),
    function (t) {
      return er(t, e);
    }
  );
}
var bn = A(() => {
  Hs();
  ml();
});
function ni(e) {
  return (
    (e = It(e)),
    function (t) {
      return qi(t, e);
    }
  );
}
var Ys = A(() => {
  Ks();
  nr();
});
function Rt(e, t, i) {
  if (t === void 0) return e;
  switch (i ?? 3) {
    case 1:
      return function (a) {
        return e.call(t, a);
      };
    case 3:
      return function (a, u, l) {
        return e.call(t, a, u, l);
      };
    case 4:
      return function (a, u, l, r) {
        return e.call(t, a, u, l, r);
      };
  }
  return function () {
    return e.apply(t, arguments);
  };
}
var or = A(() => {});
function Dn(e, t, i) {
  return e == null ? ri : me(e) ? Rt(e, t, i) : Xe(e) && !et(e) ? Tt(e) : ni(e);
}
var kl = A(() => {
  Zs();
  pt();
  Yt();
  ti();
  bn();
  Ys();
  or();
});
function Pi(e, t) {
  return Dn(e, t, 1 / 0);
}
var El = A(() => {
  st();
  kl();
  ie.iteratee = Pi;
});
function ye(e, t, i) {
  return ie.iteratee !== Pi ? ie.iteratee(e, t) : Dn(e, t, i);
}
var tt = A(() => {
  st();
  kl();
  El();
});
function eo(e, t, i) {
  t = ye(t, i);
  for (var a = se(e), u = a.length, l = {}, r = 0; r < u; r++) {
    var s = a[r];
    l[s] = t(e[s], s, e);
  }
  return l;
}
var tf = A(() => {
  tt();
  xe();
});
function ar() {}
var Sl = A(() => {});
function to(e) {
  return e == null
    ? ar
    : function (t) {
        return sr(e, t);
      };
}
var rf = A(() => {
  Sl();
  Ul();
});
function io(e, t, i) {
  var a = Array(Math.max(0, e));
  t = Rt(t, i, 1);
  for (var u = 0; u < e; u++) a[u] = t(u);
  return a;
}
var nf = A(() => {
  or();
});
function Ci(e, t) {
  return (
    t == null && ((t = e), (e = 0)), e + Math.floor(Math.random() * (t - e + 1))
  );
}
var Nl = A(() => {});
var _t,
  ro = A(() => {
    _t =
      Date.now ||
      function () {
        return new Date().getTime();
      };
  });
function wn(e) {
  var t = function (l) {
      return e[l];
    },
    i = "(?:" + se(e).join("|") + ")",
    a = RegExp(i),
    u = RegExp(i, "g");
  return function (l) {
    return (l = l == null ? "" : "" + l), a.test(l) ? l.replace(u, t) : l;
  };
}
var Bl = A(() => {
  xe();
});
var no,
  Ml = A(() => {
    no = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#x27;",
      "`": "&#x60;",
    };
  });
var xl,
  sf = A(() => {
    Bl();
    Ml();
    xl = wn(no);
  });
var of,
  af = A(() => {
    ql();
    Ml();
    of = rr(no);
  });
var _l,
  lf = A(() => {
    Bl();
    af();
    _l = wn(of);
  });
var Gl,
  Fl = A(() => {
    st();
    Gl = ie.templateSettings = {
      evaluate: /<%([\s\S]+?)%>/g,
      interpolate: /<%=([\s\S]+?)%>/g,
      escape: /<%-([\s\S]+?)%>/g,
    };
  });
function sV(e) {
  return "\\" + rV[e];
}
function so(e, t, i) {
  !t && i && (t = i), (t = Tn({}, t, ie.templateSettings));
  var a = RegExp(
      [
        (t.escape || Ll).source,
        (t.interpolate || Ll).source,
        (t.evaluate || Ll).source,
      ].join("|") + "|$",
      "g"
    ),
    u = 0,
    l = "__p+='";
  e.replace(a, function (o, p, d, c, f) {
    return (
      (l += e.slice(u, f).replace(nV, sV)),
      (u = f + o.length),
      p
        ? (l +=
            `'+
((__t=(` +
            p +
            `))==null?'':_.escape(__t))+
'`)
        : d
        ? (l +=
            `'+
((__t=(` +
            d +
            `))==null?'':__t)+
'`)
        : c &&
          (l +=
            `';
` +
            c +
            `
__p+='`),
      o
    );
  }),
    (l += `';
`);
  var r = t.variable;
  if (r) {
    if (!oV.test(r)) throw new Error("variable is not a bare identifier: " + r);
  } else
    (l =
      `with(obj||{}){
` +
      l +
      `}
`),
      (r = "obj");
  l =
    `var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};
` +
    l +
    `return __p;
`;
  var s;
  try {
    s = new Function(r, "_", l);
  } catch (o) {
    throw ((o.source = l), o);
  }
  var n = function (o) {
    return s.call(this, o, ie);
  };
  return (
    (n.source =
      "function(" +
      r +
      `){
` +
      l +
      "}"),
    n
  );
}
var Ll,
  rV,
  nV,
  oV,
  uf = A(() => {
    jl();
    st();
    Fl();
    (Ll = /(.)^/),
      (rV = {
        "'": "'",
        "\\": "\\",
        "\r": "r",
        "\n": "n",
        "\u2028": "u2028",
        "\u2029": "u2029",
      }),
      (nV = /\\|'|\r|\n|\u2028|\u2029/g);
    oV = /^\s*(\w|\$)+\s*$/;
  });
function oo(e, t, i) {
  t = It(t);
  var a = t.length;
  if (!a) return me(i) ? i.call(e) : i;
  for (var u = 0; u < a; u++) {
    var l = e?.[t[u]];
    l === void 0 && ((l = i), (u = a)), (e = me(l) ? l.call(e) : l);
  }
  return e;
}
var pf = A(() => {
  pt();
  nr();
});
function ao(e) {
  var t = ++aV + "";
  return e ? e + t : t;
}
var aV,
  df = A(() => {
    aV = 0;
  });
function lo(e) {
  var t = ie(e);
  return (t._chain = !0), t;
}
var cf = A(() => {
  st();
});
function qn(e, t, i, a, u) {
  if (!(a instanceof t)) return e.apply(i, u);
  var l = Rn(e.prototype),
    r = e.apply(l, u);
  return Xe(r) ? r : l;
}
var Wl = A(() => {
  Al();
  Yt();
});
var $l,
  Gt,
  Pn = A(() => {
    nt();
    Wl();
    st();
    $l = he(function (e, t) {
      var i = $l.placeholder,
        a = function () {
          for (var u = 0, l = t.length, r = Array(l), s = 0; s < l; s++)
            r[s] = t[s] === i ? arguments[u++] : t[s];
          for (; u < arguments.length; ) r.push(arguments[u++]);
          return qn(e, a, this, this, r);
        };
      return a;
    });
    $l.placeholder = ie;
    Gt = $l;
  });
var Cn,
  Hl = A(() => {
    nt();
    pt();
    Wl();
    Cn = he(function (e, t, i) {
      if (!me(e)) throw new TypeError("Bind must be called on a function");
      var a = he(function (u) {
        return qn(e, a, t, this, i.concat(u));
      });
      return a;
    });
  });
var we,
  at = A(() => {
    fl();
    dt();
    we = yn(De);
  });
function lt(e, t, i, a) {
  if (((a = a || []), !t && t !== 0)) t = 1 / 0;
  else if (t <= 0) return a.concat(e);
  for (var u = a.length, l = 0, r = De(e); l < r; l++) {
    var s = e[l];
    if (we(s) && (et(s) || Ri(s)))
      if (t > 1) lt(s, t - 1, i, a), (u = a.length);
      else for (var n = 0, o = s.length; n < o; ) a[u++] = s[n++];
    else i || (a[u++] = s);
  }
  return a;
}
var ji = A(() => {
  dt();
  at();
  ti();
  Bs();
});
var zl,
  ff = A(() => {
    nt();
    ji();
    Hl();
    zl = he(function (e, t) {
      t = lt(t, !1, !1);
      var i = t.length;
      if (i < 1) throw new Error("bindAll must be passed function names");
      for (; i--; ) {
        var a = t[i];
        e[a] = Cn(e[a], e);
      }
      return e;
    });
  });
function uo(e, t) {
  var i = function (a) {
    var u = i.cache,
      l = "" + (t ? t.apply(this, arguments) : a);
    return ze(u, l) || (u[l] = e.apply(this, arguments)), u[l];
  };
  return (i.cache = {}), i;
}
var hf = A(() => {
  xt();
});
var jn,
  Ql = A(() => {
    nt();
    jn = he(function (e, t, i) {
      return setTimeout(function () {
        return e.apply(null, i);
      }, t);
    });
  });
var Jl,
  yf = A(() => {
    Pn();
    Ql();
    st();
    Jl = Gt(jn, ie, 1);
  });
function po(e, t, i) {
  var a,
    u,
    l,
    r,
    s = 0;
  i || (i = {});
  var n = function () {
      (s = i.leading === !1 ? 0 : _t()),
        (a = null),
        (r = e.apply(u, l)),
        a || (u = l = null);
    },
    o = function () {
      var p = _t();
      !s && i.leading === !1 && (s = p);
      var d = t - (p - s);
      return (
        (u = this),
        (l = arguments),
        d <= 0 || d > t
          ? (a && (clearTimeout(a), (a = null)),
            (s = p),
            (r = e.apply(u, l)),
            a || (u = l = null))
          : !a && i.trailing !== !1 && (a = setTimeout(n, d)),
        r
      );
    };
  return (
    (o.cancel = function () {
      clearTimeout(a), (s = 0), (a = u = l = null);
    }),
    o
  );
}
var vf = A(() => {
  ro();
});
function co(e, t, i) {
  var a,
    u,
    l,
    r,
    s,
    n = function () {
      var p = _t() - u;
      t > p
        ? (a = setTimeout(n, t - p))
        : ((a = null), i || (r = e.apply(s, l)), a || (l = s = null));
    },
    o = he(function (p) {
      return (
        (s = this),
        (l = p),
        (u = _t()),
        a || ((a = setTimeout(n, t)), i && (r = e.apply(s, l))),
        r
      );
    });
  return (
    (o.cancel = function () {
      clearTimeout(a), (a = l = s = null);
    }),
    o
  );
}
var mf = A(() => {
  nt();
  ro();
});
function fo(e, t) {
  return Gt(t, e);
}
var gf = A(() => {
  Pn();
});
function si(e) {
  return function () {
    return !e.apply(this, arguments);
  };
}
var ho = A(() => {});
function yo() {
  var e = arguments,
    t = e.length - 1;
  return function () {
    for (var i = t, a = e[t].apply(this, arguments); i--; )
      a = e[i].call(this, a);
    return a;
  };
}
var If = A(() => {});
function vo(e, t) {
  return function () {
    if (--e < 1) return t.apply(this, arguments);
  };
}
var Tf = A(() => {});
function lr(e, t) {
  var i;
  return function () {
    return --e > 0 && (i = t.apply(this, arguments)), e <= 1 && (t = null), i;
  };
}
var Kl = A(() => {});
var Xl,
  Rf = A(() => {
    Pn();
    Kl();
    Xl = Gt(lr, 2);
  });
function ur(e, t, i) {
  t = ye(t, i);
  for (var a = se(e), u, l = 0, r = a.length; l < r; l++)
    if (((u = a[l]), t(e[u], u, e))) return u;
}
var Zl = A(() => {
  tt();
  xe();
});
function An(e) {
  return function (t, i, a) {
    i = ye(i, a);
    for (var u = De(t), l = e > 0 ? 0 : u - 1; l >= 0 && l < u; l += e)
      if (i(t[l], l, t)) return l;
    return -1;
  };
}
var Yl = A(() => {
  tt();
  dt();
});
var Ai,
  mo = A(() => {
    Yl();
    Ai = An(1);
  });
var On,
  eu = A(() => {
    Yl();
    On = An(-1);
  });
function pr(e, t, i, a) {
  i = ye(i, a, 1);
  for (var u = i(t), l = 0, r = De(e); l < r; ) {
    var s = Math.floor((l + r) / 2);
    i(e[s]) < u ? (l = s + 1) : (r = s);
  }
  return l;
}
var tu = A(() => {
  tt();
  dt();
});
function Un(e, t, i) {
  return function (a, u, l) {
    var r = 0,
      s = De(a);
    if (typeof l == "number")
      e > 0
        ? (r = l >= 0 ? l : Math.max(l + s, r))
        : (s = l >= 0 ? Math.min(l + 1, s) : l + s + 1);
    else if (i && l && s) return (l = i(a, u)), a[l] === u ? l : -1;
    if (u !== u) return (l = t(wt.call(a, r, s), Zi)), l >= 0 ? l + r : -1;
    for (l = e > 0 ? r : s - 1; l >= 0 && l < s; l += e)
      if (a[l] === u) return l;
    return -1;
  };
}
var iu = A(() => {
  dt();
  Pe();
  dl();
});
var kn,
  ru = A(() => {
    tu();
    mo();
    iu();
    kn = Un(1, Ai, pr);
  });
var nu,
  Vf = A(() => {
    eu();
    iu();
    nu = Un(-1, On);
  });
function Oi(e, t, i) {
  var a = we(e) ? Ai : ur,
    u = a(e, t, i);
  if (u !== void 0 && u !== -1) return e[u];
}
var su = A(() => {
  at();
  mo();
  Zl();
});
function go(e, t) {
  return Oi(e, Tt(t));
}
var bf = A(() => {
  su();
  bn();
});
function _e(e, t, i) {
  t = Rt(t, i);
  var a, u;
  if (we(e)) for (a = 0, u = e.length; a < u; a++) t(e[a], a, e);
  else {
    var l = se(e);
    for (a = 0, u = l.length; a < u; a++) t(e[l[a]], l[a], e);
  }
  return e;
}
var oi = A(() => {
  or();
  at();
  xe();
});
function it(e, t, i) {
  t = ye(t, i);
  for (
    var a = !we(e) && se(e), u = (a || e).length, l = Array(u), r = 0;
    r < u;
    r++
  ) {
    var s = a ? a[r] : r;
    l[r] = t(e[s], s, e);
  }
  return l;
}
var Ui = A(() => {
  tt();
  at();
  xe();
});
function En(e) {
  var t = function (i, a, u, l) {
    var r = !we(i) && se(i),
      s = (r || i).length,
      n = e > 0 ? 0 : s - 1;
    for (l || ((u = i[r ? r[n] : n]), (n += e)); n >= 0 && n < s; n += e) {
      var o = r ? r[n] : n;
      u = a(u, i[o], o, i);
    }
    return u;
  };
  return function (i, a, u, l) {
    var r = arguments.length >= 3;
    return t(i, Rt(a, l, 4), u, r);
  };
}
var ou = A(() => {
  at();
  xe();
  or();
});
var Sn,
  Df = A(() => {
    ou();
    Sn = En(1);
  });
var Io,
  wf = A(() => {
    ou();
    Io = En(-1);
  });
function ct(e, t, i) {
  var a = [];
  return (
    (t = ye(t, i)),
    _e(e, function (u, l, r) {
      t(u, l, r) && a.push(u);
    }),
    a
  );
}
var dr = A(() => {
  tt();
  oi();
});
function To(e, t, i) {
  return ct(e, si(ye(t)), i);
}
var qf = A(() => {
  dr();
  ho();
  tt();
});
function Nn(e, t, i) {
  t = ye(t, i);
  for (var a = !we(e) && se(e), u = (a || e).length, l = 0; l < u; l++) {
    var r = a ? a[l] : l;
    if (!t(e[r], r, e)) return !1;
  }
  return !0;
}
var Pf = A(() => {
  tt();
  at();
  xe();
});
function Bn(e, t, i) {
  t = ye(t, i);
  for (var a = !we(e) && se(e), u = (a || e).length, l = 0; l < u; l++) {
    var r = a ? a[l] : l;
    if (t(e[r], r, e)) return !0;
  }
  return !1;
}
var Cf = A(() => {
  tt();
  at();
  xe();
});
function Ze(e, t, i, a) {
  return (
    we(e) || (e = ot(e)),
    (typeof i != "number" || a) && (i = 0),
    kn(e, t, i) >= 0
  );
}
var cr = A(() => {
  at();
  bi();
  ru();
});
var au,
  jf = A(() => {
    nt();
    pt();
    Ui();
    Ks();
    nr();
    au = he(function (e, t, i) {
      var a, u;
      return (
        me(t)
          ? (u = t)
          : ((t = It(t)), (a = t.slice(0, -1)), (t = t[t.length - 1])),
        it(e, function (l) {
          var r = u;
          if (!r) {
            if ((a && a.length && (l = qi(l, a)), l == null)) return;
            r = l[t];
          }
          return r == null ? r : r.apply(l, i);
        })
      );
    });
  });
function ai(e, t) {
  return it(e, ni(t));
}
var Ro = A(() => {
  Ui();
  Ys();
});
function Vo(e, t) {
  return ct(e, Tt(t));
}
var Af = A(() => {
  dr();
  bn();
});
function fr(e, t, i) {
  var a = -1 / 0,
    u = -1 / 0,
    l,
    r;
  if (
    t == null ||
    (typeof t == "number" && typeof e[0] != "object" && e != null)
  ) {
    e = we(e) ? e : ot(e);
    for (var s = 0, n = e.length; s < n; s++)
      (l = e[s]), l != null && l > a && (a = l);
  } else
    (t = ye(t, i)),
      _e(e, function (o, p, d) {
        (r = t(o, p, d)),
          (r > u || (r === -1 / 0 && a === -1 / 0)) && ((a = o), (u = r));
      });
  return a;
}
var lu = A(() => {
  at();
  bi();
  tt();
  oi();
});
function bo(e, t, i) {
  var a = 1 / 0,
    u = 1 / 0,
    l,
    r;
  if (
    t == null ||
    (typeof t == "number" && typeof e[0] != "object" && e != null)
  ) {
    e = we(e) ? e : ot(e);
    for (var s = 0, n = e.length; s < n; s++)
      (l = e[s]), l != null && l < a && (a = l);
  } else
    (t = ye(t, i)),
      _e(e, function (o, p, d) {
        (r = t(o, p, d)),
          (r < u || (r === 1 / 0 && a === 1 / 0)) && ((a = o), (u = r));
      });
  return a;
}
var Of = A(() => {
  at();
  bi();
  tt();
  oi();
});
function hr(e) {
  return e
    ? et(e)
      ? wt.call(e)
      : Ti(e)
      ? e.match(lV)
      : we(e)
      ? it(e, ri)
      : ot(e)
    : [];
}
var lV,
  uu = A(() => {
    ti();
    Pe();
    Es();
    at();
    Ui();
    Zs();
    bi();
    lV = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
  });
function yr(e, t, i) {
  if (t == null || i) return we(e) || (e = ot(e)), e[Ci(e.length - 1)];
  var a = hr(e),
    u = De(a);
  t = Math.max(Math.min(t, u), 0);
  for (var l = u - 1, r = 0; r < t; r++) {
    var s = Ci(r, l),
      n = a[r];
    (a[r] = a[s]), (a[s] = n);
  }
  return a.slice(0, t);
}
var pu = A(() => {
  at();
  bi();
  dt();
  Nl();
  uu();
});
function Do(e) {
  return yr(e, 1 / 0);
}
var Uf = A(() => {
  pu();
});
function wo(e, t, i) {
  var a = 0;
  return (
    (t = ye(t, i)),
    ai(
      it(e, function (u, l, r) {
        return { value: u, index: a++, criteria: t(u, l, r) };
      }).sort(function (u, l) {
        var r = u.criteria,
          s = l.criteria;
        if (r !== s) {
          if (r > s || r === void 0) return 1;
          if (r < s || s === void 0) return -1;
        }
        return u.index - l.index;
      }),
      "value"
    )
  );
}
var kf = A(() => {
  tt();
  Ro();
  Ui();
});
function Ft(e, t) {
  return function (i, a, u) {
    var l = t ? [[], []] : {};
    return (
      (a = ye(a, u)),
      _e(i, function (r, s) {
        var n = a(r, s, i);
        e(l, r, n);
      }),
      l
    );
  };
}
var Mn = A(() => {
  tt();
  oi();
});
var du,
  Ef = A(() => {
    Mn();
    xt();
    du = Ft(function (e, t, i) {
      ze(e, i) ? e[i].push(t) : (e[i] = [t]);
    });
  });
var cu,
  Sf = A(() => {
    Mn();
    cu = Ft(function (e, t, i) {
      e[i] = t;
    });
  });
var fu,
  Nf = A(() => {
    Mn();
    xt();
    fu = Ft(function (e, t, i) {
      ze(e, i) ? e[i]++ : (e[i] = 1);
    });
  });
var hu,
  Bf = A(() => {
    Mn();
    hu = Ft(function (e, t, i) {
      e[i ? 0 : 1].push(t);
    }, !0);
  });
function qo(e) {
  return e == null ? 0 : we(e) ? e.length : se(e).length;
}
var Mf = A(() => {
  at();
  xe();
});
function yu(e, t, i) {
  return t in i;
}
var xf = A(() => {});
var xn,
  vu = A(() => {
    nt();
    pt();
    or();
    tr();
    xf();
    ji();
    xn = he(function (e, t) {
      var i = {},
        a = t[0];
      if (e == null) return i;
      me(a)
        ? (t.length > 1 && (a = Rt(a, t[1])), (t = vt(e)))
        : ((a = yu), (t = lt(t, !1, !1)), (e = Object(e)));
      for (var u = 0, l = t.length; u < l; u++) {
        var r = t[u],
          s = e[r];
        a(s, r, e) && (i[r] = s);
      }
      return i;
    });
  });
var mu,
  _f = A(() => {
    nt();
    pt();
    ho();
    Ui();
    ji();
    cr();
    vu();
    mu = he(function (e, t) {
      var i = t[0],
        a;
      return (
        me(i)
          ? ((i = si(i)), t.length > 1 && (a = t[1]))
          : ((t = it(lt(t, !1, !1), String)),
            (i = function (u, l) {
              return !Ze(t, l);
            })),
        xn(e, i, a)
      );
    });
  });
function vr(e, t, i) {
  return wt.call(e, 0, Math.max(0, e.length - (t == null || i ? 1 : t)));
}
var gu = A(() => {
  Pe();
});
function mr(e, t, i) {
  return e == null || e.length < 1
    ? t == null || i
      ? void 0
      : []
    : t == null || i
    ? e[0]
    : vr(e, e.length - t);
}
var Gf = A(() => {
  gu();
});
function li(e, t, i) {
  return wt.call(e, t == null || i ? 1 : t);
}
var Iu = A(() => {
  Pe();
});
function Po(e, t, i) {
  return e == null || e.length < 1
    ? t == null || i
      ? void 0
      : []
    : t == null || i
    ? e[e.length - 1]
    : li(e, Math.max(0, e.length - t));
}
var Ff = A(() => {
  Iu();
});
function Co(e) {
  return ct(e, Boolean);
}
var Lf = A(() => {
  dr();
});
function jo(e, t) {
  return lt(e, t, !1);
}
var Wf = A(() => {
  ji();
});
var _n,
  Tu = A(() => {
    nt();
    ji();
    dr();
    cr();
    _n = he(function (e, t) {
      return (
        (t = lt(t, !0, !0)),
        ct(e, function (i) {
          return !Ze(t, i);
        })
      );
    });
  });
var Ru,
  $f = A(() => {
    nt();
    Tu();
    Ru = he(function (e, t) {
      return _n(e, t);
    });
  });
function ki(e, t, i, a) {
  Ji(t) || ((a = i), (i = t), (t = !1)), i != null && (i = ye(i, a));
  for (var u = [], l = [], r = 0, s = De(e); r < s; r++) {
    var n = e[r],
      o = i ? i(n, r, e) : n;
    t && !i
      ? ((!r || l !== o) && u.push(n), (l = o))
      : i
      ? Ze(l, o) || (l.push(o), u.push(n))
      : Ze(u, n) || u.push(n);
  }
  return u;
}
var Vu = A(() => {
  il();
  tt();
  dt();
  cr();
});
var bu,
  Hf = A(() => {
    nt();
    Vu();
    ji();
    bu = he(function (e) {
      return ki(lt(e, !0, !0));
    });
  });
function Ao(e) {
  for (var t = [], i = arguments.length, a = 0, u = De(e); a < u; a++) {
    var l = e[a];
    if (!Ze(t, l)) {
      var r;
      for (r = 1; r < i && Ze(arguments[r], l); r++);
      r === i && t.push(l);
    }
  }
  return t;
}
var zf = A(() => {
  dt();
  cr();
});
function Ei(e) {
  for (var t = (e && fr(e, De).length) || 0, i = Array(t), a = 0; a < t; a++)
    i[a] = ai(e, a);
  return i;
}
var Du = A(() => {
  lu();
  dt();
  Ro();
});
var wu,
  Qf = A(() => {
    nt();
    Du();
    wu = he(Ei);
  });
function Oo(e, t) {
  for (var i = {}, a = 0, u = De(e); a < u; a++)
    t ? (i[e[a]] = t[a]) : (i[e[a][0]] = e[a][1]);
  return i;
}
var Jf = A(() => {
  dt();
});
function Uo(e, t, i) {
  t == null && ((t = e || 0), (e = 0)), i || (i = t < e ? -1 : 1);
  for (
    var a = Math.max(Math.ceil((t - e) / i), 0), u = Array(a), l = 0;
    l < a;
    l++, e += i
  )
    u[l] = e;
  return u;
}
var Kf = A(() => {});
function ko(e, t) {
  if (t == null || t < 1) return [];
  for (var i = [], a = 0, u = e.length; a < u; )
    i.push(wt.call(e, a, (a += t)));
  return i;
}
var Xf = A(() => {
  Pe();
});
function gr(e, t) {
  return e._chain ? ie(t).chain() : t;
}
var qu = A(() => {
  st();
});
function Ir(e) {
  return (
    _e(Di(e), function (t) {
      var i = (ie[t] = e[t]);
      ie.prototype[t] = function () {
        var a = [this._wrapped];
        return Tc.apply(a, arguments), gr(this, i.apply(ie, a));
      };
    }),
    ie
  );
}
var Zf = A(() => {
  st();
  oi();
  Pl();
  Pe();
  qu();
});
var Yf,
  eh = A(() => {
    st();
    oi();
    Pe();
    qu();
    _e(
      ["pop", "push", "reverse", "shift", "sort", "splice", "unshift"],
      function (e) {
        var t = dn[e];
        ie.prototype[e] = function () {
          var i = this._wrapped;
          return (
            i != null &&
              (t.apply(i, arguments),
              (e === "shift" || e === "splice") &&
                i.length === 0 &&
                delete i[0]),
            gr(this, i)
          );
        };
      }
    );
    _e(["concat", "join", "slice"], function (e) {
      var t = dn[e];
      ie.prototype[e] = function () {
        var i = this._wrapped;
        return i != null && (i = t.apply(i, arguments)), gr(this, i);
      };
    });
    Yf = ie;
  });
var Pu = {};
Bo(Pu, {
  VERSION: () => pn,
  after: () => vo,
  all: () => Nn,
  allKeys: () => vt,
  any: () => Bn,
  assign: () => ii,
  before: () => lr,
  bind: () => Cn,
  bindAll: () => zl,
  chain: () => lo,
  chunk: () => ko,
  clone: () => Qs,
  collect: () => it,
  compact: () => Co,
  compose: () => yo,
  constant: () => Yi,
  contains: () => Ze,
  countBy: () => fu,
  create: () => zs,
  debounce: () => co,
  default: () => Yf,
  defaults: () => Tn,
  defer: () => Jl,
  delay: () => jn,
  detect: () => Oi,
  difference: () => _n,
  drop: () => li,
  each: () => _e,
  escape: () => xl,
  every: () => Nn,
  extend: () => In,
  extendOwn: () => ii,
  filter: () => ct,
  find: () => Oi,
  findIndex: () => Ai,
  findKey: () => ur,
  findLastIndex: () => On,
  findWhere: () => go,
  first: () => mr,
  flatten: () => jo,
  foldl: () => Sn,
  foldr: () => Io,
  forEach: () => _e,
  functions: () => Di,
  get: () => sr,
  groupBy: () => du,
  has: () => Xs,
  head: () => mr,
  identity: () => ri,
  include: () => Ze,
  includes: () => Ze,
  indexBy: () => cu,
  indexOf: () => kn,
  initial: () => vr,
  inject: () => Sn,
  intersection: () => Ao,
  invert: () => rr,
  invoke: () => au,
  isArguments: () => Ri,
  isArray: () => et,
  isArrayBuffer: () => hn,
  isBoolean: () => Ji,
  isDataView: () => ei,
  isDate: () => nl,
  isElement: () => ks,
  isEmpty: () => _s,
  isEqual: () => Fs,
  isError: () => ol,
  isFinite: () => Ms,
  isFunction: () => me,
  isMap: () => Vl,
  isMatch: () => er,
  isNaN: () => Zi,
  isNull: () => Us,
  isNumber: () => cn,
  isObject: () => Xe,
  isRegExp: () => sl,
  isSet: () => Dl,
  isString: () => Ti,
  isSymbol: () => fn,
  isTypedArray: () => mn,
  isUndefined: () => Qi,
  isWeakMap: () => bl,
  isWeakSet: () => wl,
  iteratee: () => Pi,
  keys: () => se,
  last: () => Po,
  lastIndexOf: () => nu,
  map: () => it,
  mapObject: () => eo,
  matcher: () => Tt,
  matches: () => Tt,
  max: () => fr,
  memoize: () => uo,
  methods: () => Di,
  min: () => bo,
  mixin: () => Ir,
  negate: () => si,
  noop: () => ar,
  now: () => _t,
  object: () => Oo,
  omit: () => mu,
  once: () => Xl,
  pairs: () => Ws,
  partial: () => Gt,
  partition: () => hu,
  pick: () => xn,
  pluck: () => ai,
  property: () => ni,
  propertyOf: () => to,
  random: () => Ci,
  range: () => Uo,
  reduce: () => Sn,
  reduceRight: () => Io,
  reject: () => To,
  rest: () => li,
  restArguments: () => he,
  result: () => oo,
  sample: () => yr,
  select: () => ct,
  shuffle: () => Do,
  size: () => qo,
  some: () => Bn,
  sortBy: () => wo,
  sortedIndex: () => pr,
  tail: () => li,
  take: () => mr,
  tap: () => Js,
  template: () => so,
  templateSettings: () => Gl,
  throttle: () => po,
  times: () => io,
  toArray: () => hr,
  toPath: () => Vn,
  transpose: () => Ei,
  unescape: () => _l,
  union: () => bu,
  uniq: () => ki,
  unique: () => ki,
  uniqueId: () => ao,
  unzip: () => Ei,
  values: () => ot,
  where: () => Vo,
  without: () => Ru,
  wrap: () => fo,
  zip: () => wu,
});
var Eo = A(() => {
  Pe();
  nt();
  Yt();
  Pc();
  tl();
  il();
  Cc();
  Es();
  rl();
  jc();
  Ac();
  Oc();
  al();
  ll();
  Ns();
  ti();
  pt();
  Bs();
  Ec();
  dl();
  yl();
  Bc();
  ml();
  Gc();
  Hc();
  zc();
  Qc();
  Jc();
  xe();
  tr();
  bi();
  Kc();
  ql();
  Pl();
  Cl();
  Hs();
  jl();
  Xc();
  Zc();
  Yc();
  Ul();
  ef();
  tf();
  Zs();
  cl();
  Sl();
  Ol();
  Ys();
  rf();
  bn();
  nf();
  Nl();
  ro();
  sf();
  lf();
  Fl();
  uf();
  pf();
  df();
  cf();
  El();
  Pn();
  Hl();
  ff();
  hf();
  Ql();
  yf();
  vf();
  mf();
  gf();
  ho();
  If();
  Tf();
  Kl();
  Rf();
  Zl();
  mo();
  eu();
  tu();
  ru();
  Vf();
  su();
  bf();
  oi();
  Ui();
  Df();
  wf();
  dr();
  qf();
  Pf();
  Cf();
  cr();
  jf();
  Ro();
  Af();
  lu();
  Of();
  Uf();
  pu();
  kf();
  Ef();
  Sf();
  Nf();
  Bf();
  uu();
  Mf();
  vu();
  _f();
  Gf();
  gu();
  Ff();
  Iu();
  Lf();
  Wf();
  $f();
  Vu();
  Hf();
  zf();
  Tu();
  Du();
  Qf();
  Jf();
  Kf();
  Xf();
  Zf();
  eh();
});
var Cu,
  th,
  ih = A(() => {
    Eo();
    Eo();
    Cu = Ir(Pu);
    Cu._ = Cu;
    th = Cu;
  });
var rh = {};
Bo(rh, {
  VERSION: () => pn,
  after: () => vo,
  all: () => Nn,
  allKeys: () => vt,
  any: () => Bn,
  assign: () => ii,
  before: () => lr,
  bind: () => Cn,
  bindAll: () => zl,
  chain: () => lo,
  chunk: () => ko,
  clone: () => Qs,
  collect: () => it,
  compact: () => Co,
  compose: () => yo,
  constant: () => Yi,
  contains: () => Ze,
  countBy: () => fu,
  create: () => zs,
  debounce: () => co,
  default: () => th,
  defaults: () => Tn,
  defer: () => Jl,
  delay: () => jn,
  detect: () => Oi,
  difference: () => _n,
  drop: () => li,
  each: () => _e,
  escape: () => xl,
  every: () => Nn,
  extend: () => In,
  extendOwn: () => ii,
  filter: () => ct,
  find: () => Oi,
  findIndex: () => Ai,
  findKey: () => ur,
  findLastIndex: () => On,
  findWhere: () => go,
  first: () => mr,
  flatten: () => jo,
  foldl: () => Sn,
  foldr: () => Io,
  forEach: () => _e,
  functions: () => Di,
  get: () => sr,
  groupBy: () => du,
  has: () => Xs,
  head: () => mr,
  identity: () => ri,
  include: () => Ze,
  includes: () => Ze,
  indexBy: () => cu,
  indexOf: () => kn,
  initial: () => vr,
  inject: () => Sn,
  intersection: () => Ao,
  invert: () => rr,
  invoke: () => au,
  isArguments: () => Ri,
  isArray: () => et,
  isArrayBuffer: () => hn,
  isBoolean: () => Ji,
  isDataView: () => ei,
  isDate: () => nl,
  isElement: () => ks,
  isEmpty: () => _s,
  isEqual: () => Fs,
  isError: () => ol,
  isFinite: () => Ms,
  isFunction: () => me,
  isMap: () => Vl,
  isMatch: () => er,
  isNaN: () => Zi,
  isNull: () => Us,
  isNumber: () => cn,
  isObject: () => Xe,
  isRegExp: () => sl,
  isSet: () => Dl,
  isString: () => Ti,
  isSymbol: () => fn,
  isTypedArray: () => mn,
  isUndefined: () => Qi,
  isWeakMap: () => bl,
  isWeakSet: () => wl,
  iteratee: () => Pi,
  keys: () => se,
  last: () => Po,
  lastIndexOf: () => nu,
  map: () => it,
  mapObject: () => eo,
  matcher: () => Tt,
  matches: () => Tt,
  max: () => fr,
  memoize: () => uo,
  methods: () => Di,
  min: () => bo,
  mixin: () => Ir,
  negate: () => si,
  noop: () => ar,
  now: () => _t,
  object: () => Oo,
  omit: () => mu,
  once: () => Xl,
  pairs: () => Ws,
  partial: () => Gt,
  partition: () => hu,
  pick: () => xn,
  pluck: () => ai,
  property: () => ni,
  propertyOf: () => to,
  random: () => Ci,
  range: () => Uo,
  reduce: () => Sn,
  reduceRight: () => Io,
  reject: () => To,
  rest: () => li,
  restArguments: () => he,
  result: () => oo,
  sample: () => yr,
  select: () => ct,
  shuffle: () => Do,
  size: () => qo,
  some: () => Bn,
  sortBy: () => wo,
  sortedIndex: () => pr,
  tail: () => li,
  take: () => mr,
  tap: () => Js,
  template: () => so,
  templateSettings: () => Gl,
  throttle: () => po,
  times: () => io,
  toArray: () => hr,
  toPath: () => Vn,
  transpose: () => Ei,
  unescape: () => _l,
  union: () => bu,
  uniq: () => ki,
  unique: () => ki,
  uniqueId: () => ao,
  unzip: () => Ei,
  values: () => ot,
  where: () => Vo,
  without: () => Ru,
  wrap: () => fo,
  zip: () => wu,
});
var nh = A(() => {
  ih();
  Eo();
});
var ju = x(($5, Gn) => {
  var W5 = require("crypto");
  function sh(e, t) {
    for (; e.length < t; ) e = "0" + e;
    return e;
  }
  function uV(e) {
    for (var t = 0; t < e.length; t++) {
      for (var i = 1, a = 1; a < 8; a++) i = (i + ((e[t] >> a) & 1)) % 2;
      e[t] |= i & 1;
    }
    return e;
  }
  function pV(e) {
    var t = new Buffer(8);
    return (
      (t[0] = e[0] & 254),
      (t[1] = ((e[0] << 7) & 255) | (e[1] >> 1)),
      (t[2] = ((e[1] << 6) & 255) | (e[2] >> 2)),
      (t[3] = ((e[2] << 5) & 255) | (e[3] >> 3)),
      (t[4] = ((e[3] << 4) & 255) | (e[4] >> 4)),
      (t[5] = ((e[4] << 3) & 255) | (e[5] >> 5)),
      (t[6] = ((e[5] << 2) & 255) | (e[6] >> 6)),
      (t[7] = (e[6] << 1) & 255),
      t
    );
  }
  function dV(e) {
    var t = Buffer.isBuffer(t) ? t : new Buffer(e, "binary"),
      i = t.toString("hex").toUpperCase();
    return sh(i, 32);
  }
  Gn.exports.zeroextend = sh;
  Gn.exports.oddpar = uV;
  Gn.exports.expandkey = pV;
  Gn.exports.bintohex = dV;
});
var So = x((H5, Fn) => {
  var oh = require("crypto"),
    Tr = ju();
  function ah(e) {
    var t = e.substring(0, 14).toUpperCase(),
      i = Buffer.byteLength(t, "ascii"),
      a = new Buffer(14);
    a.write(t, 0, i, "ascii"), a.fill(0, i);
    var u = [
        Tr.oddpar(Tr.expandkey(a.slice(0, 7))),
        Tr.oddpar(Tr.expandkey(a.slice(7, 14))),
      ],
      l = new Buffer(16),
      r = 0,
      s = u.forEach(function (n) {
        var o = oh.createCipheriv("DES-ECB", n, ""),
          p = o.update("KGS!@#$%", "binary", "binary");
        l.write(p, r, r + 8, "binary"), (r += 8);
      });
    return l;
  }
  function lh(e) {
    var t = new Buffer(e, "ucs2"),
      i = oh.createHash("md4");
    return i.update(t), new Buffer(i.digest("binary"), "binary");
  }
  function cV(e) {
    return Tr.bintohex(ah(e));
  }
  function fV(e) {
    return Tr.bintohex(lh(e));
  }
  Fn.exports.nthashbuf = lh;
  Fn.exports.lmhashbuf = ah;
  Fn.exports.nthash = fV;
  Fn.exports.lmhash = cV;
});
var dh = x((qt) => {
  var hV = require("crypto"),
    uh = ju(),
    yV = So().lmhashbuf,
    vV = So().nthashbuf;
  function mV(e, t) {
    (e = e.toUpperCase()), (t = t.toUpperCase());
    var i = Buffer.byteLength(e, "ascii"),
      a = Buffer.byteLength(t, "ascii"),
      u = 0,
      l = new Buffer(32 + i + a);
    l.write("NTLMSSP", u, 7, "ascii"),
      (u += 7),
      l.writeUInt8(0, u),
      u++,
      l.writeUInt8(1, u),
      u++,
      l.fill(0, u, u + 3),
      (u += 3),
      l.writeUInt16LE(45571, u),
      (u += 2),
      l.fill(0, u, u + 2),
      (u += 2),
      l.writeUInt16LE(a, u),
      (u += 2),
      l.writeUInt16LE(a, u),
      (u += 2);
    var r = 32 + i;
    return (
      l.writeUInt16LE(r, u),
      (u += 2),
      l.fill(0, u, u + 2),
      (u += 2),
      l.writeUInt16LE(i, u),
      (u += 2),
      l.writeUInt16LE(i, u),
      (u += 2),
      l.writeUInt16LE(32, u),
      (u += 2),
      l.fill(0, u, u + 2),
      (u += 2),
      l.write(e, 32, i, "ascii"),
      l.write(t, r, a, "ascii"),
      l
    );
  }
  function gV(e) {
    var t = e.toString("ascii", 0, 7);
    if (e[7] !== 0 || t !== "NTLMSSP") throw new Error("magic was not NTLMSSP");
    var i = e.readUInt8(8);
    if (i !== 2) throw new Error("message was not NTLMSSP type 0x02");
    var a = e.slice(24, 32);
    return a;
  }
  function IV(e, t, i, a, u) {
    (t = t.toUpperCase()), (i = i.toUpperCase());
    var l = new Buffer(21);
    yV(u).copy(l), l.fill(0, 16);
    var r = new Buffer(21);
    vV(u).copy(r), r.fill(0, 16);
    var s = ph(l, a),
      n = ph(r, a),
      o = Buffer.byteLength(e, "ucs2"),
      p = Buffer.byteLength(t, "ucs2"),
      d = Buffer.byteLength(i, "ucs2"),
      c = 24,
      f = 24,
      h = 64,
      T = h + d,
      q = T + o,
      j = q + p,
      F = j + c,
      U = 0,
      z = 64 + d + o + p + c + f,
      W = new Buffer(z);
    return (
      W.write("NTLMSSP", U, 7, "ascii"),
      (U += 7),
      W.writeUInt8(0, U),
      U++,
      W.writeUInt8(3, U),
      U++,
      W.fill(0, U, U + 3),
      (U += 3),
      W.writeUInt16LE(c, U),
      (U += 2),
      W.writeUInt16LE(c, U),
      (U += 2),
      W.writeUInt16LE(j, U),
      (U += 2),
      W.fill(0, U, U + 2),
      (U += 2),
      W.writeUInt16LE(f, U),
      (U += 2),
      W.writeUInt16LE(f, U),
      (U += 2),
      W.writeUInt16LE(F, U),
      (U += 2),
      W.fill(0, U, U + 2),
      (U += 2),
      W.writeUInt16LE(d, U),
      (U += 2),
      W.writeUInt16LE(d, U),
      (U += 2),
      W.writeUInt16LE(h, U),
      (U += 2),
      W.fill(0, U, U + 2),
      (U += 2),
      W.writeUInt16LE(o, U),
      (U += 2),
      W.writeUInt16LE(o, U),
      (U += 2),
      W.writeUInt16LE(T, U),
      (U += 2),
      W.fill(0, U, U + 2),
      (U += 2),
      W.writeUInt16LE(p, U),
      (U += 2),
      W.writeUInt16LE(p, U),
      (U += 2),
      W.writeUInt16LE(q, U),
      (U += 2),
      W.fill(0, U, U + 6),
      (U += 6),
      W.writeUInt16LE(z, U),
      (U += 2),
      W.fill(0, U, U + 2),
      (U += 2),
      W.writeUInt16LE(33281, U),
      (U += 2),
      W.fill(0, U, U + 2),
      (U += 2),
      W.write(i, h, d, "ucs2"),
      W.write(e, T, o, "ucs2"),
      W.write(t, q, p, "ucs2"),
      s.copy(W, j, 0, c),
      n.copy(W, F, 0, f),
      W
    );
  }
  function ph(e, t) {
    for (var i = new Buffer(24), a = 0; a < 3; a++) {
      var u = uh.oddpar(uh.expandkey(e.slice(a * 7, a * 7 + 7))),
        l = hV.createCipheriv("DES-ECB", u, ""),
        r = l.update(t.toString("binary"), "binary", "binary");
      i.write(r, a * 8, a * 8 + 8, "binary");
    }
    return i;
  }
  qt.encodeType1 = mV;
  qt.decodeType2 = gV;
  qt.encodeType3 = IV;
  qt.challengeHeader = function (e, t) {
    return "NTLM " + qt.encodeType1(e, t).toString("base64");
  };
  qt.responseHeader = function (e, t, i, a, u) {
    var l = new Buffer(
        (e.headers["www-authenticate"].match(/^NTLM\s+(.+?)(,|\s+|$)/) ||
          [])[1],
        "base64"
      ),
      r = require("url").parse(t).hostname;
    return (
      "NTLM " + qt.encodeType3(a, r, i, qt.decodeType2(l), u).toString("base64")
    );
  };
  qt.smbhash = So();
});
var ch = x((Uu) => {
  "use strict";
  Object.defineProperty(Uu, "__esModule", { value: !0 });
  var TV = require("http"),
    RV = require("https"),
    Rr = (nh(), zu(rh)),
    Au = dh(),
    Ou = class {
      constructor(t, i, a, u) {
        (this._ntlmOptions = {}),
          (this._ntlmOptions.username = t),
          (this._ntlmOptions.password = i),
          (this._ntlmOptions.domain = u || ""),
          (this._ntlmOptions.workstation = a || "");
      }
      prepareRequest(t) {
        t.agent && delete t.agent;
      }
      canHandleAuthentication(t) {
        if (t && t.message && t.message.statusCode === 401) {
          let i = t.message.headers["www-authenticate"];
          return i && i.split(", ").indexOf("NTLM") >= 0;
        }
        return !1;
      }
      handleAuthentication(t, i, a) {
        return new Promise((u, l) => {
          let r = function (s, n) {
            s && l(s),
              n.readBody().then(() => {
                u(n);
              });
          };
          this.handleAuthenticationPrivate(t, i, a, r);
        });
      }
      handleAuthenticationPrivate(t, i, a, u) {
        (i.options = Rr.extend(i.options, {
          username: this._ntlmOptions.username,
          password: this._ntlmOptions.password,
          domain: this._ntlmOptions.domain,
          workstation: this._ntlmOptions.workstation,
        })),
          (i.options.agent = t.isSsl
            ? new RV.Agent({ keepAlive: !0 })
            : new TV.Agent({ keepAlive: !0 }));
        let l = this;
        this.sendType1Message(t, i, a, function (r, s) {
          if (r) return u(r, null, null);
          s.readBody().then(() => {
            setImmediate(function () {
              l.sendType3Message(t, i, a, s, u);
            });
          });
        });
      }
      sendType1Message(t, i, a, u) {
        let s = {
            headers: {
              Connection: "keep-alive",
              Authorization: `NTLM ${Au.encodeType1(
                this._ntlmOptions.workstation,
                this._ntlmOptions.domain
              ).toString("base64")}`,
            },
            timeout: i.options.timeout || 0,
            agent: i.httpModule,
          },
          n = {};
        return (
          (n.httpModule = i.httpModule),
          (n.parsedUrl = i.parsedUrl),
          (n.options = Rr.extend(s, Rr.omit(i.options, "headers"))),
          t.requestRawWithCallback(n, a, u)
        );
      }
      sendType3Message(t, i, a, u, l) {
        if (!u.message.headers && !u.message.headers["www-authenticate"])
          throw new Error(
            "www-authenticate not found on response of second request"
          );
        let r = /^NTLM\s+(.+?)(,|\s+|$)/,
          s = Buffer.from(
            (u.message.headers["www-authenticate"].match(r) || [])[1],
            "base64"
          ),
          n;
        try {
          n = Au.decodeType2(s);
        } catch (c) {
          throw new Error(
            `Decoding Server's Challenge to Obtain Type2Message failed with error: ${c.message}`
          );
        }
        let p = {
            headers: {
              Authorization: `NTLM ${Au.encodeType3(
                this._ntlmOptions.username,
                this._ntlmOptions.workstation,
                this._ntlmOptions.domain,
                n,
                this._ntlmOptions.password
              ).toString("base64")}`,
              Connection: "Close",
            },
            agent: i.httpModule,
          },
          d = {};
        return (
          (d.httpModule = i.httpModule),
          (d.parsedUrl = i.parsedUrl),
          (p.headers = Rr.extend(p.headers, i.options.headers)),
          (d.options = Rr.extend(p, Rr.omit(i.options, "headers"))),
          t.requestRawWithCallback(d, a, l)
        );
      }
    };
  Uu.NtlmCredentialHandler = Ou;
});
var fh = x((Eu) => {
  "use strict";
  Object.defineProperty(Eu, "__esModule", { value: !0 });
  var ku = class {
    constructor(t, i) {
      (this.token = t), (this.allowCrossOriginAuthentication = i);
    }
    prepareRequest(t) {
      this.origin || (this.origin = t.host),
        (this.origin === t.host || this.allowCrossOriginAuthentication) &&
          (t.headers.Authorization = `Basic ${Buffer.from(
            `PAT:${this.token}`
          ).toString("base64")}`),
        (t.headers["X-TFS-FedAuthRedirect"] = "Suppress");
    }
    canHandleAuthentication(t) {
      return !1;
    }
    handleAuthentication(t, i, a) {
      return null;
    }
  };
  Eu.PersonalAccessTokenCredentialHandler = ku;
});
var Ln = x((Vr) => {
  "use strict";
  Object.defineProperty(Vr, "__esModule", { value: !0 });
  var VV = gc();
  Vr.BasicCredentialHandler = VV.BasicCredentialHandler;
  var bV = Ic();
  Vr.BearerCredentialHandler = bV.BearerCredentialHandler;
  var DV = ch();
  Vr.NtlmCredentialHandler = DV.NtlmCredentialHandler;
  var wV = fh();
  Vr.PersonalAccessTokenCredentialHandler =
    wV.PersonalAccessTokenCredentialHandler;
});
var hh = x((Nu) => {
  "use strict";
  Object.defineProperty(Nu, "__esModule", { value: !0 });
  var qV = Ln(),
    Su = class extends qV.BasicCredentialHandler {
      constructor(t, i, a = !0) {
        super(t, i, a);
      }
    };
  Nu.BasicCredentialHandler = Su;
});
var yh = x((Mu) => {
  "use strict";
  Object.defineProperty(Mu, "__esModule", { value: !0 });
  var PV = Ln(),
    Bu = class extends PV.BearerCredentialHandler {
      constructor(t, i = !0) {
        super(t, i);
      }
    };
  Mu.BearerCredentialHandler = Bu;
});
var vh = x((_u) => {
  "use strict";
  Object.defineProperty(_u, "__esModule", { value: !0 });
  var CV = Ln(),
    xu = class extends CV.NtlmCredentialHandler {
      constructor(t, i, a, u) {
        super(t, i, a, u);
      }
    };
  _u.NtlmCredentialHandler = xu;
});
var mh = x((Fu) => {
  "use strict";
  Object.defineProperty(Fu, "__esModule", { value: !0 });
  var jV = Ln(),
    Gu = class extends jV.PersonalAccessTokenCredentialHandler {
      constructor(t, i = !0) {
        super(t, i);
      }
    };
  Fu.PersonalAccessTokenCredentialHandler = Gu;
});
var wh = x((Pt) => {
  "use strict";
  var ge =
    (Pt && Pt.__awaiter) ||
    function (e, t, i, a) {
      return new (i || (i = Promise))(function (u, l) {
        function r(o) {
          try {
            n(a.next(o));
          } catch (p) {
            l(p);
          }
        }
        function s(o) {
          try {
            n(a.throw(o));
          } catch (p) {
            l(p);
          }
        }
        function n(o) {
          o.done
            ? u(o.value)
            : new i(function (p) {
                p(o.value);
              }).then(r, s);
        }
        n((a = a.apply(e, t || [])).next());
      });
    };
  Object.defineProperty(Pt, "__esModule", { value: !0 });
  var gh = Td(),
    AV = Vd(),
    OV = Dd(),
    UV = qd(),
    kV = Cd(),
    EV = kd(),
    Ih = Sd(),
    Th = Nd(),
    SV = Md(),
    NV = Gd(),
    BV = Fd(),
    MV = Wd(),
    xV = Hd(),
    _V = Jd(),
    GV = Xd(),
    FV = ec(),
    LV = tc(),
    WV = ic(),
    $V = nc(),
    HV = ac(),
    zV = dc(),
    Rh = fc(),
    QV = yc(),
    JV = mc(),
    KV = hh(),
    XV = yh(),
    ZV = vh(),
    YV = mh(),
    eb = ga(),
    tb = _o(),
    ib = require("crypto"),
    Lu = require("fs"),
    Vh = require("os"),
    rb = require("url"),
    nb = require("path"),
    bh = typeof window < "u";
  function sb(e, t, i) {
    return new KV.BasicCredentialHandler(e, t, i);
  }
  Pt.getBasicHandler = sb;
  function ob(e, t, i, a) {
    return new ZV.NtlmCredentialHandler(e, t, i, a);
  }
  Pt.getNtlmHandler = ob;
  function $u(e, t) {
    return new XV.BearerCredentialHandler(e, t);
  }
  Pt.getBearerHandler = $u;
  function Dh(e, t) {
    return new YV.PersonalAccessTokenCredentialHandler(e, t);
  }
  Pt.getPersonalAccessTokenHandler = Dh;
  function ab(e, t) {
    return e.length === 52 ? Dh(e, t) : $u(e, t);
  }
  Pt.getHandlerFromToken = ab;
  var Wu = class {
    constructor(t, i, a, u) {
      if (
        ((this.isNoProxyHost = function (s) {
          if (!process.env.no_proxy) return !1;
          let n = (process.env.no_proxy || "")
              .split(",")
              .map((p) => p.toLowerCase()),
            o = rb.parse(s).host.toLowerCase();
          return n.indexOf(o) !== -1;
        }),
        (this.serverUrl = t),
        (this.authHandler = i),
        (this.options = a || {}),
        !this.isNoProxyHost(this.serverUrl) &&
          (!this.options.proxy || !this.options.proxy.proxyUrl) &&
          global._vsts_task_lib_proxy)
      ) {
        let s = {
          proxyUrl: global._vsts_task_lib_proxy_url,
          proxyUsername: global._vsts_task_lib_proxy_username,
          proxyPassword: this._readTaskLibSecrets(
            global._vsts_task_lib_proxy_password
          ),
          proxyBypassHosts: JSON.parse(
            global._vsts_task_lib_proxy_bypass || "[]"
          ),
        };
        this.options.proxy = s;
      }
      if (!this.options.cert && global._vsts_task_lib_cert) {
        let s = {
          caFile: global._vsts_task_lib_cert_ca,
          certFile: global._vsts_task_lib_cert_clientcert,
          keyFile: global._vsts_task_lib_cert_key,
          passphrase: this._readTaskLibSecrets(
            global._vsts_task_lib_cert_passphrase
          ),
        };
        this.options.cert = s;
      }
      this.options.ignoreSslError ||
        (this.options.ignoreSslError =
          !!global._vsts_task_lib_skip_cert_validation);
      let l,
        r = "azure-devops-node-api";
      if (bh)
        u
          ? (l = `${u.productName}/${u.productVersion} (${r}; ${window.navigator.userAgent})`)
          : (l = `${r} (${window.navigator.userAgent})`);
      else {
        let s = "unknown",
          n = nb.resolve(__dirname, "package.json");
        Lu.existsSync(n) &&
          (s = JSON.parse(Lu.readFileSync(n, "utf8")).version);
        let o = Vh.platform(),
          p = Vh.release();
        u
          ? (l = `${u.productName}/${u.productVersion} (${r} ${s}; ${o} ${p})`)
          : (l = `${r}/${s} (${o} ${p})`);
      }
      (this.rest = new eb.RestClient(
        l,
        null,
        [this.authHandler],
        this.options
      )),
        (this.vsoClient = new tb.VsoClient(t, this.rest));
    }
    static createWithBearerToken(t, i, a) {
      let u = $u(i);
      return new this(t, u, a);
    }
    connect() {
      return ge(this, void 0, void 0, function* () {
        return new Promise((t, i) =>
          ge(this, void 0, void 0, function* () {
            try {
              let a;
              (a = yield this.rest.get(
                this.vsoClient.resolveUrl("/_apis/connectionData")
              )),
                t(a.result);
            } catch (a) {
              i(a);
            }
          })
        );
      });
    }
    getBuildApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            gh.BuildApi.RESOURCE_AREA_ID
          )),
          (i = i || [this.authHandler]),
          new gh.BuildApi(t, i, this.options)
        );
      });
    }
    getCoreApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "79134c72-4a58-4b42-976c-04e7115f32bf"
          )),
          (i = i || [this.authHandler]),
          new AV.CoreApi(t, i, this.options)
        );
      });
    }
    getDashboardApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "31c84e0a-3ece-48fd-a29d-100849af99ba"
          )),
          (i = i || [this.authHandler]),
          new OV.DashboardApi(t, i, this.options)
        );
      });
    }
    getExtensionManagementApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "6c2b0933-3600-42ae-bf8b-93d4f7e83594"
          )),
          (i = i || [this.authHandler]),
          new UV.ExtensionManagementApi(t, i, this.options)
        );
      });
    }
    getFeatureManagementApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(t || this.serverUrl, "")),
          (i = i || [this.authHandler]),
          new kV.FeatureManagementApi(t, i, this.options)
        );
      });
    }
    getFileContainerApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(t || this.serverUrl, "")),
          (i = i || [this.authHandler]),
          new EV.FileContainerApi(t, i, this.options)
        );
      });
    }
    getGalleryApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            Ih.GalleryApi.RESOURCE_AREA_ID
          )),
          (i = i || [this.authHandler]),
          new Ih.GalleryApi(t, i, this.options)
        );
      });
    }
    getGitApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            Th.GitApi.RESOURCE_AREA_ID
          )),
          (i = i || [this.authHandler]),
          new Th.GitApi(t, i, this.options)
        );
      });
    }
    getLocationsApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        let a = Object.assign({}, this.options);
        return (
          (a.allowRetries = !0),
          (a.maxRetries = 5),
          (t = (yield t) || this.serverUrl),
          (i = i || [this.authHandler]),
          new SV.LocationsApi(t, i, a)
        );
      });
    }
    getNotificationApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(t || this.serverUrl, "")),
          (i = i || [this.authHandler]),
          new NV.NotificationApi(t, i, this.options)
        );
      });
    }
    getPolicyApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "fb13a388-40dd-4a04-b530-013a739c72ef"
          )),
          (i = i || [this.authHandler]),
          new BV.PolicyApi(t, i, this.options)
        );
      });
    }
    getProfileApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "8ccfef3d-2b87-4e99-8ccb-66e343d2daa8"
          )),
          (i = i || [this.authHandler]),
          new MV.ProfileApi(t, i, this.options)
        );
      });
    }
    getProjectAnalysisApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "7658fa33-b1bf-4580-990f-fac5896773d3"
          )),
          (i = i || [this.authHandler]),
          new xV.ProjectAnalysisApi(t, i, this.options)
        );
      });
    }
    getSecurityRolesApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(t || this.serverUrl, "")),
          (i = i || [this.authHandler]),
          new GV.SecurityRolesApi(t, i, this.options)
        );
      });
    }
    getReleaseApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "efc2f575-36ef-48e9-b672-0c6fb4a48ac5"
          )),
          (i = i || [this.authHandler]),
          new _V.ReleaseApi(t, i, this.options)
        );
      });
    }
    getTaskApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(t || this.serverUrl, "")),
          (i = i || [this.authHandler]),
          new LV.TaskApi(t, i, this.options)
        );
      });
    }
    getTaskAgentApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "a85b8835-c1a1-4aac-ae97-1c3d0ba72dbd"
          )),
          (i = i || [this.authHandler]),
          new FV.TaskAgentApi(t, i, this.options)
        );
      });
    }
    getTestApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "c2aa639c-3ccc-4740-b3b6-ce2a1e1d984e"
          )),
          (i = i || [this.authHandler]),
          new WV.TestApi(t, i, this.options)
        );
      });
    }
    getTfvcApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "8aa40520-446d-40e6-89f6-9c9f9ce44c48"
          )),
          (i = i || [this.authHandler]),
          new $V.TfvcApi(t, i, this.options)
        );
      });
    }
    getWikiApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "bf7d82a0-8aa5-4613-94ef-6172a5ea01f3"
          )),
          (i = i || [this.authHandler]),
          new HV.WikiApi(t, i, this.options)
        );
      });
    }
    getWorkApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "1d4f49f9-02b9-4e26-b826-2cdb6195f2a9"
          )),
          (i = i || [this.authHandler]),
          new zV.WorkApi(t, i, this.options)
        );
      });
    }
    getWorkItemTrackingApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            Rh.WorkItemTrackingApi.RESOURCE_AREA_ID
          )),
          (i = i || [this.authHandler]),
          new Rh.WorkItemTrackingApi(t, i, this.options)
        );
      });
    }
    getWorkItemTrackingProcessApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "5264459e-e5e0-4bd8-b118-0985e68a4ec5"
          )),
          (i = i || [this.authHandler]),
          new QV.WorkItemTrackingProcessApi(t, i, this.options)
        );
      });
    }
    getWorkItemTrackingProcessDefinitionApi(t, i) {
      return ge(this, void 0, void 0, function* () {
        return (
          (t = yield this._getResourceAreaUrl(
            t || this.serverUrl,
            "5264459e-e5e0-4bd8-b118-0985e68a4ec5"
          )),
          (i = i || [this.authHandler]),
          new JV.WorkItemTrackingProcessDefinitionsApi(t, i, this.options)
        );
      });
    }
    _getResourceAreaUrl(t, i) {
      return ge(this, void 0, void 0, function* () {
        if (!i) return t;
        let a = yield this._getResourceAreas();
        if (a === void 0)
          throw new Error(
            `Failed to retrieve resource areas ' + 'from server: ${t}`
          );
        if (!a || a.length === 0 || a.count === 0) return t;
        for (var u of a)
          if (u.id.toLowerCase() === i.toLowerCase()) return u.locationUrl;
        throw new Error(
          `Could not find information for resource area ${i} ' + 'from server: ${t}`
        );
      });
    }
    _getResourceAreas() {
      return ge(this, void 0, void 0, function* () {
        if (!this._resourceAreas) {
          let t = yield this.getLocationsApi();
          this._resourceAreas = yield t.getResourceAreas();
        }
        return this._resourceAreas;
      });
    }
    _readTaskLibSecrets(t) {
      if (bh) throw new Error("Browsers can't securely keep secrets");
      if (t && t.indexOf(":") > 0) {
        let i = t.split(":", 2),
          a = new Buffer(i[0], "base64").toString("utf8"),
          u = new Buffer(Lu.readFileSync(a, "utf8"), "base64"),
          l = new Buffer(i[1], "base64").toString("utf8"),
          r = ib.createDecipher("aes-256-ctr", u),
          s = r.update(l, "hex", "utf8");
        return (s += r.final("utf8")), s;
      }
    }
  };
  Pt.WebApi = Wu;
});
var db = {};
Bo(db, { createBug: () => pb });
module.exports = zu(db);
var No = Uh(wh());
var qh = "Bug",
  lb = "My new bug",
  ub = "This is my new bug created using TypeScript.",
  pb = (e) =>
    Qu(void 0, null, function* () {
      let { token: t, project: i, organization: a } = e,
        u = `https://dev.azure.com/${a}`,
        l = No.getPersonalAccessTokenHandler(t != null ? t : ""),
        r = new No.WebApi(u, l);
      console.log(`connection az: ${JSON.stringify(r)}`);
      let s = yield r.getWorkItemTrackingApi();
      console.log(`client connection az: ${JSON.stringify(s)}`);
      let n = [
        { op: "add", path: "/fields/System.Title", value: lb },
        { op: "add", path: "/fields/System.Description", value: ub },
        { op: "add", path: "/fields/System.WorkItemType", value: qh },
      ];
      try {
        let o = yield s.createWorkItem(null, n, i, qh);
        console.log(`[createBug] Response from client, ${o}`);
      } catch (o) {
        throw (console.error("[createBug] error", o), o);
      }
    });
0 && (module.exports = { createBug });
